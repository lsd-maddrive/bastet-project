   1               		.file	"avr_subscriber.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",@progbits,_ZNK8std_msgs4Time9serializeEPh,com
  12               		.weak	_ZNK8std_msgs4Time9serializeEPh
  14               	_ZNK8std_msgs4Time9serializeEPh:
  15               	.LFB33:
  16               		.file 1 "./ros_lib/std_msgs/Time.h"
   1:./ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./ros_lib/std_msgs/Time.h **** 
   4:./ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./ros_lib/std_msgs/Time.h **** 
  10:./ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./ros_lib/std_msgs/Time.h **** {
  12:./ros_lib/std_msgs/Time.h **** 
  13:./ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./ros_lib/std_msgs/Time.h ****   {
  15:./ros_lib/std_msgs/Time.h ****     public:
  16:./ros_lib/std_msgs/Time.h ****       typedef ros::Time _data_type;
  17:./ros_lib/std_msgs/Time.h ****       _data_type data;
  18:./ros_lib/std_msgs/Time.h **** 
  19:./ros_lib/std_msgs/Time.h ****     Time():
  20:./ros_lib/std_msgs/Time.h ****       data()
  21:./ros_lib/std_msgs/Time.h ****     {
  22:./ros_lib/std_msgs/Time.h ****     }
  23:./ros_lib/std_msgs/Time.h **** 
  24:./ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const override
  17               		.loc 1 24 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24 0000 DC01      		movw r26,r24
  25 0002 FB01      		movw r30,r22
  26               	.LVL1:
  25:./ros_lib/std_msgs/Time.h ****     {
  26:./ros_lib/std_msgs/Time.h ****       int offset = 0;
  27:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  27               		.loc 1 27 0
  28 0004 1296      		adiw r26,2
  29 0006 8C91      		ld r24,X
  30 0008 1297      		sbiw r26,2
  31               	.LVL2:
  32 000a 8083      		st Z,r24
  28:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  33               		.loc 1 28 0
  34 000c 1396      		adiw r26,3
  35 000e 8C91      		ld r24,X
  36 0010 1397      		sbiw r26,3
  37 0012 8183      		std Z+1,r24
  29:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  38               		.loc 1 29 0
  39 0014 1496      		adiw r26,4
  40 0016 8C91      		ld r24,X
  41 0018 1497      		sbiw r26,4
  42 001a 8283      		std Z+2,r24
  30:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  43               		.loc 1 30 0
  44 001c 1596      		adiw r26,5
  45 001e 8C91      		ld r24,X
  46 0020 1597      		sbiw r26,5
  47 0022 8383      		std Z+3,r24
  48               	.LVL3:
  31:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  32:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49               		.loc 1 32 0
  50 0024 1696      		adiw r26,6
  51 0026 8C91      		ld r24,X
  52 0028 1697      		sbiw r26,6
  53 002a 8483      		std Z+4,r24
  33:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  54               		.loc 1 33 0
  55 002c 1796      		adiw r26,7
  56 002e 8C91      		ld r24,X
  57 0030 1797      		sbiw r26,7
  58 0032 8583      		std Z+5,r24
  34:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  59               		.loc 1 34 0
  60 0034 1896      		adiw r26,8
  61 0036 8C91      		ld r24,X
  62 0038 1897      		sbiw r26,8
  63 003a 8683      		std Z+6,r24
  35:./ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64               		.loc 1 35 0
  65 003c 1996      		adiw r26,9
  66 003e 8C91      		ld r24,X
  67 0040 8783      		std Z+7,r24
  68               	.LVL4:
  36:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  37:./ros_lib/std_msgs/Time.h ****       return offset;
  38:./ros_lib/std_msgs/Time.h ****     }
  69               		.loc 1 38 0
  70 0042 88E0      		ldi r24,lo8(8)
  71 0044 90E0      		ldi r25,0
  72 0046 0895      		ret
  73               		.cfi_endproc
  74               	.LFE33:
  76               		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",@progbits,_ZN8std_msgs4Time11deserializeEPh
  77               		.weak	_ZN8std_msgs4Time11deserializeEPh
  79               	_ZN8std_msgs4Time11deserializeEPh:
  80               	.LFB34:
  39:./ros_lib/std_msgs/Time.h **** 
  40:./ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer) override
  81               		.loc 1 40 0
  82               		.cfi_startproc
  83               	.LVL5:
  84               	/* prologue: function */
  85               	/* frame size = 0 */
  86               	/* stack size = 0 */
  87               	.L__stack_usage = 0
  88 0000 FC01      		movw r30,r24
  89 0002 DB01      		movw r26,r22
  90               	.LVL6:
  41:./ros_lib/std_msgs/Time.h ****     {
  42:./ros_lib/std_msgs/Time.h ****       int offset = 0;
  43:./ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  91               		.loc 1 43 0
  92 0004 4C91      		ld r20,X
  93 0006 50E0      		ldi r21,0
  94 0008 60E0      		ldi r22,0
  95 000a 70E0      		ldi r23,0
  96               	.LVL7:
  97 000c 4283      		std Z+2,r20
  98 000e 5383      		std Z+3,r21
  99 0010 6483      		std Z+4,r22
 100 0012 7583      		std Z+5,r23
  44:./ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 101               		.loc 1 44 0
 102 0014 1196      		adiw r26,1
 103 0016 8C91      		ld r24,X
 104 0018 1197      		sbiw r26,1
 105               	.LVL8:
 106 001a 582B      		or r21,r24
 107 001c 4283      		std Z+2,r20
 108 001e 5383      		std Z+3,r21
 109 0020 6483      		std Z+4,r22
 110 0022 7583      		std Z+5,r23
  45:./ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 111               		.loc 1 45 0
 112 0024 1296      		adiw r26,2
 113 0026 8C91      		ld r24,X
 114 0028 1297      		sbiw r26,2
 115 002a 682B      		or r22,r24
 116 002c 4283      		std Z+2,r20
 117 002e 5383      		std Z+3,r21
 118 0030 6483      		std Z+4,r22
 119 0032 7583      		std Z+5,r23
  46:./ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 120               		.loc 1 46 0
 121 0034 1396      		adiw r26,3
 122 0036 8C91      		ld r24,X
 123 0038 1397      		sbiw r26,3
 124 003a 782B      		or r23,r24
 125 003c 4283      		std Z+2,r20
 126 003e 5383      		std Z+3,r21
 127 0040 6483      		std Z+4,r22
 128 0042 7583      		std Z+5,r23
 129               	.LVL9:
  47:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  48:./ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 130               		.loc 1 48 0
 131 0044 1496      		adiw r26,4
 132 0046 4C91      		ld r20,X
 133 0048 1497      		sbiw r26,4
 134 004a 50E0      		ldi r21,0
 135 004c 60E0      		ldi r22,0
 136 004e 70E0      		ldi r23,0
 137 0050 4683      		std Z+6,r20
 138 0052 5783      		std Z+7,r21
 139 0054 6087      		std Z+8,r22
 140 0056 7187      		std Z+9,r23
  49:./ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 141               		.loc 1 49 0
 142 0058 1596      		adiw r26,5
 143 005a 8C91      		ld r24,X
 144 005c 1597      		sbiw r26,5
 145 005e 582B      		or r21,r24
 146 0060 4683      		std Z+6,r20
 147 0062 5783      		std Z+7,r21
 148 0064 6087      		std Z+8,r22
 149 0066 7187      		std Z+9,r23
  50:./ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 150               		.loc 1 50 0
 151 0068 1696      		adiw r26,6
 152 006a 8C91      		ld r24,X
 153 006c 1697      		sbiw r26,6
 154 006e 682B      		or r22,r24
 155 0070 4683      		std Z+6,r20
 156 0072 5783      		std Z+7,r21
 157 0074 6087      		std Z+8,r22
 158 0076 7187      		std Z+9,r23
  51:./ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 159               		.loc 1 51 0
 160 0078 1796      		adiw r26,7
 161 007a 8C91      		ld r24,X
 162 007c 782B      		or r23,r24
 163 007e 4683      		std Z+6,r20
 164 0080 5783      		std Z+7,r21
 165 0082 6087      		std Z+8,r22
 166 0084 7187      		std Z+9,r23
 167               	.LVL10:
  52:./ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  53:./ros_lib/std_msgs/Time.h ****      return offset;
  54:./ros_lib/std_msgs/Time.h ****     }
 168               		.loc 1 54 0
 169 0086 88E0      		ldi r24,lo8(8)
 170 0088 90E0      		ldi r25,0
 171 008a 0895      		ret
 172               		.cfi_endproc
 173               	.LFE34:
 175               		.section	.rodata.str1.1,"aMS",@progbits,1
 176               	.LC0:
 177 0000 7374 645F 		.string	"std_msgs/Time"
 177      6D73 6773 
 177      2F54 696D 
 177      6500 
 178               		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",@progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 179               		.weak	_ZN8std_msgs4Time7getTypeEv
 181               	_ZN8std_msgs4Time7getTypeEv:
 182               	.LFB35:
  55:./ros_lib/std_msgs/Time.h **** 
  56:./ros_lib/std_msgs/Time.h ****     virtual const char * getType() override { return "std_msgs/Time"; };
 183               		.loc 1 56 0
 184               		.cfi_startproc
 185               	.LVL11:
 186               	/* prologue: function */
 187               	/* frame size = 0 */
 188               	/* stack size = 0 */
 189               	.L__stack_usage = 0
 190               		.loc 1 56 0
 191 0000 80E0      		ldi r24,lo8(.LC0)
 192 0002 90E0      		ldi r25,hi8(.LC0)
 193               	.LVL12:
 194 0004 0895      		ret
 195               		.cfi_endproc
 196               	.LFE35:
 198               		.section	.rodata.str1.1
 199               	.LC1:
 200 000e 6364 3731 		.string	"cd7166c74c552c311fbcc2fe5a7bc289"
 200      3636 6337 
 200      3463 3535 
 200      3263 3331 
 200      3166 6263 
 201               		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",@progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 202               		.weak	_ZN8std_msgs4Time6getMD5Ev
 204               	_ZN8std_msgs4Time6getMD5Ev:
 205               	.LFB36:
  57:./ros_lib/std_msgs/Time.h ****     virtual const char * getMD5() override { return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 206               		.loc 1 57 0
 207               		.cfi_startproc
 208               	.LVL13:
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
 213               		.loc 1 57 0
 214 0000 80E0      		ldi r24,lo8(.LC1)
 215 0002 90E0      		ldi r25,hi8(.LC1)
 216               	.LVL14:
 217 0004 0895      		ret
 218               		.cfi_endproc
 219               	.LFE36:
 221               		.section	.rodata.str1.1
 222               	.LC2:
 223 002f 726F 7373 		.string	"rosserial_msgs/TopicInfo"
 223      6572 6961 
 223      6C5F 6D73 
 223      6773 2F54 
 223      6F70 6963 
 224               		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",@progbits,_ZN14rosserial_msgs9TopicIn
 225               		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 227               	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 228               	.LFB42:
 229               		.file 2 "./ros_lib/rosserial_msgs/TopicInfo.h"
   1:./ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef uint16_t _topic_id_type;
  16:./ros_lib/rosserial_msgs/TopicInfo.h ****       _topic_id_type topic_id;
  17:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef const char* _topic_name_type;
  18:./ros_lib/rosserial_msgs/TopicInfo.h ****       _topic_name_type topic_name;
  19:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef const char* _message_type_type;
  20:./ros_lib/rosserial_msgs/TopicInfo.h ****       _message_type_type message_type;
  21:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef const char* _md5sum_type;
  22:./ros_lib/rosserial_msgs/TopicInfo.h ****       _md5sum_type md5sum;
  23:./ros_lib/rosserial_msgs/TopicInfo.h ****       typedef int32_t _buffer_size_type;
  24:./ros_lib/rosserial_msgs/TopicInfo.h ****       _buffer_size_type buffer_size;
  25:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  26:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  27:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  28:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  29:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  30:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  31:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  32:./ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  33:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  34:./ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  35:./ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  36:./ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  37:./ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  38:./ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  39:./ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  40:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
  41:./ros_lib/rosserial_msgs/TopicInfo.h ****     }
  42:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  43:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const override
  44:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
  45:./ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  46:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  47:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  48:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  49:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  50:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
  51:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  53:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  54:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  55:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_message_type);
  56:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  58:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  59:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  60:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_md5sum);
  61:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  62:./ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  63:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  64:./ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  65:./ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  66:./ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  67:./ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  68:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  69:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  70:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  71:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  72:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  73:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  74:./ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  75:./ros_lib/rosserial_msgs/TopicInfo.h ****     }
  76:./ros_lib/rosserial_msgs/TopicInfo.h **** 
  77:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer) override
  78:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
  79:./ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  80:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  81:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  82:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  83:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  84:./ros_lib/rosserial_msgs/TopicInfo.h ****       arrToVar(length_topic_name, (inbuffer + offset));
  85:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  87:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  88:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
  89:./ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  90:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  91:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  92:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  93:./ros_lib/rosserial_msgs/TopicInfo.h ****       arrToVar(length_message_type, (inbuffer + offset));
  94:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  96:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  97:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
  98:./ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  99:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 100:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 101:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
 102:./ros_lib/rosserial_msgs/TopicInfo.h ****       arrToVar(length_md5sum, (inbuffer + offset));
 103:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 105:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 106:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 107:./ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 108:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 109:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 110:./ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 111:./ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 112:./ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 113:./ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 114:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 115:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 116:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 117:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 118:./ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 119:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 120:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 121:./ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 122:./ros_lib/rosserial_msgs/TopicInfo.h ****     }
 123:./ros_lib/rosserial_msgs/TopicInfo.h **** 
 124:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual const char * getType() override { return "rosserial_msgs/TopicInfo"; };
 230               		.loc 2 124 0
 231               		.cfi_startproc
 232               	.LVL15:
 233               	/* prologue: function */
 234               	/* frame size = 0 */
 235               	/* stack size = 0 */
 236               	.L__stack_usage = 0
 237               		.loc 2 124 0
 238 0000 80E0      		ldi r24,lo8(.LC2)
 239 0002 90E0      		ldi r25,hi8(.LC2)
 240               	.LVL16:
 241 0004 0895      		ret
 242               		.cfi_endproc
 243               	.LFE42:
 245               		.section	.rodata.str1.1
 246               	.LC3:
 247 0048 3061 6435 		.string	"0ad51f88fc44892f8c10684077646005"
 247      3166 3838 
 247      6663 3434 
 247      3839 3266 
 247      3863 3130 
 248               		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",@progbits,_ZN14rosserial_msgs9TopicInf
 249               		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 251               	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 252               	.LFB43:
 125:./ros_lib/rosserial_msgs/TopicInfo.h ****     virtual const char * getMD5() override { return "0ad51f88fc44892f8c10684077646005"; };
 253               		.loc 2 125 0
 254               		.cfi_startproc
 255               	.LVL17:
 256               	/* prologue: function */
 257               	/* frame size = 0 */
 258               	/* stack size = 0 */
 259               	.L__stack_usage = 0
 260               		.loc 2 125 0
 261 0000 80E0      		ldi r24,lo8(.LC3)
 262 0002 90E0      		ldi r25,hi8(.LC3)
 263               	.LVL18:
 264 0004 0895      		ret
 265               		.cfi_endproc
 266               	.LFE43:
 268               		.section	.rodata.str1.1
 269               	.LC4:
 270 0069 726F 7373 		.string	"rosserial_msgs/Log"
 270      6572 6961 
 270      6C5F 6D73 
 270      6773 2F4C 
 270      6F67 00
 271               		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",@progbits,_ZN14rosserial_msgs3Log7getTypeEv
 272               		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 274               	_ZN14rosserial_msgs3Log7getTypeEv:
 275               	.LFB49:
 276               		.file 3 "./ros_lib/rosserial_msgs/Log.h"
   1:./ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./ros_lib/rosserial_msgs/Log.h **** 
   4:./ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./ros_lib/rosserial_msgs/Log.h **** 
   9:./ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./ros_lib/rosserial_msgs/Log.h **** {
  11:./ros_lib/rosserial_msgs/Log.h **** 
  12:./ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./ros_lib/rosserial_msgs/Log.h ****   {
  14:./ros_lib/rosserial_msgs/Log.h ****     public:
  15:./ros_lib/rosserial_msgs/Log.h ****       typedef uint8_t _level_type;
  16:./ros_lib/rosserial_msgs/Log.h ****       _level_type level;
  17:./ros_lib/rosserial_msgs/Log.h ****       typedef const char* _msg_type;
  18:./ros_lib/rosserial_msgs/Log.h ****       _msg_type msg;
  19:./ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  20:./ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  21:./ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  22:./ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  23:./ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  24:./ros_lib/rosserial_msgs/Log.h **** 
  25:./ros_lib/rosserial_msgs/Log.h ****     Log():
  26:./ros_lib/rosserial_msgs/Log.h ****       level(0),
  27:./ros_lib/rosserial_msgs/Log.h ****       msg("")
  28:./ros_lib/rosserial_msgs/Log.h ****     {
  29:./ros_lib/rosserial_msgs/Log.h ****     }
  30:./ros_lib/rosserial_msgs/Log.h **** 
  31:./ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const override
  32:./ros_lib/rosserial_msgs/Log.h ****     {
  33:./ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  34:./ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  35:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  36:./ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  37:./ros_lib/rosserial_msgs/Log.h ****       varToArr(outbuffer + offset, length_msg);
  38:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  39:./ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  40:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  41:./ros_lib/rosserial_msgs/Log.h ****       return offset;
  42:./ros_lib/rosserial_msgs/Log.h ****     }
  43:./ros_lib/rosserial_msgs/Log.h **** 
  44:./ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer) override
  45:./ros_lib/rosserial_msgs/Log.h ****     {
  46:./ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  47:./ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  48:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  49:./ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  50:./ros_lib/rosserial_msgs/Log.h ****       arrToVar(length_msg, (inbuffer + offset));
  51:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  52:./ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  53:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  54:./ros_lib/rosserial_msgs/Log.h ****       }
  55:./ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  56:./ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  57:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  58:./ros_lib/rosserial_msgs/Log.h ****      return offset;
  59:./ros_lib/rosserial_msgs/Log.h ****     }
  60:./ros_lib/rosserial_msgs/Log.h **** 
  61:./ros_lib/rosserial_msgs/Log.h ****     virtual const char * getType() override { return "rosserial_msgs/Log"; };
 277               		.loc 3 61 0
 278               		.cfi_startproc
 279               	.LVL19:
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 0 */
 283               	.L__stack_usage = 0
 284               		.loc 3 61 0
 285 0000 80E0      		ldi r24,lo8(.LC4)
 286 0002 90E0      		ldi r25,hi8(.LC4)
 287               	.LVL20:
 288 0004 0895      		ret
 289               		.cfi_endproc
 290               	.LFE49:
 292               		.section	.rodata.str1.1
 293               	.LC5:
 294 007c 3131 6162 		.string	"11abd731c25933261cd6183bd12d6295"
 294      6437 3331 
 294      6332 3539 
 294      3333 3236 
 294      3163 6436 
 295               		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",@progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 296               		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 298               	_ZN14rosserial_msgs3Log6getMD5Ev:
 299               	.LFB50:
  62:./ros_lib/rosserial_msgs/Log.h ****     virtual const char * getMD5() override { return "11abd731c25933261cd6183bd12d6295"; };
 300               		.loc 3 62 0
 301               		.cfi_startproc
 302               	.LVL21:
 303               	/* prologue: function */
 304               	/* frame size = 0 */
 305               	/* stack size = 0 */
 306               	.L__stack_usage = 0
 307               		.loc 3 62 0
 308 0000 80E0      		ldi r24,lo8(.LC5)
 309 0002 90E0      		ldi r25,hi8(.LC5)
 310               	.LVL22:
 311 0004 0895      		ret
 312               		.cfi_endproc
 313               	.LFE50:
 315               		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",@progbits,_ZN14rosserial_
 316               		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 318               	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 319               	.LFB63:
 320               		.file 4 "./ros_lib/rosserial_msgs/RequestParam.h"
   1:./ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef const char* _name_type;
  17:./ros_lib/rosserial_msgs/RequestParam.h ****       _name_type name;
  18:./ros_lib/rosserial_msgs/RequestParam.h **** 
  19:./ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  20:./ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  21:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  22:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  23:./ros_lib/rosserial_msgs/RequestParam.h **** 
  24:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const override
  25:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  26:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  27:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  28:./ros_lib/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_name);
  29:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  30:./ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  31:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  32:./ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  33:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  34:./ros_lib/rosserial_msgs/RequestParam.h **** 
  35:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer) override
  36:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  37:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  38:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  39:./ros_lib/rosserial_msgs/RequestParam.h ****       arrToVar(length_name, (inbuffer + offset));
  40:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  41:./ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  42:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  43:./ros_lib/rosserial_msgs/RequestParam.h ****       }
  44:./ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  45:./ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  46:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  47:./ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  48:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  49:./ros_lib/rosserial_msgs/RequestParam.h **** 
  50:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getType() override { return REQUESTPARAM; };
  51:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getMD5() override { return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  52:./ros_lib/rosserial_msgs/RequestParam.h **** 
  53:./ros_lib/rosserial_msgs/RequestParam.h ****   };
  54:./ros_lib/rosserial_msgs/RequestParam.h **** 
  55:./ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  56:./ros_lib/rosserial_msgs/RequestParam.h ****   {
  57:./ros_lib/rosserial_msgs/RequestParam.h ****     public:
  58:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t ints_length;
  59:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef int32_t _ints_type;
  60:./ros_lib/rosserial_msgs/RequestParam.h ****       _ints_type st_ints;
  61:./ros_lib/rosserial_msgs/RequestParam.h ****       _ints_type * ints;
  62:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t floats_length;
  63:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef float _floats_type;
  64:./ros_lib/rosserial_msgs/RequestParam.h ****       _floats_type st_floats;
  65:./ros_lib/rosserial_msgs/RequestParam.h ****       _floats_type * floats;
  66:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t strings_length;
  67:./ros_lib/rosserial_msgs/RequestParam.h ****       typedef char* _strings_type;
  68:./ros_lib/rosserial_msgs/RequestParam.h ****       _strings_type st_strings;
  69:./ros_lib/rosserial_msgs/RequestParam.h ****       _strings_type * strings;
  70:./ros_lib/rosserial_msgs/RequestParam.h **** 
  71:./ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  72:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), st_ints(), ints(nullptr),
  73:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), st_floats(), floats(nullptr),
  74:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), st_strings(), strings(nullptr)
  75:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./ros_lib/rosserial_msgs/RequestParam.h ****     }
  77:./ros_lib/rosserial_msgs/RequestParam.h **** 
  78:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const override
  79:./ros_lib/rosserial_msgs/RequestParam.h ****     {
  80:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  81:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->ints_length >> (8 * 0)) & 0xFF;
  82:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->ints_length >> (8 * 1)) & 0xFF;
  83:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->ints_length >> (8 * 2)) & 0xFF;
  84:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->ints_length >> (8 * 3)) & 0xFF;
  85:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
  87:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
  88:./ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  89:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  90:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  91:./ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  92:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  93:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  94:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  95:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  96:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  97:./ros_lib/rosserial_msgs/RequestParam.h ****       }
  98:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->floats_length >> (8 * 0)) & 0xFF;
  99:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->floats_length >> (8 * 1)) & 0xFF;
 100:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->floats_length >> (8 * 2)) & 0xFF;
 101:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->floats_length >> (8 * 3)) & 0xFF;
 102:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 104:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 105:./ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 106:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 107:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 108:./ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 109:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 110:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 111:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 112:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 113:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 114:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 115:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (this->strings_length >> (8 * 0)) & 0xFF;
 116:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->strings_length >> (8 * 1)) & 0xFF;
 117:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->strings_length >> (8 * 2)) & 0xFF;
 118:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->strings_length >> (8 * 3)) & 0xFF;
 119:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 121:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 122:./ros_lib/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_stringsi);
 123:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 124:./ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 125:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 126:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 127:./ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 128:./ros_lib/rosserial_msgs/RequestParam.h ****     }
 129:./ros_lib/rosserial_msgs/RequestParam.h **** 
 130:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer) override
 131:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 132:./ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 133:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t ints_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 134:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 135:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 136:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 137:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
 138:./ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 139:./ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 140:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
 142:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 143:./ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 144:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 145:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 146:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 147:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 148:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 149:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 150:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 151:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 152:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 153:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 154:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 155:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t floats_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 156:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 157:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 158:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 159:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 160:./ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 161:./ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 162:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 164:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 165:./ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 166:./ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 167:./ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 168:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 169:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 170:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 171:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 172:./ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 173:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 174:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 175:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 176:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 177:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t strings_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 178:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 179:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 180:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 181:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 182:./ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 183:./ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 184:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 186:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 187:./ros_lib/rosserial_msgs/RequestParam.h ****       arrToVar(length_st_strings, (inbuffer + offset));
 188:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 189:./ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 190:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 191:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 192:./ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 193:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 194:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 195:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 196:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 197:./ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 198:./ros_lib/rosserial_msgs/RequestParam.h ****     }
 199:./ros_lib/rosserial_msgs/RequestParam.h **** 
 200:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getType() override { return REQUESTPARAM; };
 321               		.loc 4 200 0
 322               		.cfi_startproc
 323               	.LVL23:
 324               	/* prologue: function */
 325               	/* frame size = 0 */
 326               	/* stack size = 0 */
 327               	.L__stack_usage = 0
 328               		.loc 4 200 0
 329 0000 80E0      		ldi r24,lo8(_ZN14rosserial_msgsL12REQUESTPARAME)
 330 0002 90E0      		ldi r25,hi8(_ZN14rosserial_msgsL12REQUESTPARAME)
 331               	.LVL24:
 332 0004 0895      		ret
 333               		.cfi_endproc
 334               	.LFE63:
 336               		.section	.rodata.str1.1
 337               	.LC6:
 338 009d 3966 3065 		.string	"9f0e98bda65981986ddf53afa7a40e49"
 338      3938 6264 
 338      6136 3539 
 338      3831 3938 
 338      3664 6466 
 339               		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",@progbits,_ZN14rosserial_m
 340               		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 342               	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 343               	.LFB64:
 201:./ros_lib/rosserial_msgs/RequestParam.h ****     virtual const char * getMD5() override { return "9f0e98bda65981986ddf53afa7a40e49"; };
 344               		.loc 4 201 0
 345               		.cfi_startproc
 346               	.LVL25:
 347               	/* prologue: function */
 348               	/* frame size = 0 */
 349               	/* stack size = 0 */
 350               	.L__stack_usage = 0
 351               		.loc 4 201 0
 352 0000 80E0      		ldi r24,lo8(.LC6)
 353 0002 90E0      		ldi r25,hi8(.LC6)
 354               	.LVL26:
 355 0004 0895      		ret
 356               		.cfi_endproc
 357               	.LFE64:
 359               		.section	.text._ZNK10kitty_msgs10KittyState9serializeEPh,"axG",@progbits,_ZNK10kitty_msgs10KittySt
 360               		.weak	_ZNK10kitty_msgs10KittyState9serializeEPh
 362               	_ZNK10kitty_msgs10KittyState9serializeEPh:
 363               	.LFB135:
 364               		.file 5 "./ros_lib/kitty_msgs/KittyState.h"
   1:./ros_lib/kitty_msgs/KittyState.h **** #ifndef _ROS_kitty_msgs_KittyState_h
   2:./ros_lib/kitty_msgs/KittyState.h **** #define _ROS_kitty_msgs_KittyState_h
   3:./ros_lib/kitty_msgs/KittyState.h **** 
   4:./ros_lib/kitty_msgs/KittyState.h **** #include <stdint.h>
   5:./ros_lib/kitty_msgs/KittyState.h **** #include <string.h>
   6:./ros_lib/kitty_msgs/KittyState.h **** #include <stdlib.h>
   7:./ros_lib/kitty_msgs/KittyState.h **** #include "ros/msg.h"
   8:./ros_lib/kitty_msgs/KittyState.h **** #include "ros/time.h"
   9:./ros_lib/kitty_msgs/KittyState.h **** 
  10:./ros_lib/kitty_msgs/KittyState.h **** namespace kitty_msgs
  11:./ros_lib/kitty_msgs/KittyState.h **** {
  12:./ros_lib/kitty_msgs/KittyState.h **** 
  13:./ros_lib/kitty_msgs/KittyState.h ****   class KittyState : public ros::Msg
  14:./ros_lib/kitty_msgs/KittyState.h ****   {
  15:./ros_lib/kitty_msgs/KittyState.h ****     public:
  16:./ros_lib/kitty_msgs/KittyState.h ****       typedef ros::Time _stamp_type;
  17:./ros_lib/kitty_msgs/KittyState.h ****       _stamp_type stamp;
  18:./ros_lib/kitty_msgs/KittyState.h ****       typedef float _rotation_speed_type;
  19:./ros_lib/kitty_msgs/KittyState.h ****       _rotation_speed_type rotation_speed;
  20:./ros_lib/kitty_msgs/KittyState.h ****       typedef float _angle_steering_type;
  21:./ros_lib/kitty_msgs/KittyState.h ****       _angle_steering_type angle_steering;
  22:./ros_lib/kitty_msgs/KittyState.h **** 
  23:./ros_lib/kitty_msgs/KittyState.h ****     KittyState():
  24:./ros_lib/kitty_msgs/KittyState.h ****       stamp(),
  25:./ros_lib/kitty_msgs/KittyState.h ****       rotation_speed(0),
  26:./ros_lib/kitty_msgs/KittyState.h ****       angle_steering(0)
  27:./ros_lib/kitty_msgs/KittyState.h ****     {
  28:./ros_lib/kitty_msgs/KittyState.h ****     }
  29:./ros_lib/kitty_msgs/KittyState.h **** 
  30:./ros_lib/kitty_msgs/KittyState.h ****     virtual int serialize(unsigned char *outbuffer) const override
 365               		.loc 5 30 0
 366               		.cfi_startproc
 367               	.LVL27:
 368               	/* prologue: function */
 369               	/* frame size = 0 */
 370               	/* stack size = 0 */
 371               	.L__stack_usage = 0
 372 0000 DC01      		movw r26,r24
 373 0002 FB01      		movw r30,r22
 374               	.LVL28:
  31:./ros_lib/kitty_msgs/KittyState.h ****     {
  32:./ros_lib/kitty_msgs/KittyState.h ****       int offset = 0;
  33:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
 375               		.loc 5 33 0
 376 0004 1296      		adiw r26,2
 377 0006 8C91      		ld r24,X
 378 0008 1297      		sbiw r26,2
 379               	.LVL29:
 380 000a 8083      		st Z,r24
  34:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 381               		.loc 5 34 0
 382 000c 1396      		adiw r26,3
 383 000e 8C91      		ld r24,X
 384 0010 1397      		sbiw r26,3
 385 0012 8183      		std Z+1,r24
  35:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 386               		.loc 5 35 0
 387 0014 1496      		adiw r26,4
 388 0016 8C91      		ld r24,X
 389 0018 1497      		sbiw r26,4
 390 001a 8283      		std Z+2,r24
  36:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 391               		.loc 5 36 0
 392 001c 1596      		adiw r26,5
 393 001e 8C91      		ld r24,X
 394 0020 1597      		sbiw r26,5
 395 0022 8383      		std Z+3,r24
 396               	.LVL30:
  37:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->stamp.sec);
  38:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
 397               		.loc 5 38 0
 398 0024 1696      		adiw r26,6
 399 0026 8C91      		ld r24,X
 400 0028 1697      		sbiw r26,6
 401 002a 8483      		std Z+4,r24
  39:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 402               		.loc 5 39 0
 403 002c 1796      		adiw r26,7
 404 002e 8C91      		ld r24,X
 405 0030 1797      		sbiw r26,7
 406 0032 8583      		std Z+5,r24
  40:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 407               		.loc 5 40 0
 408 0034 1896      		adiw r26,8
 409 0036 8C91      		ld r24,X
 410 0038 1897      		sbiw r26,8
 411 003a 8683      		std Z+6,r24
  41:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 412               		.loc 5 41 0
 413 003c 1996      		adiw r26,9
 414 003e 8C91      		ld r24,X
 415 0040 1997      		sbiw r26,9
 416 0042 8783      		std Z+7,r24
 417               	.LVL31:
  42:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->stamp.nsec);
  43:./ros_lib/kitty_msgs/KittyState.h ****       union {
  44:./ros_lib/kitty_msgs/KittyState.h ****         float real;
  45:./ros_lib/kitty_msgs/KittyState.h ****         uint32_t base;
  46:./ros_lib/kitty_msgs/KittyState.h ****       } u_rotation_speed;
  47:./ros_lib/kitty_msgs/KittyState.h ****       u_rotation_speed.real = this->rotation_speed;
  48:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 0) = (u_rotation_speed.base >> (8 * 0)) & 0xFF;
 418               		.loc 5 48 0
 419 0044 1A96      		adiw r26,10
 420 0046 3C91      		ld r19,X
 421 0048 1A97      		sbiw r26,10
 422 004a 1B96      		adiw r26,11
 423 004c 2C91      		ld r18,X
 424 004e 1B97      		sbiw r26,11
 425 0050 1C96      		adiw r26,12
 426 0052 9C91      		ld r25,X
 427 0054 1C97      		sbiw r26,12
 428 0056 1D96      		adiw r26,13
 429 0058 8C91      		ld r24,X
 430 005a 1D97      		sbiw r26,13
 431 005c 3087      		std Z+8,r19
 432               	.LVL32:
  49:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 1) = (u_rotation_speed.base >> (8 * 1)) & 0xFF;
 433               		.loc 5 49 0
 434 005e 2187      		std Z+9,r18
  50:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 2) = (u_rotation_speed.base >> (8 * 2)) & 0xFF;
 435               		.loc 5 50 0
 436 0060 9287      		std Z+10,r25
  51:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 3) = (u_rotation_speed.base >> (8 * 3)) & 0xFF;
 437               		.loc 5 51 0
 438 0062 8387      		std Z+11,r24
 439               	.LVL33:
  52:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->rotation_speed);
  53:./ros_lib/kitty_msgs/KittyState.h ****       union {
  54:./ros_lib/kitty_msgs/KittyState.h ****         float real;
  55:./ros_lib/kitty_msgs/KittyState.h ****         uint32_t base;
  56:./ros_lib/kitty_msgs/KittyState.h ****       } u_angle_steering;
  57:./ros_lib/kitty_msgs/KittyState.h ****       u_angle_steering.real = this->angle_steering;
  58:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 0) = (u_angle_steering.base >> (8 * 0)) & 0xFF;
 440               		.loc 5 58 0
 441 0064 1E96      		adiw r26,14
 442 0066 3C91      		ld r19,X
 443 0068 1E97      		sbiw r26,14
 444 006a 1F96      		adiw r26,15
 445 006c 2C91      		ld r18,X
 446 006e 1F97      		sbiw r26,15
 447 0070 5096      		adiw r26,16
 448 0072 9C91      		ld r25,X
 449 0074 5097      		sbiw r26,16
 450 0076 5196      		adiw r26,17
 451 0078 8C91      		ld r24,X
 452 007a 3487      		std Z+12,r19
 453               	.LVL34:
  59:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 1) = (u_angle_steering.base >> (8 * 1)) & 0xFF;
 454               		.loc 5 59 0
 455 007c 2587      		std Z+13,r18
  60:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 2) = (u_angle_steering.base >> (8 * 2)) & 0xFF;
 456               		.loc 5 60 0
 457 007e 9687      		std Z+14,r25
  61:./ros_lib/kitty_msgs/KittyState.h ****       *(outbuffer + offset + 3) = (u_angle_steering.base >> (8 * 3)) & 0xFF;
 458               		.loc 5 61 0
 459 0080 8787      		std Z+15,r24
 460               	.LVL35:
  62:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->angle_steering);
  63:./ros_lib/kitty_msgs/KittyState.h ****       return offset;
  64:./ros_lib/kitty_msgs/KittyState.h ****     }
 461               		.loc 5 64 0
 462 0082 80E1      		ldi r24,lo8(16)
 463 0084 90E0      		ldi r25,0
 464 0086 0895      		ret
 465               		.cfi_endproc
 466               	.LFE135:
 468               		.section	.text._ZN10kitty_msgs10KittyState11deserializeEPh,"axG",@progbits,_ZN10kitty_msgs10KittyS
 469               		.weak	_ZN10kitty_msgs10KittyState11deserializeEPh
 471               	_ZN10kitty_msgs10KittyState11deserializeEPh:
 472               	.LFB136:
  65:./ros_lib/kitty_msgs/KittyState.h **** 
  66:./ros_lib/kitty_msgs/KittyState.h ****     virtual int deserialize(unsigned char *inbuffer) override
 473               		.loc 5 66 0
 474               		.cfi_startproc
 475               	.LVL36:
 476               	/* prologue: function */
 477               	/* frame size = 0 */
 478               	/* stack size = 0 */
 479               	.L__stack_usage = 0
 480 0000 FC01      		movw r30,r24
 481 0002 DB01      		movw r26,r22
 482               	.LVL37:
  67:./ros_lib/kitty_msgs/KittyState.h ****     {
  68:./ros_lib/kitty_msgs/KittyState.h ****       int offset = 0;
  69:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
 483               		.loc 5 69 0
 484 0004 4C91      		ld r20,X
 485 0006 50E0      		ldi r21,0
 486 0008 60E0      		ldi r22,0
 487 000a 70E0      		ldi r23,0
 488               	.LVL38:
 489 000c 4283      		std Z+2,r20
 490 000e 5383      		std Z+3,r21
 491 0010 6483      		std Z+4,r22
 492 0012 7583      		std Z+5,r23
  70:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 493               		.loc 5 70 0
 494 0014 1196      		adiw r26,1
 495 0016 8C91      		ld r24,X
 496 0018 1197      		sbiw r26,1
 497               	.LVL39:
 498 001a 582B      		or r21,r24
 499 001c 4283      		std Z+2,r20
 500 001e 5383      		std Z+3,r21
 501 0020 6483      		std Z+4,r22
 502 0022 7583      		std Z+5,r23
  71:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 503               		.loc 5 71 0
 504 0024 1296      		adiw r26,2
 505 0026 8C91      		ld r24,X
 506 0028 1297      		sbiw r26,2
 507 002a 682B      		or r22,r24
 508 002c 4283      		std Z+2,r20
 509 002e 5383      		std Z+3,r21
 510 0030 6483      		std Z+4,r22
 511 0032 7583      		std Z+5,r23
  72:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 512               		.loc 5 72 0
 513 0034 1396      		adiw r26,3
 514 0036 8C91      		ld r24,X
 515 0038 1397      		sbiw r26,3
 516 003a 782B      		or r23,r24
 517 003c 4283      		std Z+2,r20
 518 003e 5383      		std Z+3,r21
 519 0040 6483      		std Z+4,r22
 520 0042 7583      		std Z+5,r23
 521               	.LVL40:
  73:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->stamp.sec);
  74:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
 522               		.loc 5 74 0
 523 0044 1496      		adiw r26,4
 524 0046 4C91      		ld r20,X
 525 0048 1497      		sbiw r26,4
 526 004a 50E0      		ldi r21,0
 527 004c 60E0      		ldi r22,0
 528 004e 70E0      		ldi r23,0
 529 0050 4683      		std Z+6,r20
 530 0052 5783      		std Z+7,r21
 531 0054 6087      		std Z+8,r22
 532 0056 7187      		std Z+9,r23
  75:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 533               		.loc 5 75 0
 534 0058 1596      		adiw r26,5
 535 005a 8C91      		ld r24,X
 536 005c 1597      		sbiw r26,5
 537 005e 582B      		or r21,r24
 538 0060 4683      		std Z+6,r20
 539 0062 5783      		std Z+7,r21
 540 0064 6087      		std Z+8,r22
 541 0066 7187      		std Z+9,r23
  76:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 542               		.loc 5 76 0
 543 0068 1696      		adiw r26,6
 544 006a 8C91      		ld r24,X
 545 006c 1697      		sbiw r26,6
 546 006e 682B      		or r22,r24
 547 0070 4683      		std Z+6,r20
 548 0072 5783      		std Z+7,r21
 549 0074 6087      		std Z+8,r22
 550 0076 7187      		std Z+9,r23
  77:./ros_lib/kitty_msgs/KittyState.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 551               		.loc 5 77 0
 552 0078 1796      		adiw r26,7
 553 007a 8C91      		ld r24,X
 554 007c 1797      		sbiw r26,7
 555 007e 782B      		or r23,r24
 556 0080 4683      		std Z+6,r20
 557 0082 5783      		std Z+7,r21
 558 0084 6087      		std Z+8,r22
 559 0086 7187      		std Z+9,r23
 560               	.LVL41:
  78:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->stamp.nsec);
  79:./ros_lib/kitty_msgs/KittyState.h ****       union {
  80:./ros_lib/kitty_msgs/KittyState.h ****         float real;
  81:./ros_lib/kitty_msgs/KittyState.h ****         uint32_t base;
  82:./ros_lib/kitty_msgs/KittyState.h ****       } u_rotation_speed;
  83:./ros_lib/kitty_msgs/KittyState.h ****       u_rotation_speed.base = 0;
  84:./ros_lib/kitty_msgs/KittyState.h ****       u_rotation_speed.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  85:./ros_lib/kitty_msgs/KittyState.h ****       u_rotation_speed.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  86:./ros_lib/kitty_msgs/KittyState.h ****       u_rotation_speed.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  87:./ros_lib/kitty_msgs/KittyState.h ****       u_rotation_speed.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  88:./ros_lib/kitty_msgs/KittyState.h ****       this->rotation_speed = u_rotation_speed.real;
 561               		.loc 5 88 0
 562 0088 1896      		adiw r26,8
 563 008a 4D91      		ld r20,X+
 564 008c 5D91      		ld r21,X+
 565 008e 6D91      		ld r22,X+
 566 0090 7C91      		ld r23,X
 567 0092 1B97      		sbiw r26,8+3
 568 0094 4287      		std Z+10,r20
 569 0096 5387      		std Z+11,r21
 570 0098 6487      		std Z+12,r22
 571 009a 7587      		std Z+13,r23
 572               	.LVL42:
  89:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->rotation_speed);
  90:./ros_lib/kitty_msgs/KittyState.h ****       union {
  91:./ros_lib/kitty_msgs/KittyState.h ****         float real;
  92:./ros_lib/kitty_msgs/KittyState.h ****         uint32_t base;
  93:./ros_lib/kitty_msgs/KittyState.h ****       } u_angle_steering;
  94:./ros_lib/kitty_msgs/KittyState.h ****       u_angle_steering.base = 0;
  95:./ros_lib/kitty_msgs/KittyState.h ****       u_angle_steering.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  96:./ros_lib/kitty_msgs/KittyState.h ****       u_angle_steering.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  97:./ros_lib/kitty_msgs/KittyState.h ****       u_angle_steering.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  98:./ros_lib/kitty_msgs/KittyState.h ****       u_angle_steering.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  99:./ros_lib/kitty_msgs/KittyState.h ****       this->angle_steering = u_angle_steering.real;
 573               		.loc 5 99 0
 574 009c 1C96      		adiw r26,12
 575 009e 8D91      		ld r24,X+
 576 00a0 9D91      		ld r25,X+
 577 00a2 0D90      		ld __tmp_reg__,X+
 578 00a4 BC91      		ld r27,X
 579 00a6 A02D      		mov r26,__tmp_reg__
 580 00a8 8687      		std Z+14,r24
 581 00aa 9787      		std Z+15,r25
 582 00ac A08B      		std Z+16,r26
 583 00ae B18B      		std Z+17,r27
 584               	.LVL43:
 100:./ros_lib/kitty_msgs/KittyState.h ****       offset += sizeof(this->angle_steering);
 101:./ros_lib/kitty_msgs/KittyState.h ****      return offset;
 102:./ros_lib/kitty_msgs/KittyState.h ****     }
 585               		.loc 5 102 0
 586 00b0 80E1      		ldi r24,lo8(16)
 587 00b2 90E0      		ldi r25,0
 588 00b4 0895      		ret
 589               		.cfi_endproc
 590               	.LFE136:
 592               		.section	.rodata.str1.1
 593               	.LC7:
 594 00be 6B69 7474 		.string	"kitty_msgs/KittyState"
 594      795F 6D73 
 594      6773 2F4B 
 594      6974 7479 
 594      5374 6174 
 595               		.section	.text._ZN10kitty_msgs10KittyState7getTypeEv,"axG",@progbits,_ZN10kitty_msgs10KittyState7g
 596               		.weak	_ZN10kitty_msgs10KittyState7getTypeEv
 598               	_ZN10kitty_msgs10KittyState7getTypeEv:
 599               	.LFB137:
 103:./ros_lib/kitty_msgs/KittyState.h **** 
 104:./ros_lib/kitty_msgs/KittyState.h ****     virtual const char * getType() override { return "kitty_msgs/KittyState"; };
 600               		.loc 5 104 0
 601               		.cfi_startproc
 602               	.LVL44:
 603               	/* prologue: function */
 604               	/* frame size = 0 */
 605               	/* stack size = 0 */
 606               	.L__stack_usage = 0
 607               		.loc 5 104 0
 608 0000 80E0      		ldi r24,lo8(.LC7)
 609 0002 90E0      		ldi r25,hi8(.LC7)
 610               	.LVL45:
 611 0004 0895      		ret
 612               		.cfi_endproc
 613               	.LFE137:
 615               		.section	.rodata.str1.1
 616               	.LC8:
 617 00d4 6633 3365 		.string	"f33ef25a14a86ca752a5d1da20481e38"
 617      6632 3561 
 617      3134 6138 
 617      3663 6137 
 617      3532 6135 
 618               		.section	.text._ZN10kitty_msgs10KittyState6getMD5Ev,"axG",@progbits,_ZN10kitty_msgs10KittyState6ge
 619               		.weak	_ZN10kitty_msgs10KittyState6getMD5Ev
 621               	_ZN10kitty_msgs10KittyState6getMD5Ev:
 622               	.LFB138:
 105:./ros_lib/kitty_msgs/KittyState.h ****     virtual const char * getMD5() override { return "f33ef25a14a86ca752a5d1da20481e38"; };
 623               		.loc 5 105 0
 624               		.cfi_startproc
 625               	.LVL46:
 626               	/* prologue: function */
 627               	/* frame size = 0 */
 628               	/* stack size = 0 */
 629               	.L__stack_usage = 0
 630               		.loc 5 105 0
 631 0000 80E0      		ldi r24,lo8(.LC8)
 632 0002 90E0      		ldi r25,hi8(.LC8)
 633               	.LVL47:
 634 0004 0895      		ret
 635               		.cfi_endproc
 636               	.LFE138:
 638               		.section	.text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE8callbackEPh,"axG",@progbits,_ZN3ro
 639               		.weak	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE8callbackEPh
 641               	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE8callbackEPh:
 642               	.LFB172:
 643               		.file 6 "./ros_lib/ros/subscriber.h"
   1:./ros_lib/ros/subscriber.h **** /*
   2:./ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/subscriber.h ****  *
   4:./ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./ros_lib/ros/subscriber.h ****  *
   7:./ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/subscriber.h ****  * are met:
  10:./ros_lib/ros/subscriber.h ****  *
  11:./ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/subscriber.h ****  *
  21:./ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/subscriber.h ****  */
  34:./ros_lib/ros/subscriber.h **** 
  35:./ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./ros_lib/ros/subscriber.h **** 
  38:./ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./ros_lib/ros/subscriber.h **** 
  40:./ros_lib/ros/subscriber.h **** namespace ros
  41:./ros_lib/ros/subscriber.h **** {
  42:./ros_lib/ros/subscriber.h **** 
  43:./ros_lib/ros/subscriber.h **** /* Base class for objects subscribers. */
  44:./ros_lib/ros/subscriber.h **** class Subscriber_
  45:./ros_lib/ros/subscriber.h **** {
  46:./ros_lib/ros/subscriber.h **** public:
  47:./ros_lib/ros/subscriber.h ****   virtual void callback(unsigned char *data) = 0;
  48:./ros_lib/ros/subscriber.h ****   virtual int getEndpointType() = 0;
  49:./ros_lib/ros/subscriber.h **** 
  50:./ros_lib/ros/subscriber.h ****   // id_ is set by NodeHandle when we advertise
  51:./ros_lib/ros/subscriber.h ****   int id_;
  52:./ros_lib/ros/subscriber.h **** 
  53:./ros_lib/ros/subscriber.h ****   virtual const char * getMsgType() = 0;
  54:./ros_lib/ros/subscriber.h ****   virtual const char * getMsgMD5() = 0;
  55:./ros_lib/ros/subscriber.h ****   const char * topic_;
  56:./ros_lib/ros/subscriber.h **** };
  57:./ros_lib/ros/subscriber.h **** 
  58:./ros_lib/ros/subscriber.h **** /* Bound function subscriber. */
  59:./ros_lib/ros/subscriber.h **** template<typename MsgT, typename ObjT = void>
  60:./ros_lib/ros/subscriber.h **** class Subscriber: public Subscriber_
  61:./ros_lib/ros/subscriber.h **** {
  62:./ros_lib/ros/subscriber.h **** public:
  63:./ros_lib/ros/subscriber.h ****   typedef void(ObjT::*CallbackT)(const MsgT&);
  64:./ros_lib/ros/subscriber.h ****   MsgT msg;
  65:./ros_lib/ros/subscriber.h **** 
  66:./ros_lib/ros/subscriber.h ****   Subscriber(const char * topic_name, CallbackT cb, ObjT* obj, int endpoint = rosserial_msgs::Topic
  67:./ros_lib/ros/subscriber.h ****     cb_(cb),
  68:./ros_lib/ros/subscriber.h ****     obj_(obj),
  69:./ros_lib/ros/subscriber.h ****     endpoint_(endpoint)
  70:./ros_lib/ros/subscriber.h ****   {
  71:./ros_lib/ros/subscriber.h ****     topic_ = topic_name;
  72:./ros_lib/ros/subscriber.h ****   };
  73:./ros_lib/ros/subscriber.h **** 
  74:./ros_lib/ros/subscriber.h ****   virtual void callback(unsigned char* data) override
  75:./ros_lib/ros/subscriber.h ****   {
  76:./ros_lib/ros/subscriber.h ****     msg.deserialize(data);
  77:./ros_lib/ros/subscriber.h ****     (obj_->*cb_)(msg);
  78:./ros_lib/ros/subscriber.h ****   }
  79:./ros_lib/ros/subscriber.h **** 
  80:./ros_lib/ros/subscriber.h ****   virtual const char * getMsgType() override
  81:./ros_lib/ros/subscriber.h ****   {
  82:./ros_lib/ros/subscriber.h ****     return this->msg.getType();
  83:./ros_lib/ros/subscriber.h ****   }
  84:./ros_lib/ros/subscriber.h ****   virtual const char * getMsgMD5() override
  85:./ros_lib/ros/subscriber.h ****   {
  86:./ros_lib/ros/subscriber.h ****     return this->msg.getMD5();
  87:./ros_lib/ros/subscriber.h ****   }
  88:./ros_lib/ros/subscriber.h ****   virtual int getEndpointType() override
  89:./ros_lib/ros/subscriber.h ****   {
  90:./ros_lib/ros/subscriber.h ****     return endpoint_;
  91:./ros_lib/ros/subscriber.h ****   }
  92:./ros_lib/ros/subscriber.h **** 
  93:./ros_lib/ros/subscriber.h **** private:
  94:./ros_lib/ros/subscriber.h ****   CallbackT cb_;
  95:./ros_lib/ros/subscriber.h ****   ObjT* obj_;
  96:./ros_lib/ros/subscriber.h ****   int endpoint_;
  97:./ros_lib/ros/subscriber.h **** };
  98:./ros_lib/ros/subscriber.h **** 
  99:./ros_lib/ros/subscriber.h **** /* Standalone function subscriber. */
 100:./ros_lib/ros/subscriber.h **** template<typename MsgT>
 101:./ros_lib/ros/subscriber.h **** class Subscriber<MsgT, void>: public Subscriber_
 102:./ros_lib/ros/subscriber.h **** {
 103:./ros_lib/ros/subscriber.h **** public:
 104:./ros_lib/ros/subscriber.h ****   typedef void(*CallbackT)(const MsgT&);
 105:./ros_lib/ros/subscriber.h ****   MsgT msg;
 106:./ros_lib/ros/subscriber.h **** 
 107:./ros_lib/ros/subscriber.h ****   Subscriber(const char * topic_name, CallbackT cb, int endpoint = rosserial_msgs::TopicInfo::ID_SU
 108:./ros_lib/ros/subscriber.h ****     cb_(cb),
 109:./ros_lib/ros/subscriber.h ****     endpoint_(endpoint)
 110:./ros_lib/ros/subscriber.h ****   {
 111:./ros_lib/ros/subscriber.h ****     topic_ = topic_name;
 112:./ros_lib/ros/subscriber.h ****   };
 113:./ros_lib/ros/subscriber.h **** 
 114:./ros_lib/ros/subscriber.h ****   virtual void callback(unsigned char* data) override
 644               		.loc 6 114 0
 645               		.cfi_startproc
 646               	.LVL48:
 647 0000 0F93      		push r16
 648               	.LCFI0:
 649               		.cfi_def_cfa_offset 4
 650               		.cfi_offset 16, -3
 651 0002 1F93      		push r17
 652               	.LCFI1:
 653               		.cfi_def_cfa_offset 5
 654               		.cfi_offset 17, -4
 655 0004 CF93      		push r28
 656               	.LCFI2:
 657               		.cfi_def_cfa_offset 6
 658               		.cfi_offset 28, -5
 659 0006 DF93      		push r29
 660               	.LCFI3:
 661               		.cfi_def_cfa_offset 7
 662               		.cfi_offset 29, -6
 663               	/* prologue: function */
 664               	/* frame size = 0 */
 665               	/* stack size = 4 */
 666               	.L__stack_usage = 4
 667 0008 8C01      		movw r16,r24
 115:./ros_lib/ros/subscriber.h ****   {
 116:./ros_lib/ros/subscriber.h ****     msg.deserialize(data);
 668               		.loc 6 116 0
 669 000a EC01      		movw r28,r24
 670 000c 2696      		adiw r28,6
 671 000e CE01      		movw r24,r28
 672               	.LVL49:
 673 0010 0E94 0000 		call _ZN10kitty_msgs10KittyState11deserializeEPh
 674               	.LVL50:
 117:./ros_lib/ros/subscriber.h ****     this->cb_(msg);
 675               		.loc 6 117 0
 676 0014 D801      		movw r26,r16
 677 0016 5896      		adiw r26,24
 678 0018 ED91      		ld r30,X+
 679 001a FC91      		ld r31,X
 680 001c 5997      		sbiw r26,24+1
 681 001e CE01      		movw r24,r28
 682               	/* epilogue start */
 118:./ros_lib/ros/subscriber.h ****   }
 683               		.loc 6 118 0
 684 0020 DF91      		pop r29
 685 0022 CF91      		pop r28
 686 0024 1F91      		pop r17
 687 0026 0F91      		pop r16
 688               	.LVL51:
 117:./ros_lib/ros/subscriber.h ****     this->cb_(msg);
 689               		.loc 6 117 0
 690 0028 1994      		eijmp
 691               	.LVL52:
 692               		.cfi_endproc
 693               	.LFE172:
 695               		.section	.text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE15getEndpointTypeEv,"axG",@progbits
 696               		.weak	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE15getEndpointTypeEv
 698               	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE15getEndpointTypeEv:
 699               	.LFB173:
 119:./ros_lib/ros/subscriber.h **** 
 120:./ros_lib/ros/subscriber.h ****   virtual const char * getMsgType() override
 121:./ros_lib/ros/subscriber.h ****   {
 122:./ros_lib/ros/subscriber.h ****     return this->msg.getType();
 123:./ros_lib/ros/subscriber.h ****   }
 124:./ros_lib/ros/subscriber.h ****   virtual const char * getMsgMD5() override
 125:./ros_lib/ros/subscriber.h ****   {
 126:./ros_lib/ros/subscriber.h ****     return this->msg.getMD5();
 127:./ros_lib/ros/subscriber.h ****   }
 128:./ros_lib/ros/subscriber.h ****   virtual int getEndpointType() override
 700               		.loc 6 128 0
 701               		.cfi_startproc
 702               	.LVL53:
 703               	/* prologue: function */
 704               	/* frame size = 0 */
 705               	/* stack size = 0 */
 706               	.L__stack_usage = 0
 129:./ros_lib/ros/subscriber.h ****   {
 130:./ros_lib/ros/subscriber.h ****     return endpoint_;
 131:./ros_lib/ros/subscriber.h ****   }
 707               		.loc 6 131 0
 708 0000 FC01      		movw r30,r24
 709 0002 828D      		ldd r24,Z+26
 710 0004 938D      		ldd r25,Z+27
 711               	.LVL54:
 712 0006 0895      		ret
 713               		.cfi_endproc
 714               	.LFE173:
 716               		.section	.text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE10getMsgTypeEv,"axG",@progbits,_ZN3
 717               		.weak	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE10getMsgTypeEv
 719               	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE10getMsgTypeEv:
 720               	.LFB174:
 120:./ros_lib/ros/subscriber.h ****   {
 721               		.loc 6 120 0
 722               		.cfi_startproc
 723               	.LVL55:
 724               	/* prologue: function */
 725               	/* frame size = 0 */
 726               	/* stack size = 0 */
 727               	.L__stack_usage = 0
 123:./ros_lib/ros/subscriber.h ****   virtual const char * getMsgMD5() override
 728               		.loc 6 123 0
 729 0000 80E0      		ldi r24,lo8(.LC7)
 730 0002 90E0      		ldi r25,hi8(.LC7)
 731               	.LVL56:
 732 0004 0895      		ret
 733               		.cfi_endproc
 734               	.LFE174:
 736               		.section	.text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE9getMsgMD5Ev,"axG",@progbits,_ZN3ro
 737               		.weak	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE9getMsgMD5Ev
 739               	_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE9getMsgMD5Ev:
 740               	.LFB175:
 124:./ros_lib/ros/subscriber.h ****   {
 741               		.loc 6 124 0
 742               		.cfi_startproc
 743               	.LVL57:
 744               	/* prologue: function */
 745               	/* frame size = 0 */
 746               	/* stack size = 0 */
 747               	.L__stack_usage = 0
 127:./ros_lib/ros/subscriber.h ****   virtual int getEndpointType() override
 748               		.loc 6 127 0
 749 0000 80E0      		ldi r24,lo8(.LC8)
 750 0002 90E0      		ldi r25,hi8(.LC8)
 751               	.LVL58:
 752 0004 0895      		ret
 753               		.cfi_endproc
 754               	.LFE175:
 756               		.section	.text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",
 757               		.weak	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE9connectedEv
 759               	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE9connectedEv:
 760               	.LFB176:
 761               		.file 7 "./ros_lib/ros/node_handle.h"
   1:./ros_lib/ros/node_handle.h **** /*
   2:./ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/node_handle.h ****  *
   4:./ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./ros_lib/ros/node_handle.h ****  *
   7:./ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/node_handle.h ****  * are met:
  10:./ros_lib/ros/node_handle.h ****  *
  11:./ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/node_handle.h ****  *
  21:./ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/node_handle.h ****  */
  34:./ros_lib/ros/node_handle.h **** 
  35:./ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./ros_lib/ros/node_handle.h **** 
  38:./ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./ros_lib/ros/node_handle.h **** 
  40:./ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./ros_lib/ros/node_handle.h **** 
  45:./ros_lib/ros/node_handle.h **** #include "ros/msg.h"
  46:./ros_lib/ros/node_handle.h **** 
  47:./ros_lib/ros/node_handle.h **** namespace ros
  48:./ros_lib/ros/node_handle.h **** {
  49:./ros_lib/ros/node_handle.h **** 
  50:./ros_lib/ros/node_handle.h **** class NodeHandleBase_
  51:./ros_lib/ros/node_handle.h **** {
  52:./ros_lib/ros/node_handle.h **** public:
  53:./ros_lib/ros/node_handle.h ****   virtual int publish(int id, const Msg* msg) = 0;
  54:./ros_lib/ros/node_handle.h ****   virtual int spinOnce() = 0;
  55:./ros_lib/ros/node_handle.h ****   virtual bool connected() = 0;
  56:./ros_lib/ros/node_handle.h **** };
  57:./ros_lib/ros/node_handle.h **** }
  58:./ros_lib/ros/node_handle.h **** 
  59:./ros_lib/ros/node_handle.h **** #include "ros/publisher.h"
  60:./ros_lib/ros/node_handle.h **** #include "ros/subscriber.h"
  61:./ros_lib/ros/node_handle.h **** #include "ros/service_server.h"
  62:./ros_lib/ros/node_handle.h **** #include "ros/service_client.h"
  63:./ros_lib/ros/node_handle.h **** 
  64:./ros_lib/ros/node_handle.h **** namespace ros
  65:./ros_lib/ros/node_handle.h **** {
  66:./ros_lib/ros/node_handle.h **** 
  67:./ros_lib/ros/node_handle.h **** const int SPIN_OK = 0;
  68:./ros_lib/ros/node_handle.h **** const int SPIN_ERR = -1;
  69:./ros_lib/ros/node_handle.h **** const int SPIN_TIMEOUT = -2;
  70:./ros_lib/ros/node_handle.h **** const int SPIN_TX_STOP_REQUESTED = -3;
  71:./ros_lib/ros/node_handle.h **** const int SPIN_TIME_RECV = -4;
  72:./ros_lib/ros/node_handle.h **** 
  73:./ros_lib/ros/node_handle.h **** const uint8_t SYNC_SECONDS  = 5;
  74:./ros_lib/ros/node_handle.h **** const uint8_t MODE_FIRST_FF = 0;
  75:./ros_lib/ros/node_handle.h **** /*
  76:./ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  77:./ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  78:./ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  79:./ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  80:./ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  81:./ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  82:./ros_lib/ros/node_handle.h ****  */
  83:./ros_lib/ros/node_handle.h **** const uint8_t MODE_PROTOCOL_VER   = 1;
  84:./ros_lib/ros/node_handle.h **** const uint8_t PROTOCOL_VER1       = 0xff; // through groovy
  85:./ros_lib/ros/node_handle.h **** const uint8_t PROTOCOL_VER2       = 0xfe; // in hydro
  86:./ros_lib/ros/node_handle.h **** const uint8_t PROTOCOL_VER        = PROTOCOL_VER2;
  87:./ros_lib/ros/node_handle.h **** const uint8_t MODE_SIZE_L         = 2;
  88:./ros_lib/ros/node_handle.h **** const uint8_t MODE_SIZE_H         = 3;
  89:./ros_lib/ros/node_handle.h **** const uint8_t MODE_SIZE_CHECKSUM  = 4;    // checksum for msg size received from size L and H
  90:./ros_lib/ros/node_handle.h **** const uint8_t MODE_TOPIC_L        = 5;    // waiting for topic id
  91:./ros_lib/ros/node_handle.h **** const uint8_t MODE_TOPIC_H        = 6;
  92:./ros_lib/ros/node_handle.h **** const uint8_t MODE_MESSAGE        = 7;
  93:./ros_lib/ros/node_handle.h **** const uint8_t MODE_MSG_CHECKSUM   = 8;    // checksum for msg and topic id
  94:./ros_lib/ros/node_handle.h **** 
  95:./ros_lib/ros/node_handle.h **** 
  96:./ros_lib/ros/node_handle.h **** const uint8_t SERIAL_MSG_TIMEOUT  = 20;   // 20 milliseconds to recieve all of message data
  97:./ros_lib/ros/node_handle.h **** 
  98:./ros_lib/ros/node_handle.h **** using rosserial_msgs::TopicInfo;
  99:./ros_lib/ros/node_handle.h **** 
 100:./ros_lib/ros/node_handle.h **** /* Node Handle */
 101:./ros_lib/ros/node_handle.h **** template<class Hardware,
 102:./ros_lib/ros/node_handle.h ****          int MAX_SUBSCRIBERS = 25,
 103:./ros_lib/ros/node_handle.h ****          int MAX_PUBLISHERS = 25,
 104:./ros_lib/ros/node_handle.h ****          int INPUT_SIZE = 512,
 105:./ros_lib/ros/node_handle.h ****          int OUTPUT_SIZE = 512>
 106:./ros_lib/ros/node_handle.h **** class NodeHandle_ : public NodeHandleBase_
 107:./ros_lib/ros/node_handle.h **** {
 108:./ros_lib/ros/node_handle.h **** protected:
 109:./ros_lib/ros/node_handle.h ****   Hardware hardware_{};
 110:./ros_lib/ros/node_handle.h **** 
 111:./ros_lib/ros/node_handle.h ****   /* time used for syncing */
 112:./ros_lib/ros/node_handle.h ****   uint32_t rt_time{0};
 113:./ros_lib/ros/node_handle.h **** 
 114:./ros_lib/ros/node_handle.h ****   /* used for computing current time */
 115:./ros_lib/ros/node_handle.h ****   uint32_t sec_offset{0}, nsec_offset{0};
 116:./ros_lib/ros/node_handle.h **** 
 117:./ros_lib/ros/node_handle.h ****   /* Spinonce maximum work timeout */
 118:./ros_lib/ros/node_handle.h ****   uint32_t spin_timeout_{0};
 119:./ros_lib/ros/node_handle.h **** 
 120:./ros_lib/ros/node_handle.h ****   uint8_t message_in[INPUT_SIZE] = {0};
 121:./ros_lib/ros/node_handle.h ****   uint8_t message_out[OUTPUT_SIZE] = {0};
 122:./ros_lib/ros/node_handle.h **** 
 123:./ros_lib/ros/node_handle.h ****   Publisher * publishers[MAX_PUBLISHERS] = {nullptr};
 124:./ros_lib/ros/node_handle.h ****   Subscriber_ * subscribers[MAX_SUBSCRIBERS] {nullptr};
 125:./ros_lib/ros/node_handle.h **** 
 126:./ros_lib/ros/node_handle.h ****   /*
 127:./ros_lib/ros/node_handle.h ****    * Setup Functions
 128:./ros_lib/ros/node_handle.h ****    */
 129:./ros_lib/ros/node_handle.h **** public:
 130:./ros_lib/ros/node_handle.h ****   Hardware* getHardware()
 131:./ros_lib/ros/node_handle.h ****   {
 132:./ros_lib/ros/node_handle.h ****     return &hardware_;
 133:./ros_lib/ros/node_handle.h ****   }
 134:./ros_lib/ros/node_handle.h **** 
 135:./ros_lib/ros/node_handle.h ****   /* Start serial, initialize buffers */
 136:./ros_lib/ros/node_handle.h ****   void initNode()
 137:./ros_lib/ros/node_handle.h ****   {
 138:./ros_lib/ros/node_handle.h ****     hardware_.init();
 139:./ros_lib/ros/node_handle.h ****     mode_ = 0;
 140:./ros_lib/ros/node_handle.h ****     bytes_ = 0;
 141:./ros_lib/ros/node_handle.h ****     index_ = 0;
 142:./ros_lib/ros/node_handle.h ****     topic_ = 0;
 143:./ros_lib/ros/node_handle.h ****   };
 144:./ros_lib/ros/node_handle.h **** 
 145:./ros_lib/ros/node_handle.h ****   /* Start a named port, which may be network server IP, initialize buffers */
 146:./ros_lib/ros/node_handle.h ****   void initNode(char *portName)
 147:./ros_lib/ros/node_handle.h ****   {
 148:./ros_lib/ros/node_handle.h ****     hardware_.init(portName);
 149:./ros_lib/ros/node_handle.h ****     mode_ = 0;
 150:./ros_lib/ros/node_handle.h ****     bytes_ = 0;
 151:./ros_lib/ros/node_handle.h ****     index_ = 0;
 152:./ros_lib/ros/node_handle.h ****     topic_ = 0;
 153:./ros_lib/ros/node_handle.h ****   };
 154:./ros_lib/ros/node_handle.h **** 
 155:./ros_lib/ros/node_handle.h ****   /**
 156:./ros_lib/ros/node_handle.h ****    * @brief Sets the maximum time in millisconds that spinOnce() can work.
 157:./ros_lib/ros/node_handle.h ****    * This will not effect the processing of the buffer, as spinOnce processes
 158:./ros_lib/ros/node_handle.h ****    * one byte at a time. It simply sets the maximum time that one call can
 159:./ros_lib/ros/node_handle.h ****    * process for. You can choose to clear the buffer if that is beneficial if
 160:./ros_lib/ros/node_handle.h ****    * SPIN_TIMEOUT is returned from spinOnce().
 161:./ros_lib/ros/node_handle.h ****    * @param timeout The timeout in milliseconds that spinOnce will function.
 162:./ros_lib/ros/node_handle.h ****    */
 163:./ros_lib/ros/node_handle.h ****   void setSpinTimeout(const uint32_t& timeout)
 164:./ros_lib/ros/node_handle.h ****   {
 165:./ros_lib/ros/node_handle.h ****      spin_timeout_ = timeout;
 166:./ros_lib/ros/node_handle.h ****   }
 167:./ros_lib/ros/node_handle.h **** 
 168:./ros_lib/ros/node_handle.h **** protected:
 169:./ros_lib/ros/node_handle.h ****   // State machine variables for spinOnce
 170:./ros_lib/ros/node_handle.h ****   int mode_{0};
 171:./ros_lib/ros/node_handle.h ****   int bytes_{0};
 172:./ros_lib/ros/node_handle.h ****   int topic_{0};
 173:./ros_lib/ros/node_handle.h ****   int index_{0};
 174:./ros_lib/ros/node_handle.h ****   int checksum_{0};
 175:./ros_lib/ros/node_handle.h **** 
 176:./ros_lib/ros/node_handle.h ****   bool configured_{false};
 177:./ros_lib/ros/node_handle.h **** 
 178:./ros_lib/ros/node_handle.h ****   /* used for syncing the time */
 179:./ros_lib/ros/node_handle.h ****   uint32_t last_sync_time{0};
 180:./ros_lib/ros/node_handle.h ****   uint32_t last_sync_receive_time{0};
 181:./ros_lib/ros/node_handle.h ****   uint32_t last_msg_timeout_time{0};
 182:./ros_lib/ros/node_handle.h **** 
 183:./ros_lib/ros/node_handle.h **** public:
 184:./ros_lib/ros/node_handle.h ****   /* This function goes in your loop() function, it handles
 185:./ros_lib/ros/node_handle.h ****    *  serial input and callbacks for subscribers.
 186:./ros_lib/ros/node_handle.h ****    */
 187:./ros_lib/ros/node_handle.h **** 
 188:./ros_lib/ros/node_handle.h **** 
 189:./ros_lib/ros/node_handle.h ****   virtual int spinOnce() override
 190:./ros_lib/ros/node_handle.h ****   {
 191:./ros_lib/ros/node_handle.h ****     /* restart if timed out */
 192:./ros_lib/ros/node_handle.h ****     uint32_t c_time = hardware_.time();
 193:./ros_lib/ros/node_handle.h ****     if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 194:./ros_lib/ros/node_handle.h ****     {
 195:./ros_lib/ros/node_handle.h ****       configured_ = false;
 196:./ros_lib/ros/node_handle.h ****     }
 197:./ros_lib/ros/node_handle.h **** 
 198:./ros_lib/ros/node_handle.h ****     /* reset if message has timed out */
 199:./ros_lib/ros/node_handle.h ****     if (mode_ != MODE_FIRST_FF)
 200:./ros_lib/ros/node_handle.h ****     {
 201:./ros_lib/ros/node_handle.h ****       if (c_time > last_msg_timeout_time)
 202:./ros_lib/ros/node_handle.h ****       {
 203:./ros_lib/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 204:./ros_lib/ros/node_handle.h ****       }
 205:./ros_lib/ros/node_handle.h ****     }
 206:./ros_lib/ros/node_handle.h **** 
 207:./ros_lib/ros/node_handle.h ****     bool tx_stop_requested = false;
 208:./ros_lib/ros/node_handle.h ****     bool saw_time_msg = false;
 209:./ros_lib/ros/node_handle.h **** 
 210:./ros_lib/ros/node_handle.h ****     /* while available buffer, read data */
 211:./ros_lib/ros/node_handle.h ****     while (true)
 212:./ros_lib/ros/node_handle.h ****     {
 213:./ros_lib/ros/node_handle.h ****       // If a timeout has been specified, check how long spinOnce has been running.
 214:./ros_lib/ros/node_handle.h ****       if (spin_timeout_ > 0)
 215:./ros_lib/ros/node_handle.h ****       {
 216:./ros_lib/ros/node_handle.h ****         // If the maximum processing timeout has been exceeded, exit with error.
 217:./ros_lib/ros/node_handle.h ****         // The next spinOnce can continue where it left off, or optionally
 218:./ros_lib/ros/node_handle.h ****         // based on the application in use, the hardware buffer could be flushed
 219:./ros_lib/ros/node_handle.h ****         // and start fresh.
 220:./ros_lib/ros/node_handle.h ****         if ((hardware_.time() - c_time) > spin_timeout_)
 221:./ros_lib/ros/node_handle.h ****         {
 222:./ros_lib/ros/node_handle.h ****           // Exit the spin, processing timeout exceeded.
 223:./ros_lib/ros/node_handle.h ****           return SPIN_TIMEOUT;
 224:./ros_lib/ros/node_handle.h ****         }
 225:./ros_lib/ros/node_handle.h ****       }
 226:./ros_lib/ros/node_handle.h ****       int data = hardware_.read();
 227:./ros_lib/ros/node_handle.h ****       if (data < 0)
 228:./ros_lib/ros/node_handle.h ****         break;
 229:./ros_lib/ros/node_handle.h ****       checksum_ += data;
 230:./ros_lib/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 231:./ros_lib/ros/node_handle.h ****       {
 232:./ros_lib/ros/node_handle.h ****         message_in[index_++] = data;
 233:./ros_lib/ros/node_handle.h ****         bytes_--;
 234:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 235:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 236:./ros_lib/ros/node_handle.h ****       }
 237:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_FIRST_FF)
 238:./ros_lib/ros/node_handle.h ****       {
 239:./ros_lib/ros/node_handle.h ****         if (data == 0xff)
 240:./ros_lib/ros/node_handle.h ****         {
 241:./ros_lib/ros/node_handle.h ****           mode_++;
 242:./ros_lib/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 243:./ros_lib/ros/node_handle.h ****         }
 244:./ros_lib/ros/node_handle.h ****         else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 245:./ros_lib/ros/node_handle.h ****         {
 246:./ros_lib/ros/node_handle.h ****           /* We have been stuck in spinOnce too long, return error */
 247:./ros_lib/ros/node_handle.h ****           configured_ = false;
 248:./ros_lib/ros/node_handle.h ****           return SPIN_TIMEOUT;
 249:./ros_lib/ros/node_handle.h ****         }
 250:./ros_lib/ros/node_handle.h ****       }
 251:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_PROTOCOL_VER)
 252:./ros_lib/ros/node_handle.h ****       {
 253:./ros_lib/ros/node_handle.h ****         if (data == PROTOCOL_VER)
 254:./ros_lib/ros/node_handle.h ****         {
 255:./ros_lib/ros/node_handle.h ****           mode_++;
 256:./ros_lib/ros/node_handle.h ****         }
 257:./ros_lib/ros/node_handle.h ****         else
 258:./ros_lib/ros/node_handle.h ****         {
 259:./ros_lib/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;
 260:./ros_lib/ros/node_handle.h ****           if (configured_ == false)
 261:./ros_lib/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 262:./ros_lib/ros/node_handle.h ****         }
 263:./ros_lib/ros/node_handle.h ****       }
 264:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 265:./ros_lib/ros/node_handle.h ****       {
 266:./ros_lib/ros/node_handle.h ****         bytes_ = data;
 267:./ros_lib/ros/node_handle.h ****         index_ = 0;
 268:./ros_lib/ros/node_handle.h ****         mode_++;
 269:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 270:./ros_lib/ros/node_handle.h ****       }
 271:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 272:./ros_lib/ros/node_handle.h ****       {
 273:./ros_lib/ros/node_handle.h ****         bytes_ += data << 8;
 274:./ros_lib/ros/node_handle.h ****         mode_++;
 275:./ros_lib/ros/node_handle.h ****       }
 276:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_SIZE_CHECKSUM)
 277:./ros_lib/ros/node_handle.h ****       {
 278:./ros_lib/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 279:./ros_lib/ros/node_handle.h ****           mode_++;
 280:./ros_lib/ros/node_handle.h ****         else
 281:./ros_lib/ros/node_handle.h ****           mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 282:./ros_lib/ros/node_handle.h ****       }
 283:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 284:./ros_lib/ros/node_handle.h ****       {
 285:./ros_lib/ros/node_handle.h ****         topic_ = data;
 286:./ros_lib/ros/node_handle.h ****         mode_++;
 287:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 288:./ros_lib/ros/node_handle.h ****       }
 289:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 290:./ros_lib/ros/node_handle.h ****       {
 291:./ros_lib/ros/node_handle.h ****         topic_ += data << 8;
 292:./ros_lib/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 293:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)
 294:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 295:./ros_lib/ros/node_handle.h ****       }
 296:./ros_lib/ros/node_handle.h ****       else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 297:./ros_lib/ros/node_handle.h ****       {
 298:./ros_lib/ros/node_handle.h ****         mode_ = MODE_FIRST_FF;
 299:./ros_lib/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 300:./ros_lib/ros/node_handle.h ****         {
 301:./ros_lib/ros/node_handle.h ****           if (topic_ == TopicInfo::ID_PUBLISHER)
 302:./ros_lib/ros/node_handle.h ****           {
 303:./ros_lib/ros/node_handle.h ****             requestSyncTime();
 304:./ros_lib/ros/node_handle.h ****             negotiateTopics();
 305:./ros_lib/ros/node_handle.h ****             last_sync_time = c_time;
 306:./ros_lib/ros/node_handle.h ****             last_sync_receive_time = c_time;
 307:./ros_lib/ros/node_handle.h ****             return SPIN_ERR;
 308:./ros_lib/ros/node_handle.h ****           }
 309:./ros_lib/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TIME)
 310:./ros_lib/ros/node_handle.h ****           {
 311:./ros_lib/ros/node_handle.h ****             saw_time_msg = true;
 312:./ros_lib/ros/node_handle.h ****             syncTime(message_in);
 313:./ros_lib/ros/node_handle.h ****           }
 314:./ros_lib/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 315:./ros_lib/ros/node_handle.h ****           {
 316:./ros_lib/ros/node_handle.h ****             req_param_resp.deserialize(message_in);
 317:./ros_lib/ros/node_handle.h ****             param_received = true;
 318:./ros_lib/ros/node_handle.h ****           }
 319:./ros_lib/ros/node_handle.h ****           else if (topic_ == TopicInfo::ID_TX_STOP)
 320:./ros_lib/ros/node_handle.h ****           {
 321:./ros_lib/ros/node_handle.h ****             configured_ = false;
 322:./ros_lib/ros/node_handle.h ****             tx_stop_requested = true;
 323:./ros_lib/ros/node_handle.h ****           }
 324:./ros_lib/ros/node_handle.h ****           else
 325:./ros_lib/ros/node_handle.h ****           {
 326:./ros_lib/ros/node_handle.h ****             if (subscribers[topic_ - 100])
 327:./ros_lib/ros/node_handle.h ****               subscribers[topic_ - 100]->callback(message_in);
 328:./ros_lib/ros/node_handle.h ****           }
 329:./ros_lib/ros/node_handle.h ****         }
 330:./ros_lib/ros/node_handle.h ****       }
 331:./ros_lib/ros/node_handle.h ****     }
 332:./ros_lib/ros/node_handle.h **** 
 333:./ros_lib/ros/node_handle.h ****     /* occasionally sync time */
 334:./ros_lib/ros/node_handle.h ****     if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 335:./ros_lib/ros/node_handle.h ****     {
 336:./ros_lib/ros/node_handle.h ****       requestSyncTime();
 337:./ros_lib/ros/node_handle.h ****       last_sync_time = c_time;
 338:./ros_lib/ros/node_handle.h ****     }
 339:./ros_lib/ros/node_handle.h **** 
 340:./ros_lib/ros/node_handle.h ****     return saw_time_msg ? SPIN_TIME_RECV : (tx_stop_requested ? SPIN_TX_STOP_REQUESTED : SPIN_OK);
 341:./ros_lib/ros/node_handle.h ****   }
 342:./ros_lib/ros/node_handle.h **** 
 343:./ros_lib/ros/node_handle.h **** 
 344:./ros_lib/ros/node_handle.h ****   /* Are we connected to the PC? */
 345:./ros_lib/ros/node_handle.h ****   virtual bool connected() override
 762               		.loc 7 345 0
 763               		.cfi_startproc
 764               	.LVL59:
 765               	/* prologue: function */
 766               	/* frame size = 0 */
 767               	/* stack size = 0 */
 768               	.L__stack_usage = 0
 346:./ros_lib/ros/node_handle.h ****   {
 347:./ros_lib/ros/node_handle.h ****     return configured_;
 769               		.loc 7 347 0
 770 0000 8F57      		subi r24,127
 771 0002 9B4F      		sbci r25,-5
 772               	.LVL60:
 348:./ros_lib/ros/node_handle.h ****   };
 773               		.loc 7 348 0
 774 0004 FC01      		movw r30,r24
 775 0006 8081      		ld r24,Z
 776               	.LVL61:
 777 0008 0895      		ret
 778               		.cfi_endproc
 779               	.LFE176:
 781               		.text
 782               	.global	_Z9messageCbRKN10kitty_msgs10KittyStateE
 784               	_Z9messageCbRKN10kitty_msgs10KittyStateE:
 785               	.LFB150:
 786               		.file 8 "avr_subscriber.cpp"
   1:avr_subscriber.cpp **** #include "ros.h"
   2:avr_subscriber.cpp **** // #include "std_msgs/Float32MultiArray.h"
   3:avr_subscriber.cpp **** #include "kitty_msgs/KittyState.h"
   4:avr_subscriber.cpp **** 
   5:avr_subscriber.cpp **** // Include C headers (ie, non C++ headers) in this block
   6:avr_subscriber.cpp **** extern "C"
   7:avr_subscriber.cpp **** {
   8:avr_subscriber.cpp **** #include <util/delay.h>
   9:avr_subscriber.cpp **** #include "dc_step/st_mot.h"
  10:avr_subscriber.cpp **** #include "dc_step/dc_motor.h"
  11:avr_subscriber.cpp **** #include "dc_step/utils.h"
  12:avr_subscriber.cpp **** #include "dc_step/adc.h"
  13:avr_subscriber.cpp **** 
  14:avr_subscriber.cpp **** }
  15:avr_subscriber.cpp **** 
  16:avr_subscriber.cpp **** void InitAll(void);
  17:avr_subscriber.cpp **** 
  18:avr_subscriber.cpp **** // Needed for AVR to use virtual functions
  19:avr_subscriber.cpp **** extern "C" void __cxa_pure_virtual(void);
  20:avr_subscriber.cpp **** void __cxa_pure_virtual(void) {}
  21:avr_subscriber.cpp **** 
  22:avr_subscriber.cpp **** ros::NodeHandle nh;
  23:avr_subscriber.cpp **** 
  24:avr_subscriber.cpp **** void messageCb(const kitty_msgs::KittyState &speed_msg)
  25:avr_subscriber.cpp **** {
 787               		.loc 8 25 0
 788               		.cfi_startproc
 789               	.LVL62:
 790 0000 CF93      		push r28
 791               	.LCFI4:
 792               		.cfi_def_cfa_offset 4
 793               		.cfi_offset 28, -3
 794 0002 DF93      		push r29
 795               	.LCFI5:
 796               		.cfi_def_cfa_offset 5
 797               		.cfi_offset 29, -4
 798               	/* prologue: function */
 799               	/* frame size = 0 */
 800               	/* stack size = 2 */
 801               	.L__stack_usage = 2
 802 0004 EC01      		movw r28,r24
  26:avr_subscriber.cpp ****   SetSpeed(speed_msg.rotation_speed);
 803               		.loc 8 26 0
 804 0006 6A85      		ldd r22,Y+10
 805 0008 7B85      		ldd r23,Y+11
 806 000a 8C85      		ldd r24,Y+12
 807 000c 9D85      		ldd r25,Y+13
 808 000e 0E94 0000 		call SetSpeed
 809               	.LVL63:
  27:avr_subscriber.cpp ****   SetAngle(speed_msg.angle_steering);
 810               		.loc 8 27 0
 811 0012 6E85      		ldd r22,Y+14
 812 0014 7F85      		ldd r23,Y+15
 813 0016 8889      		ldd r24,Y+16
 814 0018 9989      		ldd r25,Y+17
 815               	/* epilogue start */
  28:avr_subscriber.cpp **** }
 816               		.loc 8 28 0
 817 001a DF91      		pop r29
 818 001c CF91      		pop r28
 819               	.LVL64:
  27:avr_subscriber.cpp ****   SetAngle(speed_msg.angle_steering);
 820               		.loc 8 27 0
 821 001e 0C94 0000 		jmp SetAngle
 822               	.LVL65:
 823               		.cfi_endproc
 824               	.LFE150:
 826               		.section	.rodata.str1.1
 827               	.LC9:
 828 00f5 4D65 7373 		.string	"Message from device dropped: message larger than buffer."
 828      6167 6520 
 828      6672 6F6D 
 828      2064 6576 
 828      6963 6520 
 829               		.section	.text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3Msg
 830               		.weak	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 832               	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 833               	.LFB167:
 349:./ros_lib/ros/node_handle.h **** 
 350:./ros_lib/ros/node_handle.h ****   /********************************************************************
 351:./ros_lib/ros/node_handle.h ****    * Time functions
 352:./ros_lib/ros/node_handle.h ****    */
 353:./ros_lib/ros/node_handle.h **** 
 354:./ros_lib/ros/node_handle.h ****   void requestSyncTime()
 355:./ros_lib/ros/node_handle.h ****   {
 356:./ros_lib/ros/node_handle.h ****     std_msgs::Time t;
 357:./ros_lib/ros/node_handle.h ****     publish(TopicInfo::ID_TIME, &t);
 358:./ros_lib/ros/node_handle.h ****     rt_time = hardware_.time();
 359:./ros_lib/ros/node_handle.h ****   }
 360:./ros_lib/ros/node_handle.h **** 
 361:./ros_lib/ros/node_handle.h ****   void syncTime(uint8_t * data)
 362:./ros_lib/ros/node_handle.h ****   {
 363:./ros_lib/ros/node_handle.h ****     std_msgs::Time t;
 364:./ros_lib/ros/node_handle.h ****     uint32_t offset = hardware_.time() - rt_time;
 365:./ros_lib/ros/node_handle.h **** 
 366:./ros_lib/ros/node_handle.h ****     t.deserialize(data);
 367:./ros_lib/ros/node_handle.h ****     t.data.sec += offset / 1000;
 368:./ros_lib/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 369:./ros_lib/ros/node_handle.h **** 
 370:./ros_lib/ros/node_handle.h ****     this->setNow(t.data);
 371:./ros_lib/ros/node_handle.h ****     last_sync_receive_time = hardware_.time();
 372:./ros_lib/ros/node_handle.h ****   }
 373:./ros_lib/ros/node_handle.h **** 
 374:./ros_lib/ros/node_handle.h ****   Time now()
 375:./ros_lib/ros/node_handle.h ****   {
 376:./ros_lib/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 377:./ros_lib/ros/node_handle.h ****     Time current_time;
 378:./ros_lib/ros/node_handle.h ****     current_time.sec = ms / 1000 + sec_offset;
 379:./ros_lib/ros/node_handle.h ****     current_time.nsec = (ms % 1000) * 1000000UL + nsec_offset;
 380:./ros_lib/ros/node_handle.h ****     normalizeSecNSec(current_time.sec, current_time.nsec);
 381:./ros_lib/ros/node_handle.h ****     return current_time;
 382:./ros_lib/ros/node_handle.h ****   }
 383:./ros_lib/ros/node_handle.h **** 
 384:./ros_lib/ros/node_handle.h ****   void setNow(const Time & new_now)
 385:./ros_lib/ros/node_handle.h ****   {
 386:./ros_lib/ros/node_handle.h ****     uint32_t ms = hardware_.time();
 387:./ros_lib/ros/node_handle.h ****     sec_offset = new_now.sec - ms / 1000 - 1;
 388:./ros_lib/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 389:./ros_lib/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 390:./ros_lib/ros/node_handle.h ****   }
 391:./ros_lib/ros/node_handle.h **** 
 392:./ros_lib/ros/node_handle.h ****   /********************************************************************
 393:./ros_lib/ros/node_handle.h ****    * Topic Management
 394:./ros_lib/ros/node_handle.h ****    */
 395:./ros_lib/ros/node_handle.h **** 
 396:./ros_lib/ros/node_handle.h ****   /* Register a new publisher */
 397:./ros_lib/ros/node_handle.h ****   bool advertise(Publisher & p)
 398:./ros_lib/ros/node_handle.h ****   {
 399:./ros_lib/ros/node_handle.h ****     for (int i = 0; i < MAX_PUBLISHERS; i++)
 400:./ros_lib/ros/node_handle.h ****     {
 401:./ros_lib/ros/node_handle.h ****       if (publishers[i] == 0) // empty slot
 402:./ros_lib/ros/node_handle.h ****       {
 403:./ros_lib/ros/node_handle.h ****         publishers[i] = &p;
 404:./ros_lib/ros/node_handle.h ****         p.id_ = i + 100 + MAX_SUBSCRIBERS;
 405:./ros_lib/ros/node_handle.h ****         p.nh_ = this;
 406:./ros_lib/ros/node_handle.h ****         return true;
 407:./ros_lib/ros/node_handle.h ****       }
 408:./ros_lib/ros/node_handle.h ****     }
 409:./ros_lib/ros/node_handle.h ****     return false;
 410:./ros_lib/ros/node_handle.h ****   }
 411:./ros_lib/ros/node_handle.h **** 
 412:./ros_lib/ros/node_handle.h ****   /* Register a new subscriber */
 413:./ros_lib/ros/node_handle.h ****   bool subscribe(Subscriber_& s)
 414:./ros_lib/ros/node_handle.h ****   {
 415:./ros_lib/ros/node_handle.h ****     for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 416:./ros_lib/ros/node_handle.h ****     {
 417:./ros_lib/ros/node_handle.h ****       if (subscribers[i] == 0) // empty slot
 418:./ros_lib/ros/node_handle.h ****       {
 419:./ros_lib/ros/node_handle.h ****         subscribers[i] = &s;
 420:./ros_lib/ros/node_handle.h ****         s.id_ = i + 100;
 421:./ros_lib/ros/node_handle.h ****         return true;
 422:./ros_lib/ros/node_handle.h ****       }
 423:./ros_lib/ros/node_handle.h ****     }
 424:./ros_lib/ros/node_handle.h ****     return false;
 425:./ros_lib/ros/node_handle.h ****   }
 426:./ros_lib/ros/node_handle.h **** 
 427:./ros_lib/ros/node_handle.h ****   /* Register a new Service Server */
 428:./ros_lib/ros/node_handle.h ****   template<typename MReq, typename MRes, typename ObjT>
 429:./ros_lib/ros/node_handle.h ****   bool advertiseService(ServiceServer<MReq, MRes, ObjT>& srv)
 430:./ros_lib/ros/node_handle.h ****   {
 431:./ros_lib/ros/node_handle.h ****     bool v = advertise(srv.pub);
 432:./ros_lib/ros/node_handle.h ****     bool w = subscribe(srv);
 433:./ros_lib/ros/node_handle.h ****     return v && w;
 434:./ros_lib/ros/node_handle.h ****   }
 435:./ros_lib/ros/node_handle.h **** 
 436:./ros_lib/ros/node_handle.h ****   /* Register a new Service Client */
 437:./ros_lib/ros/node_handle.h ****   template<typename MReq, typename MRes>
 438:./ros_lib/ros/node_handle.h ****   bool serviceClient(ServiceClient<MReq, MRes>& srv)
 439:./ros_lib/ros/node_handle.h ****   {
 440:./ros_lib/ros/node_handle.h ****     bool v = advertise(srv.pub);
 441:./ros_lib/ros/node_handle.h ****     bool w = subscribe(srv);
 442:./ros_lib/ros/node_handle.h ****     return v && w;
 443:./ros_lib/ros/node_handle.h ****   }
 444:./ros_lib/ros/node_handle.h **** 
 445:./ros_lib/ros/node_handle.h ****   void negotiateTopics()
 446:./ros_lib/ros/node_handle.h ****   {
 447:./ros_lib/ros/node_handle.h ****     rosserial_msgs::TopicInfo ti;
 448:./ros_lib/ros/node_handle.h ****     int i;
 449:./ros_lib/ros/node_handle.h ****     for (i = 0; i < MAX_PUBLISHERS; i++)
 450:./ros_lib/ros/node_handle.h ****     {
 451:./ros_lib/ros/node_handle.h ****       if (publishers[i] != 0) // non-empty slot
 452:./ros_lib/ros/node_handle.h ****       {
 453:./ros_lib/ros/node_handle.h ****         ti.topic_id = publishers[i]->id_;
 454:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 455:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 456:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 457:./ros_lib/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 458:./ros_lib/ros/node_handle.h ****         publish(publishers[i]->getEndpointType(), &ti);
 459:./ros_lib/ros/node_handle.h ****       }
 460:./ros_lib/ros/node_handle.h ****     }
 461:./ros_lib/ros/node_handle.h ****     for (i = 0; i < MAX_SUBSCRIBERS; i++)
 462:./ros_lib/ros/node_handle.h ****     {
 463:./ros_lib/ros/node_handle.h ****       if (subscribers[i] != 0) // non-empty slot
 464:./ros_lib/ros/node_handle.h ****       {
 465:./ros_lib/ros/node_handle.h ****         ti.topic_id = subscribers[i]->id_;
 466:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) subscribers[i]->topic_;
 467:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) subscribers[i]->getMsgType();
 468:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 469:./ros_lib/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 470:./ros_lib/ros/node_handle.h ****         publish(subscribers[i]->getEndpointType(), &ti);
 471:./ros_lib/ros/node_handle.h ****       }
 472:./ros_lib/ros/node_handle.h ****     }
 473:./ros_lib/ros/node_handle.h ****     configured_ = true;
 474:./ros_lib/ros/node_handle.h ****   }
 475:./ros_lib/ros/node_handle.h **** 
 476:./ros_lib/ros/node_handle.h ****   virtual int publish(int id, const Msg * msg) override
 834               		.loc 7 476 0
 835               		.cfi_startproc
 836               	.LVL66:
 837 0000 CF92      		push r12
 838               	.LCFI6:
 839               		.cfi_def_cfa_offset 4
 840               		.cfi_offset 12, -3
 841 0002 DF92      		push r13
 842               	.LCFI7:
 843               		.cfi_def_cfa_offset 5
 844               		.cfi_offset 13, -4
 845 0004 EF92      		push r14
 846               	.LCFI8:
 847               		.cfi_def_cfa_offset 6
 848               		.cfi_offset 14, -5
 849 0006 FF92      		push r15
 850               	.LCFI9:
 851               		.cfi_def_cfa_offset 7
 852               		.cfi_offset 15, -6
 853 0008 0F93      		push r16
 854               	.LCFI10:
 855               		.cfi_def_cfa_offset 8
 856               		.cfi_offset 16, -7
 857 000a 1F93      		push r17
 858               	.LCFI11:
 859               		.cfi_def_cfa_offset 9
 860               		.cfi_offset 17, -8
 861 000c CF93      		push r28
 862               	.LCFI12:
 863               		.cfi_def_cfa_offset 10
 864               		.cfi_offset 28, -9
 865 000e DF93      		push r29
 866               	.LCFI13:
 867               		.cfi_def_cfa_offset 11
 868               		.cfi_offset 29, -10
 869 0010 00D0      		rcall .
 870 0012 1F92      		push __zero_reg__
 871 0014 1F92      		push __zero_reg__
 872               	.LCFI14:
 873               		.cfi_def_cfa_offset 16
 874 0016 CDB7      		in r28,__SP_L__
 875 0018 DEB7      		in r29,__SP_H__
 876               	.LCFI15:
 877               		.cfi_def_cfa_register 28
 878               	/* prologue: function */
 879               	/* frame size = 5 */
 880               	/* stack size = 13 */
 881               	.L__stack_usage = 13
 477:./ros_lib/ros/node_handle.h ****   {
 478:./ros_lib/ros/node_handle.h ****     if (id >= 100 && !configured_)
 882               		.loc 7 478 0
 883 001a 6436      		cpi r22,100
 884 001c 7105      		cpc r23,__zero_reg__
 885 001e 04F0      		brlt .L22
 886               		.loc 7 478 0 is_stmt 0 discriminator 1
 887 0020 FC01      		movw r30,r24
 888 0022 EF57      		subi r30,127
 889 0024 FB4F      		sbci r31,-5
 890 0026 2081      		ld r18,Z
 891 0028 2223      		tst r18
 892 002a 01F4      		brne .+2
 893 002c 00C0      		rjmp .L28
 894               	.L22:
 895 002e DA01      		movw r26,r20
 896 0030 7B01      		movw r14,r22
 897 0032 8C01      		movw r16,r24
 479:./ros_lib/ros/node_handle.h ****       return 0;
 480:./ros_lib/ros/node_handle.h **** 
 481:./ros_lib/ros/node_handle.h ****     /* serialize message */
 482:./ros_lib/ros/node_handle.h ****     int l = msg->serialize(message_out + 7);
 898               		.loc 7 482 0 is_stmt 1
 899 0034 BC01      		movw r22,r24
 900               	.LVL67:
 901 0036 665E      		subi r22,-26
 902 0038 7D4F      		sbci r23,-3
 903 003a ED91      		ld r30,X+
 904 003c FC91      		ld r31,X
 905 003e 0190      		ld __tmp_reg__,Z+
 906 0040 F081      		ld r31,Z
 907 0042 E02D      		mov r30,__tmp_reg__
 908 0044 CA01      		movw r24,r20
 909               	.LVL68:
 910 0046 1995      		eicall
 911               	.LVL69:
 483:./ros_lib/ros/node_handle.h **** 
 484:./ros_lib/ros/node_handle.h ****     /* setup the header */
 485:./ros_lib/ros/node_handle.h ****     message_out[0] = 0xff;
 912               		.loc 7 485 0
 913 0048 6801      		movw r12,r16
 914 004a 2DEE      		ldi r18,-19
 915 004c C21A      		sub r12,r18
 916 004e 2DEF      		ldi r18,-3
 917 0050 D20A      		sbc r13,r18
 918 0052 2FEF      		ldi r18,lo8(-1)
 919 0054 D601      		movw r26,r12
 920 0056 2C93      		st X,r18
 486:./ros_lib/ros/node_handle.h ****     message_out[1] = PROTOCOL_VER;
 921               		.loc 7 486 0
 922 0058 F801      		movw r30,r16
 923 005a EC5E      		subi r30,-20
 924 005c FD4F      		sbci r31,-3
 925 005e 2EEF      		ldi r18,lo8(-2)
 926 0060 2083      		st Z,r18
 487:./ros_lib/ros/node_handle.h ****     message_out[2] = (uint8_t)((uint16_t)l & 255);
 927               		.loc 7 487 0
 928 0062 3196      		adiw r30,1
 929 0064 8083      		st Z,r24
 488:./ros_lib/ros/node_handle.h ****     message_out[3] = (uint8_t)((uint16_t)l >> 8);
 930               		.loc 7 488 0
 931 0066 3196      		adiw r30,1
 932 0068 9083      		st Z,r25
 489:./ros_lib/ros/node_handle.h ****     message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 933               		.loc 7 489 0
 934 006a 3196      		adiw r30,1
 935 006c 292F      		mov r18,r25
 936 006e 280F      		add r18,r24
 937 0070 2095      		com r18
 938 0072 2083      		st Z,r18
 490:./ros_lib/ros/node_handle.h ****     message_out[5] = (uint8_t)((int16_t)id & 255);
 939               		.loc 7 490 0
 940 0074 3196      		adiw r30,1
 941 0076 E082      		st Z,r14
 491:./ros_lib/ros/node_handle.h ****     message_out[6] = (uint8_t)((int16_t)id >> 8);
 942               		.loc 7 491 0
 943 0078 1696      		adiw r26,6
 944 007a FC92      		st X,r15
 945               	.LVL70:
 946               	.LBB96:
 492:./ros_lib/ros/node_handle.h **** 
 493:./ros_lib/ros/node_handle.h ****     /* calculate checksum */
 494:./ros_lib/ros/node_handle.h ****     int chk = 0;
 495:./ros_lib/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 947               		.loc 7 495 0
 948 007c 45E0      		ldi r20,lo8(5)
 949 007e 50E0      		ldi r21,0
 950               	.LBE96:
 494:./ros_lib/ros/node_handle.h ****     for (int i = 5; i < l + 7; i++)
 951               		.loc 7 494 0
 952 0080 20E0      		ldi r18,0
 953 0082 30E0      		ldi r19,0
 954               	.LBB97:
 955               		.loc 7 495 0
 956 0084 DC01      		movw r26,r24
 957 0086 1696      		adiw r26,6
 958               	.LVL71:
 959               	.L25:
 960               		.loc 7 495 0 is_stmt 0 discriminator 3
 961 0088 A417      		cp r26,r20
 962 008a B507      		cpc r27,r21
 963 008c 04F0      		brlt .L24
 496:./ros_lib/ros/node_handle.h ****       chk += message_out[i];
 964               		.loc 7 496 0 is_stmt 1 discriminator 2
 965 008e 6191      		ld r22,Z+
 966 0090 260F      		add r18,r22
 967 0092 311D      		adc r19,__zero_reg__
 968               	.LVL72:
 495:./ros_lib/ros/node_handle.h ****       chk += message_out[i];
 969               		.loc 7 495 0 discriminator 2
 970 0094 4F5F      		subi r20,-1
 971 0096 5F4F      		sbci r21,-1
 972               	.LVL73:
 973 0098 00C0      		rjmp .L25
 974               	.L24:
 975               	.LVL74:
 976               	.LBE97:
 497:./ros_lib/ros/node_handle.h ****     l += 7;
 498:./ros_lib/ros/node_handle.h ****     message_out[l++] = 255 - (chk % 256);
 977               		.loc 7 498 0
 978 009a 7C01      		movw r14,r24
 979               	.LVL75:
 980 009c B8E0      		ldi r27,8
 981 009e EB0E      		add r14,r27
 982 00a0 F11C      		adc r15,__zero_reg__
 983               	.LVL76:
 984 00a2 800F      		add r24,r16
 985 00a4 911F      		adc r25,r17
 986 00a6 FC01      		movw r30,r24
 987 00a8 E65E      		subi r30,-26
 988 00aa FD4F      		sbci r31,-3
 989 00ac 2095      		com r18
 990               	.LVL77:
 991 00ae 2083      		st Z,r18
 499:./ros_lib/ros/node_handle.h **** 
 500:./ros_lib/ros/node_handle.h ****     if (l <= OUTPUT_SIZE)
 992               		.loc 7 500 0
 993 00b0 E1E0      		ldi r30,1
 994 00b2 EE16      		cp r14,r30
 995 00b4 E2E0      		ldi r30,2
 996 00b6 FE06      		cpc r15,r30
 997 00b8 04F4      		brge .L26
 998               	.LVL78:
 501:./ros_lib/ros/node_handle.h ****     {
 502:./ros_lib/ros/node_handle.h ****       hardware_.write(message_out, l);
 999               		.loc 7 502 0
 1000 00ba 8601      		movw r16,r12
 1001               	.LVL79:
 1002               	.L27:
 1003               	.LBB98:
 1004               	.LBB99:
 1005               		.file 9 "Atmega2560Hardware.h"
   1:Atmega2560Hardware.h **** #ifndef _ATMEGA2560_HARDWARE_H
   2:Atmega2560Hardware.h **** #define _ATMEGA2560_HARDWARE_H
   3:Atmega2560Hardware.h **** 
   4:Atmega2560Hardware.h **** extern "C"
   5:Atmega2560Hardware.h **** {
   6:Atmega2560Hardware.h ****   #include <avr/interrupt.h>
   7:Atmega2560Hardware.h ****   #include <avr/wdt.h>
   8:Atmega2560Hardware.h ****   #include "avr_time.h"
   9:Atmega2560Hardware.h ****   #include "avr_uart.h"
  10:Atmega2560Hardware.h **** }
  11:Atmega2560Hardware.h **** 
  12:Atmega2560Hardware.h **** class Atmega2560Hardware {
  13:Atmega2560Hardware.h ****   public:
  14:Atmega2560Hardware.h ****     Atmega2560Hardware() {}
  15:Atmega2560Hardware.h **** 
  16:Atmega2560Hardware.h **** 
  17:Atmega2560Hardware.h ****     // Initialize the AVR
  18:Atmega2560Hardware.h ****     void init()
  19:Atmega2560Hardware.h ****     {
  20:Atmega2560Hardware.h ****       wdt_disable();
  21:Atmega2560Hardware.h ****       avr_time_init();
  22:Atmega2560Hardware.h ****       avr_uart_init();
  23:Atmega2560Hardware.h ****       sei();
  24:Atmega2560Hardware.h ****     }
  25:Atmega2560Hardware.h **** 
  26:Atmega2560Hardware.h ****     // Read a byte of data from ROS connection.
  27:Atmega2560Hardware.h ****     // If no data, returns -1
  28:Atmega2560Hardware.h ****     int read()
  29:Atmega2560Hardware.h ****     {
  30:Atmega2560Hardware.h ****       return avr_uart_receive_byte();
  31:Atmega2560Hardware.h ****     }
  32:Atmega2560Hardware.h **** 
  33:Atmega2560Hardware.h **** 
  34:Atmega2560Hardware.h ****     // Send a byte of data to ROS connection
  35:Atmega2560Hardware.h ****     void write(uint8_t* data, int length)
  36:Atmega2560Hardware.h ****     {
  37:Atmega2560Hardware.h ****       for(int i = 0; i < length; i++)
 1006               		.loc 9 37 0
 1007 00bc C801      		movw r24,r16
 1008 00be 8C19      		sub r24,r12
 1009 00c0 9D09      		sbc r25,r13
 1010 00c2 8E15      		cp r24,r14
 1011 00c4 9F05      		cpc r25,r15
 1012 00c6 04F4      		brge .L29
  38:Atmega2560Hardware.h ****       {
  39:Atmega2560Hardware.h ****         avr_uart_send_byte(data[i]);
 1013               		.loc 9 39 0
 1014 00c8 D801      		movw r26,r16
 1015 00ca 8D91      		ld r24,X+
 1016 00cc 8D01      		movw r16,r26
 1017               	.LVL80:
 1018 00ce 0E94 0000 		call avr_uart_send_byte
 1019               	.LVL81:
 1020 00d2 00C0      		rjmp .L27
 1021               	.LVL82:
 1022               	.L26:
 1023               	.LBE99:
 1024               	.LBE98:
 1025               	.LBB101:
 1026               	.LBB102:
 1027               	.LBB103:
 1028               	.LBB104:
 1029               	.LBB105:
  27:./ros_lib/rosserial_msgs/Log.h ****     {
 1030               		.loc 3 27 0
 1031 00d4 80E0      		ldi r24,lo8(_ZTVN14rosserial_msgs3LogE+4)
 1032 00d6 90E0      		ldi r25,hi8(_ZTVN14rosserial_msgs3LogE+4)
 1033 00d8 9A83      		std Y+2,r25
 1034 00da 8983      		std Y+1,r24
 1035               	.LVL83:
 1036               	.LBE105:
 1037               	.LBE104:
 503:./ros_lib/ros/node_handle.h ****       return l;
 504:./ros_lib/ros/node_handle.h ****     }
 505:./ros_lib/ros/node_handle.h ****     else
 506:./ros_lib/ros/node_handle.h ****     {
 507:./ros_lib/ros/node_handle.h ****       logerror("Message from device dropped: message larger than buffer.");
 508:./ros_lib/ros/node_handle.h ****       return -1;
 509:./ros_lib/ros/node_handle.h ****     }
 510:./ros_lib/ros/node_handle.h ****   }
 511:./ros_lib/ros/node_handle.h **** 
 512:./ros_lib/ros/node_handle.h ****   /********************************************************************
 513:./ros_lib/ros/node_handle.h ****    * Logging
 514:./ros_lib/ros/node_handle.h ****    */
 515:./ros_lib/ros/node_handle.h **** 
 516:./ros_lib/ros/node_handle.h **** protected:
 517:./ros_lib/ros/node_handle.h ****   void log(char byte, const char * msg)
 518:./ros_lib/ros/node_handle.h ****   {
 519:./ros_lib/ros/node_handle.h ****     rosserial_msgs::Log l;
 520:./ros_lib/ros/node_handle.h ****     l.level = byte;
 1038               		.loc 7 520 0
 1039 00dc 83E0      		ldi r24,lo8(3)
 1040 00de 8B83      		std Y+3,r24
 521:./ros_lib/ros/node_handle.h ****     l.msg = (char*)msg;
 1041               		.loc 7 521 0
 1042 00e0 80E0      		ldi r24,lo8(.LC9)
 1043 00e2 90E0      		ldi r25,hi8(.LC9)
 1044 00e4 9D83      		std Y+5,r25
 1045 00e6 8C83      		std Y+4,r24
 522:./ros_lib/ros/node_handle.h ****     publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 1046               		.loc 7 522 0
 1047 00e8 D801      		movw r26,r16
 1048 00ea ED91      		ld r30,X+
 1049 00ec FC91      		ld r31,X
 1050 00ee 0190      		ld __tmp_reg__,Z+
 1051 00f0 F081      		ld r31,Z
 1052 00f2 E02D      		mov r30,__tmp_reg__
 1053 00f4 AE01      		movw r20,r28
 1054               	.LVL84:
 1055 00f6 4F5F      		subi r20,-1
 1056 00f8 5F4F      		sbci r21,-1
 1057 00fa 67E0      		ldi r22,lo8(7)
 1058 00fc 70E0      		ldi r23,0
 1059 00fe C801      		movw r24,r16
 1060 0100 1995      		eicall
 1061               	.LVL85:
 1062               	.LBE103:
 1063               	.LBE102:
 1064               	.LBE101:
 508:./ros_lib/ros/node_handle.h ****     }
 1065               		.loc 7 508 0
 1066 0102 8FEF      		ldi r24,lo8(-1)
 1067 0104 9FEF      		ldi r25,lo8(-1)
 1068 0106 00C0      		rjmp .L23
 1069               	.LVL86:
 1070               	.L28:
 479:./ros_lib/ros/node_handle.h **** 
 1071               		.loc 7 479 0
 1072 0108 80E0      		ldi r24,0
 1073               	.LVL87:
 1074 010a 90E0      		ldi r25,0
 1075 010c 00C0      		rjmp .L23
 1076               	.LVL88:
 1077               	.L29:
 1078               	.LBB106:
 1079               	.LBB100:
  37:Atmega2560Hardware.h ****       {
 1080               		.loc 9 37 0
 1081 010e C701      		movw r24,r14
 1082               	.LVL89:
 1083               	.L23:
 1084               	/* epilogue start */
 1085               	.LBE100:
 1086               	.LBE106:
 510:./ros_lib/ros/node_handle.h **** 
 1087               		.loc 7 510 0
 1088 0110 0F90      		pop __tmp_reg__
 1089 0112 0F90      		pop __tmp_reg__
 1090 0114 0F90      		pop __tmp_reg__
 1091 0116 0F90      		pop __tmp_reg__
 1092 0118 0F90      		pop __tmp_reg__
 1093 011a DF91      		pop r29
 1094 011c CF91      		pop r28
 1095 011e 1F91      		pop r17
 1096 0120 0F91      		pop r16
 1097 0122 FF90      		pop r15
 1098 0124 EF90      		pop r14
 1099 0126 DF90      		pop r13
 1100 0128 CF90      		pop r12
 1101 012a 0895      		ret
 1102               		.cfi_endproc
 1103               	.LFE167:
 1105               		.text
 1106               	.global	__cxa_pure_virtual
 1108               	__cxa_pure_virtual:
 1109               	.LFB143:
  20:avr_subscriber.cpp **** 
 1110               		.loc 8 20 0
 1111               		.cfi_startproc
 1112               	/* prologue: function */
 1113               	/* frame size = 0 */
 1114               	/* stack size = 0 */
 1115               	.L__stack_usage = 0
 1116 0022 0895      		ret
 1117               		.cfi_endproc
 1118               	.LFE143:
 1120               	.global	_Z7InitAllv
 1122               	_Z7InitAllv:
 1123               	.LFB152:
  29:avr_subscriber.cpp **** 
  30:avr_subscriber.cpp **** ros::Subscriber<kitty_msgs::KittyState> sub("set_speed", &messageCb);
  31:avr_subscriber.cpp **** 
  32:avr_subscriber.cpp **** int main()
  33:avr_subscriber.cpp **** {
  34:avr_subscriber.cpp ****   uint32_t lasttime = 0UL;
  35:avr_subscriber.cpp ****   // Initialize ROS
  36:avr_subscriber.cpp ****   nh.initNode();
  37:avr_subscriber.cpp ****   nh.subscribe(sub);
  38:avr_subscriber.cpp ****   InitAll();
  39:avr_subscriber.cpp **** 
  40:avr_subscriber.cpp ****   while (1)
  41:avr_subscriber.cpp ****   {
  42:avr_subscriber.cpp ****     // Send the message every second
  43:avr_subscriber.cpp ****     // if(avr_time_now() - lasttime > my_delay)
  44:avr_subscriber.cpp ****     // {
  45:avr_subscriber.cpp ****     //   PORTB ^= (1 << PB7);
  46:avr_subscriber.cpp ****     //   lasttime = avr_time_now();
  47:avr_subscriber.cpp **** 
  48:avr_subscriber.cpp ****     // }
  49:avr_subscriber.cpp ****     nh.spinOnce();
  50:avr_subscriber.cpp ****   }
  51:avr_subscriber.cpp **** 
  52:avr_subscriber.cpp ****   return 0;
  53:avr_subscriber.cpp **** }
  54:avr_subscriber.cpp **** 
  55:avr_subscriber.cpp **** 
  56:avr_subscriber.cpp **** void InitAll(void)
  57:avr_subscriber.cpp **** {
 1124               		.loc 8 57 0
 1125               		.cfi_startproc
 1126               	/* prologue: function */
 1127               	/* frame size = 0 */
 1128               	/* stack size = 0 */
 1129               	.L__stack_usage = 0
  58:avr_subscriber.cpp ****   DDRB |= (1 << 7);
 1130               		.loc 8 58 0
 1131 0024 279A      		sbi 0x4,7
  59:avr_subscriber.cpp ****   AdcInit();
 1132               		.loc 8 59 0
 1133 0026 0E94 0000 		call AdcInit
 1134               	.LVL90:
  60:avr_subscriber.cpp ****   StMotInit();
 1135               		.loc 8 60 0
 1136 002a 0E94 0000 		call StMotInit
 1137               	.LVL91:
  61:avr_subscriber.cpp ****   DcMotInit();
 1138               		.loc 8 61 0
 1139 002e 0E94 0000 		call DcMotInit
 1140               	.LVL92:
 1141               	.LBB107:
 1142               	.LBB108:
 1143               		.file 10 "/usr/lib/avr/include/util/delay.h"
   1:/usr/lib/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/avr/include/util/delay.h **** 
   6:/usr/lib/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/avr/include/util/delay.h **** 
   9:/usr/lib/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/avr/include/util/delay.h **** 
  12:/usr/lib/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/avr/include/util/delay.h ****      distribution.
  16:/usr/lib/avr/include/util/delay.h **** 
  17:/usr/lib/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/avr/include/util/delay.h **** 
  21:/usr/lib/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/avr/include/util/delay.h **** 
  33:/usr/lib/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/lib/avr/include/util/delay.h **** 
  35:/usr/lib/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/avr/include/util/delay.h **** 
  38:/usr/lib/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/lib/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/lib/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/lib/avr/include/util/delay.h **** #  endif
  42:/usr/lib/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/lib/avr/include/util/delay.h **** 
  44:/usr/lib/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/lib/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/lib/avr/include/util/delay.h **** #include <math.h>
  47:/usr/lib/avr/include/util/delay.h **** 
  48:/usr/lib/avr/include/util/delay.h **** /** \file */
  49:/usr/lib/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/lib/avr/include/util/delay.h ****     \code
  51:/usr/lib/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/lib/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/lib/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/lib/avr/include/util/delay.h ****     \endcode
  55:/usr/lib/avr/include/util/delay.h **** 
  56:/usr/lib/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/lib/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/lib/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/lib/avr/include/util/delay.h ****     used.
  60:/usr/lib/avr/include/util/delay.h **** 
  61:/usr/lib/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/lib/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/lib/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/lib/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/lib/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/lib/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/lib/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/lib/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/lib/avr/include/util/delay.h **** 
  70:/usr/lib/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/lib/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/lib/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/lib/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/lib/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/lib/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/lib/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/lib/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/lib/avr/include/util/delay.h **** 
  79:/usr/lib/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/lib/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/lib/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/lib/avr/include/util/delay.h **** 
  83:/usr/lib/avr/include/util/delay.h **** */
  84:/usr/lib/avr/include/util/delay.h **** 
  85:/usr/lib/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/lib/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/lib/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/lib/avr/include/util/delay.h **** #endif
  89:/usr/lib/avr/include/util/delay.h **** 
  90:/usr/lib/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/lib/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/lib/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/lib/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/lib/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/lib/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/lib/avr/include/util/delay.h **** 
  97:/usr/lib/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/lib/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/lib/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/lib/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/lib/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/lib/avr/include/util/delay.h **** 
 103:/usr/lib/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/lib/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/lib/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/lib/avr/include/util/delay.h ****     integer value.
 107:/usr/lib/avr/include/util/delay.h ****  */
 108:/usr/lib/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/lib/avr/include/util/delay.h **** #endif
 110:/usr/lib/avr/include/util/delay.h **** 
 111:/usr/lib/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/lib/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/lib/avr/include/util/delay.h **** #endif
 114:/usr/lib/avr/include/util/delay.h **** 
 115:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/lib/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/lib/avr/include/util/delay.h **** #endif
 120:/usr/lib/avr/include/util/delay.h **** 
 121:/usr/lib/avr/include/util/delay.h **** /**
 122:/usr/lib/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/lib/avr/include/util/delay.h **** 
 124:/usr/lib/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/lib/avr/include/util/delay.h **** 
 126:/usr/lib/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/lib/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/lib/avr/include/util/delay.h **** 
 129:/usr/lib/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/lib/avr/include/util/delay.h **** 
 131:/usr/lib/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/lib/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/lib/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/lib/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/lib/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/lib/avr/include/util/delay.h **** 
 137:/usr/lib/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/lib/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/lib/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/lib/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/lib/avr/include/util/delay.h **** 
 142:/usr/lib/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/lib/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/lib/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/lib/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/lib/avr/include/util/delay.h **** 
 147:/usr/lib/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/lib/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/lib/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/lib/avr/include/util/delay.h ****    respectively.
 151:/usr/lib/avr/include/util/delay.h **** 
 152:/usr/lib/avr/include/util/delay.h ****    \note
 153:/usr/lib/avr/include/util/delay.h **** 
 154:/usr/lib/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/lib/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/lib/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/lib/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/lib/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/lib/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/lib/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/lib/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/lib/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/lib/avr/include/util/delay.h **** 
 164:/usr/lib/avr/include/util/delay.h ****  */
 165:/usr/lib/avr/include/util/delay.h **** void
 166:/usr/lib/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/lib/avr/include/util/delay.h **** {
 168:/usr/lib/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/lib/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/lib/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/lib/avr/include/util/delay.h **** 
 176:/usr/lib/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/lib/avr/include/util/delay.h **** 
 179:/usr/lib/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/lib/avr/include/util/delay.h **** 
 182:/usr/lib/avr/include/util/delay.h **** 	#else
 183:/usr/lib/avr/include/util/delay.h **** 		//round up by default
 184:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/lib/avr/include/util/delay.h **** 	#endif
 186:/usr/lib/avr/include/util/delay.h **** 
 187:/usr/lib/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1144               		.loc 10 187 0
 1145 0032 2FEF      		ldi r18,lo8(319999)
 1146 0034 81EE      		ldi r24,hi8(319999)
 1147 0036 94E0      		ldi r25,hlo8(319999)
 1148 0038 2150      	1:	subi r18,1
 1149 003a 8040      		sbci r24,0
 1150 003c 9040      		sbci r25,0
 1151 003e 01F4      		brne 1b
 1152 0040 00C0      		rjmp .
 1153 0042 0000      		nop
 1154               	.LVL93:
 1155               	.LBE108:
 1156               	.LBE107:
  62:avr_subscriber.cpp ****   // SetAngle(1);
  63:avr_subscriber.cpp ****   // SetSpeed(0);
  64:avr_subscriber.cpp ****   _delay_ms(100);
  65:avr_subscriber.cpp ****   sei();
 1157               		.loc 8 65 0
 1158               	/* #APP */
 1159               	 ;  65 "avr_subscriber.cpp" 1
 1160 0044 7894      		sei
 1161               	 ;  0 "" 2
 1162               	/* #NOAPP */
 1163 0046 0895      		ret
 1164               		.cfi_endproc
 1165               	.LFE152:
 1167               		.section	.text._ZN3ros3Msg8varToArrIPhmEEvT_T0_,"axG",@progbits,_ZN3ros3Msg8varToArrIPhmEEvT_T0_,c
 1168               		.weak	_ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1170               	_ZN3ros3Msg8varToArrIPhmEEvT_T0_:
 1171               	.LFB153:
 1172               		.file 11 "./ros_lib/ros/msg.h"
   1:./ros_lib/ros/msg.h **** /*
   2:./ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/msg.h ****  *
   4:./ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/msg.h ****  * All rights reserved.
   6:./ros_lib/ros/msg.h ****  *
   7:./ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/msg.h ****  * are met:
  10:./ros_lib/ros/msg.h ****  *
  11:./ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/msg.h ****  *    with the distribution.
  17:./ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/msg.h ****  *
  21:./ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/msg.h ****  */
  34:./ros_lib/ros/msg.h **** 
  35:./ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./ros_lib/ros/msg.h **** 
  38:./ros_lib/ros/msg.h **** #include <stdint.h>
  39:./ros_lib/ros/msg.h **** #include <stddef.h>
  40:./ros_lib/ros/msg.h **** #include <string.h>
  41:./ros_lib/ros/msg.h **** 
  42:./ros_lib/ros/msg.h **** namespace ros
  43:./ros_lib/ros/msg.h **** {
  44:./ros_lib/ros/msg.h **** 
  45:./ros_lib/ros/msg.h **** /* Base Message Type */
  46:./ros_lib/ros/msg.h **** class Msg
  47:./ros_lib/ros/msg.h **** {
  48:./ros_lib/ros/msg.h **** public:
  49:./ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  50:./ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  51:./ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  52:./ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  53:./ros_lib/ros/msg.h **** 
  54:./ros_lib/ros/msg.h ****   /**
  55:./ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  56:./ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  57:./ros_lib/ros/msg.h ****    *        fields, despite AVR having no native support for double.
  58:./ros_lib/ros/msg.h ****    *
  59:./ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  60:./ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  61:./ros_lib/ros/msg.h ****    *
  62:./ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  63:./ros_lib/ros/msg.h ****    *
  64:./ros_lib/ros/msg.h ****    */
  65:./ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
  66:./ros_lib/ros/msg.h ****   {
  67:./ros_lib/ros/msg.h ****     int32_t val;
  68:./ros_lib/ros/msg.h ****     memcpy(&val, &f, sizeof(val));
  69:./ros_lib/ros/msg.h **** 
  70:./ros_lib/ros/msg.h ****     int16_t exp = ((val >> 23) & 255);
  71:./ros_lib/ros/msg.h ****     uint32_t mantissa = val & 0x7FFFFF;
  72:./ros_lib/ros/msg.h **** 
  73:./ros_lib/ros/msg.h ****     if (exp == 255)
  74:./ros_lib/ros/msg.h ****     {
  75:./ros_lib/ros/msg.h ****       exp = 2047; // Special value for NaN, infinity etc.
  76:./ros_lib/ros/msg.h ****     }
  77:./ros_lib/ros/msg.h ****     else if (exp != 0)
  78:./ros_lib/ros/msg.h ****     {
  79:./ros_lib/ros/msg.h ****       exp += 1023 - 127; // Normal case
  80:./ros_lib/ros/msg.h ****     }
  81:./ros_lib/ros/msg.h ****     else if (!mantissa)
  82:./ros_lib/ros/msg.h ****     {
  83:./ros_lib/ros/msg.h ****       exp = 0; // Zero
  84:./ros_lib/ros/msg.h ****     }
  85:./ros_lib/ros/msg.h ****     else
  86:./ros_lib/ros/msg.h ****     {
  87:./ros_lib/ros/msg.h ****       // Denormalized value in float, will fit as normalized value in double
  88:./ros_lib/ros/msg.h ****       exp += 1023 - 127;
  89:./ros_lib/ros/msg.h ****       mantissa <<= 1;
  90:./ros_lib/ros/msg.h ****       while (!(mantissa & 0x800000))
  91:./ros_lib/ros/msg.h ****       {
  92:./ros_lib/ros/msg.h ****           mantissa <<= 1;
  93:./ros_lib/ros/msg.h ****           exp--;
  94:./ros_lib/ros/msg.h ****       }
  95:./ros_lib/ros/msg.h ****       mantissa &= 0x7FFFFF;
  96:./ros_lib/ros/msg.h ****     }
  97:./ros_lib/ros/msg.h **** 
  98:./ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
  99:./ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 100:./ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 101:./ros_lib/ros/msg.h ****     *(outbuffer++) = (mantissa << 5) & 0xff;
 102:./ros_lib/ros/msg.h ****     *(outbuffer++) = (mantissa >> 3) & 0xff;
 103:./ros_lib/ros/msg.h ****     *(outbuffer++) = (mantissa >> 11) & 0xff;
 104:./ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((mantissa >> 19) & 0x0F);
 105:./ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 106:./ros_lib/ros/msg.h **** 
 107:./ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
 108:./ros_lib/ros/msg.h ****     if (f < 0)
 109:./ros_lib/ros/msg.h ****     {
 110:./ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 111:./ros_lib/ros/msg.h ****     }
 112:./ros_lib/ros/msg.h **** 
 113:./ros_lib/ros/msg.h ****     return 8;
 114:./ros_lib/ros/msg.h ****   }
 115:./ros_lib/ros/msg.h **** 
 116:./ros_lib/ros/msg.h ****   /**
 117:./ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
 118:./ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
 119:./ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
 120:./ros_lib/ros/msg.h ****    *
 121:./ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
 122:./ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
 123:./ros_lib/ros/msg.h ****    *
 124:./ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
 125:./ros_lib/ros/msg.h ****    */
 126:./ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 127:./ros_lib/ros/msg.h ****   {
 128:./ros_lib/ros/msg.h ****     int16_t exp;
 129:./ros_lib/ros/msg.h ****     uint32_t mantissa;
 130:./ros_lib/ros/msg.h **** 
 131:./ros_lib/ros/msg.h ****     // Skip lowest 24 bits
 132:./ros_lib/ros/msg.h ****     inbuffer += 3;
 133:./ros_lib/ros/msg.h **** 
 134:./ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 135:./ros_lib/ros/msg.h ****     mantissa = ((uint32_t)(*(inbuffer++)) >> 4 & 0x0F);
 136:./ros_lib/ros/msg.h ****     mantissa |= ((uint32_t)(*(inbuffer++)) & 0xff) << 4;
 137:./ros_lib/ros/msg.h ****     mantissa |= ((uint32_t)(*(inbuffer++)) & 0xff) << 12;
 138:./ros_lib/ros/msg.h ****     mantissa |= ((uint32_t)(*inbuffer) & 0x0f) << 20;
 139:./ros_lib/ros/msg.h **** 
 140:./ros_lib/ros/msg.h ****     // Copy exponent.
 141:./ros_lib/ros/msg.h ****     exp = ((uint32_t)(*(inbuffer++)) & 0xf0) >> 4;
 142:./ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 143:./ros_lib/ros/msg.h **** 
 144:./ros_lib/ros/msg.h ****     if (exp == 2047)
 145:./ros_lib/ros/msg.h ****     {
 146:./ros_lib/ros/msg.h ****       exp = 255; // NaN, infinity etc.
 147:./ros_lib/ros/msg.h ****     }
 148:./ros_lib/ros/msg.h ****     else if (exp - 1023 > 127)
 149:./ros_lib/ros/msg.h ****     {
 150:./ros_lib/ros/msg.h ****       exp = 255;
 151:./ros_lib/ros/msg.h ****       mantissa = 0; // Too large for float, convert to infinity
 152:./ros_lib/ros/msg.h ****     }
 153:./ros_lib/ros/msg.h ****     else if (exp - 1023 >= -126)
 154:./ros_lib/ros/msg.h ****     {
 155:./ros_lib/ros/msg.h ****       exp -= 1023 - 127; // Normal case
 156:./ros_lib/ros/msg.h ****     }
 157:./ros_lib/ros/msg.h ****     else if (exp - 1023 < -150)
 158:./ros_lib/ros/msg.h ****     {
 159:./ros_lib/ros/msg.h ****       exp = 0; // Too small or zero
 160:./ros_lib/ros/msg.h ****     }
 161:./ros_lib/ros/msg.h ****     else
 162:./ros_lib/ros/msg.h ****     {
 163:./ros_lib/ros/msg.h ****       // Have to convert to denormalized representation for float
 164:./ros_lib/ros/msg.h ****       mantissa |= 0x1000000;
 165:./ros_lib/ros/msg.h ****       mantissa >>= ((-126 + 1023) - exp);
 166:./ros_lib/ros/msg.h ****       exp = 0;
 167:./ros_lib/ros/msg.h ****     }
 168:./ros_lib/ros/msg.h **** 
 169:./ros_lib/ros/msg.h ****     // Round off mantissa
 170:./ros_lib/ros/msg.h ****     if (mantissa != 0xFFFFFF)
 171:./ros_lib/ros/msg.h ****       mantissa += 1;
 172:./ros_lib/ros/msg.h **** 
 173:./ros_lib/ros/msg.h ****     mantissa >>= 1;
 174:./ros_lib/ros/msg.h **** 
 175:./ros_lib/ros/msg.h ****     // Put mantissa and exponent into place
 176:./ros_lib/ros/msg.h ****     uint32_t val = mantissa;
 177:./ros_lib/ros/msg.h ****     val |= static_cast<uint32_t>(exp) << 23;
 178:./ros_lib/ros/msg.h **** 
 179:./ros_lib/ros/msg.h ****     // Copy negative sign.
 180:./ros_lib/ros/msg.h ****     val |= (static_cast<uint32_t>(*(inbuffer++)) & 0x80) << 24;
 181:./ros_lib/ros/msg.h **** 
 182:./ros_lib/ros/msg.h ****     memcpy(f, &val, sizeof(val));
 183:./ros_lib/ros/msg.h ****     return 8;
 184:./ros_lib/ros/msg.h ****   }
 185:./ros_lib/ros/msg.h **** 
 186:./ros_lib/ros/msg.h ****   // Copy data from variable into a byte array
 187:./ros_lib/ros/msg.h ****   template<typename A, typename V>
 188:./ros_lib/ros/msg.h ****   static void varToArr(A arr, const V var)
 1173               		.loc 11 188 0
 1174               		.cfi_startproc
 1175               	.LVL94:
 1176 0000 CF92      		push r12
 1177               	.LCFI16:
 1178               		.cfi_def_cfa_offset 4
 1179               		.cfi_offset 12, -3
 1180 0002 DF92      		push r13
 1181               	.LCFI17:
 1182               		.cfi_def_cfa_offset 5
 1183               		.cfi_offset 13, -4
 1184 0004 EF92      		push r14
 1185               	.LCFI18:
 1186               		.cfi_def_cfa_offset 6
 1187               		.cfi_offset 14, -5
 1188 0006 FF92      		push r15
 1189               	.LCFI19:
 1190               		.cfi_def_cfa_offset 7
 1191               		.cfi_offset 15, -6
 1192               	/* prologue: function */
 1193               	/* frame size = 0 */
 1194               	/* stack size = 4 */
 1195               	.L__stack_usage = 4
 1196               	.LVL95:
 1197               		.loc 11 188 0
 1198 0008 20E0      		ldi r18,0
 1199 000a 30E0      		ldi r19,0
 1200               	.LVL96:
 1201               	.L34:
 1202               	.LBB109:
 189:./ros_lib/ros/msg.h ****   {
 190:./ros_lib/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 191:./ros_lib/ros/msg.h ****       arr[i] = (var >> (8 * i));
 1203               		.loc 11 191 0 discriminator 2
 1204 000c 6A01      		movw r12,r20
 1205 000e 7B01      		movw r14,r22
 1206 0010 022E      		mov r0,r18
 1207 0012 00C0      		rjmp 2f
 1208               		1:
 1209 0014 F694      		lsr r15
 1210 0016 E794      		ror r14
 1211 0018 D794      		ror r13
 1212 001a C794      		ror r12
 1213               		2:
 1214 001c 0A94      		dec r0
 1215 001e 02F4      		brpl 1b
 1216 0020 FC01      		movw r30,r24
 1217 0022 C192      		st Z+,r12
 1218 0024 CF01      		movw r24,r30
 1219               	.LVL97:
 1220 0026 285F      		subi r18,-8
 1221 0028 3F4F      		sbci r19,-1
 190:./ros_lib/ros/msg.h ****       arr[i] = (var >> (8 * i));
 1222               		.loc 11 190 0 discriminator 2
 1223 002a 2032      		cpi r18,32
 1224 002c 3105      		cpc r19,__zero_reg__
 1225 002e 01F4      		brne .L34
 1226               	/* epilogue start */
 1227               	.LBE109:
 192:./ros_lib/ros/msg.h ****   }
 1228               		.loc 11 192 0
 1229 0030 FF90      		pop r15
 1230 0032 EF90      		pop r14
 1231 0034 DF90      		pop r13
 1232 0036 CF90      		pop r12
 1233 0038 0895      		ret
 1234               		.cfi_endproc
 1235               	.LFE153:
 1237               		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",@progbits,_ZNK14rosse
 1238               		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1240               	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1241               	.LFB61:
  78:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 1242               		.loc 4 78 0
 1243               		.cfi_startproc
 1244               	.LVL98:
 1245 0000 4F92      		push r4
 1246               	.LCFI20:
 1247               		.cfi_def_cfa_offset 4
 1248               		.cfi_offset 4, -3
 1249 0002 5F92      		push r5
 1250               	.LCFI21:
 1251               		.cfi_def_cfa_offset 5
 1252               		.cfi_offset 5, -4
 1253 0004 6F92      		push r6
 1254               	.LCFI22:
 1255               		.cfi_def_cfa_offset 6
 1256               		.cfi_offset 6, -5
 1257 0006 7F92      		push r7
 1258               	.LCFI23:
 1259               		.cfi_def_cfa_offset 7
 1260               		.cfi_offset 7, -6
 1261 0008 AF92      		push r10
 1262               	.LCFI24:
 1263               		.cfi_def_cfa_offset 8
 1264               		.cfi_offset 10, -7
 1265 000a BF92      		push r11
 1266               	.LCFI25:
 1267               		.cfi_def_cfa_offset 9
 1268               		.cfi_offset 11, -8
 1269 000c CF92      		push r12
 1270               	.LCFI26:
 1271               		.cfi_def_cfa_offset 10
 1272               		.cfi_offset 12, -9
 1273 000e DF92      		push r13
 1274               	.LCFI27:
 1275               		.cfi_def_cfa_offset 11
 1276               		.cfi_offset 13, -10
 1277 0010 EF92      		push r14
 1278               	.LCFI28:
 1279               		.cfi_def_cfa_offset 12
 1280               		.cfi_offset 14, -11
 1281 0012 FF92      		push r15
 1282               	.LCFI29:
 1283               		.cfi_def_cfa_offset 13
 1284               		.cfi_offset 15, -12
 1285 0014 0F93      		push r16
 1286               	.LCFI30:
 1287               		.cfi_def_cfa_offset 14
 1288               		.cfi_offset 16, -13
 1289 0016 1F93      		push r17
 1290               	.LCFI31:
 1291               		.cfi_def_cfa_offset 15
 1292               		.cfi_offset 17, -14
 1293 0018 CF93      		push r28
 1294               	.LCFI32:
 1295               		.cfi_def_cfa_offset 16
 1296               		.cfi_offset 28, -15
 1297 001a DF93      		push r29
 1298               	.LCFI33:
 1299               		.cfi_def_cfa_offset 17
 1300               		.cfi_offset 29, -16
 1301               	/* prologue: function */
 1302               	/* frame size = 0 */
 1303               	/* stack size = 14 */
 1304               	.L__stack_usage = 14
 1305 001c EC01      		movw r28,r24
 1306 001e 8B01      		movw r16,r22
 1307               	.LVL99:
  81:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->ints_length >> (8 * 1)) & 0xFF;
 1308               		.loc 4 81 0
 1309 0020 8A81      		ldd r24,Y+2
 1310               	.LVL100:
 1311 0022 FB01      		movw r30,r22
 1312 0024 8083      		st Z,r24
  82:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->ints_length >> (8 * 2)) & 0xFF;
 1313               		.loc 4 82 0
 1314 0026 8B81      		ldd r24,Y+3
 1315 0028 8183      		std Z+1,r24
  83:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->ints_length >> (8 * 3)) & 0xFF;
 1316               		.loc 4 83 0
 1317 002a 8C81      		ldd r24,Y+4
 1318 002c 8283      		std Z+2,r24
  84:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
 1319               		.loc 4 84 0
 1320 002e 8D81      		ldd r24,Y+5
 1321 0030 8383      		std Z+3,r24
 1322               	.LVL101:
 1323 0032 DB01      		movw r26,r22
 1324               	.LBB110:
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1325               		.loc 4 86 0
 1326 0034 40E0      		ldi r20,0
 1327 0036 50E0      		ldi r21,0
 1328 0038 BA01      		movw r22,r20
 1329               	.LBE110:
  85:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
 1330               		.loc 4 85 0
 1331 003a E4E0      		ldi r30,lo8(4)
 1332 003c F0E0      		ldi r31,0
 1333               	.LVL102:
 1334               	.L38:
 1335 003e 1496      		adiw r26,4
 1336               	.LBB112:
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1337               		.loc 4 86 0 discriminator 3
 1338 0040 CA80      		ldd r12,Y+2
 1339 0042 DB80      		ldd r13,Y+3
 1340 0044 EC80      		ldd r14,Y+4
 1341 0046 FD80      		ldd r15,Y+5
 1342 0048 CF01      		movw r24,r30
 1343 004a 0496      		adiw r24,4
 1344 004c 4C15      		cp r20,r12
 1345 004e 5D05      		cpc r21,r13
 1346 0050 6E05      		cpc r22,r14
 1347 0052 7F05      		cpc r23,r15
 1348 0054 00F4      		brsh .L37
 1349               	.LBB111:
  91:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1350               		.loc 4 91 0 discriminator 2
 1351 0056 2A85      		ldd r18,Y+10
 1352 0058 3B85      		ldd r19,Y+11
 1353 005a E20F      		add r30,r18
 1354 005c F31F      		adc r31,r19
 1355 005e 3497      		sbiw r30,4
 1356 0060 D080      		ld r13,Z
 1357               	.LVL103:
  92:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1358               		.loc 4 92 0 discriminator 2
 1359 0062 F180      		ldd r15,Z+1
 1360 0064 3281      		ldd r19,Z+2
 1361 0066 2381      		ldd r18,Z+3
 1362 0068 DC92      		st X,r13
 1363               	.LVL104:
  93:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1364               		.loc 4 93 0 discriminator 2
 1365 006a 1196      		adiw r26,1
 1366 006c FC92      		st X,r15
 1367 006e 1197      		sbiw r26,1
  94:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1368               		.loc 4 94 0 discriminator 2
 1369 0070 1296      		adiw r26,2
 1370 0072 3C93      		st X,r19
 1371 0074 1297      		sbiw r26,2
  95:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1372               		.loc 4 95 0 discriminator 2
 1373 0076 1396      		adiw r26,3
 1374 0078 2C93      		st X,r18
 1375 007a 1397      		sbiw r26,3
 1376               	.LVL105:
 1377 007c FC01      		movw r30,r24
 1378               	.LVL106:
 1379               	.LBE111:
  86:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1380               		.loc 4 86 0 discriminator 2
 1381 007e 4F5F      		subi r20,-1
 1382 0080 5F4F      		sbci r21,-1
 1383 0082 6F4F      		sbci r22,-1
 1384 0084 7F4F      		sbci r23,-1
 1385               	.LVL107:
 1386 0086 00C0      		rjmp .L38
 1387               	.LVL108:
 1388               	.L37:
 1389               	.LBE112:
  98:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->floats_length >> (8 * 1)) & 0xFF;
 1390               		.loc 4 98 0
 1391 0088 5F01      		movw r10,r30
 1392 008a A00E      		add r10,r16
 1393 008c B11E      		adc r11,r17
 1394 008e 2C85      		ldd r18,Y+12
 1395 0090 F501      		movw r30,r10
 1396 0092 2083      		st Z,r18
  99:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->floats_length >> (8 * 2)) & 0xFF;
 1397               		.loc 4 99 0
 1398 0094 2D85      		ldd r18,Y+13
 1399 0096 2183      		std Z+1,r18
 100:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->floats_length >> (8 * 3)) & 0xFF;
 1400               		.loc 4 100 0
 1401 0098 2E85      		ldd r18,Y+14
 1402 009a 2283      		std Z+2,r18
 101:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 1403               		.loc 4 101 0
 1404 009c 2F85      		ldd r18,Y+15
 1405 009e 2383      		std Z+3,r18
 1406               	.LVL109:
 1407 00a0 D501      		movw r26,r10
 1408               	.LBB113:
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1409               		.loc 4 103 0
 1410 00a2 40E0      		ldi r20,0
 1411 00a4 50E0      		ldi r21,0
 1412 00a6 BA01      		movw r22,r20
 1413               	.LVL110:
 1414               	.L40:
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1415               		.loc 4 103 0 is_stmt 0 discriminator 3
 1416 00a8 CC84      		ldd r12,Y+12
 1417 00aa DD84      		ldd r13,Y+13
 1418 00ac EE84      		ldd r14,Y+14
 1419 00ae FF84      		ldd r15,Y+15
 1420 00b0 9C01      		movw r18,r24
 1421 00b2 2C5F      		subi r18,-4
 1422 00b4 3F4F      		sbci r19,-1
 1423 00b6 4C15      		cp r20,r12
 1424 00b8 5D05      		cpc r21,r13
 1425 00ba 6E05      		cpc r22,r14
 1426 00bc 7F05      		cpc r23,r15
 1427 00be 00F4      		brsh .L39
 1428               	.LVL111:
 1429               	.LBB114:
 108:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1430               		.loc 4 108 0 is_stmt 1 discriminator 2
 1431 00c0 CD01      		movw r24,r26
 1432               	.LVL112:
 1433 00c2 8A19      		sub r24,r10
 1434 00c4 9B09      		sbc r25,r11
 1435 00c6 EC88      		ldd r14,Y+20
 1436 00c8 FD88      		ldd r15,Y+21
 1437 00ca 8E0D      		add r24,r14
 1438 00cc 9F1D      		adc r25,r15
 109:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1439               		.loc 4 109 0 discriminator 2
 1440 00ce FC01      		movw r30,r24
 1441 00d0 D080      		ld r13,Z
 1442 00d2 E180      		ldd r14,Z+1
 1443 00d4 F280      		ldd r15,Z+2
 1444 00d6 8381      		ldd r24,Z+3
 1445 00d8 1496      		adiw r26,4
 1446 00da DC92      		st X,r13
 1447 00dc 1497      		sbiw r26,4
 110:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1448               		.loc 4 110 0 discriminator 2
 1449 00de 1596      		adiw r26,5
 1450 00e0 EC92      		st X,r14
 1451 00e2 1597      		sbiw r26,5
 111:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1452               		.loc 4 111 0 discriminator 2
 1453 00e4 1696      		adiw r26,6
 1454 00e6 FC92      		st X,r15
 1455 00e8 1697      		sbiw r26,6
 112:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1456               		.loc 4 112 0 discriminator 2
 1457 00ea 1796      		adiw r26,7
 1458 00ec 8C93      		st X,r24
 1459 00ee 1797      		sbiw r26,7
 1460 00f0 C901      		movw r24,r18
 1461               	.LVL113:
 1462               	.LBE114:
 103:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1463               		.loc 4 103 0 discriminator 2
 1464 00f2 4F5F      		subi r20,-1
 1465 00f4 5F4F      		sbci r21,-1
 1466 00f6 6F4F      		sbci r22,-1
 1467 00f8 7F4F      		sbci r23,-1
 1468               	.LVL114:
 1469 00fa 1496      		adiw r26,4
 1470 00fc 00C0      		rjmp .L40
 1471               	.LVL115:
 1472               	.L39:
 1473               	.LBE113:
 115:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (this->strings_length >> (8 * 1)) & 0xFF;
 1474               		.loc 4 115 0
 1475 00fe F801      		movw r30,r16
 1476 0100 E80F      		add r30,r24
 1477 0102 F91F      		adc r31,r25
 1478 0104 8E89      		ldd r24,Y+22
 1479               	.LVL116:
 1480 0106 8083      		st Z,r24
 116:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (this->strings_length >> (8 * 2)) & 0xFF;
 1481               		.loc 4 116 0
 1482 0108 8F89      		ldd r24,Y+23
 1483 010a 8183      		std Z+1,r24
 117:./ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (this->strings_length >> (8 * 3)) & 0xFF;
 1484               		.loc 4 117 0
 1485 010c 888D      		ldd r24,Y+24
 1486 010e 8283      		std Z+2,r24
 118:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 1487               		.loc 4 118 0
 1488 0110 898D      		ldd r24,Y+25
 1489 0112 8383      		std Z+3,r24
 119:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 1490               		.loc 4 119 0
 1491 0114 7901      		movw r14,r18
 1492               	.LVL117:
 1493 0116 A12C      		mov r10,__zero_reg__
 1494 0118 B12C      		mov r11,__zero_reg__
 1495               	.LBB115:
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1496               		.loc 4 120 0
 1497 011a 412C      		mov r4,__zero_reg__
 1498 011c 512C      		mov r5,__zero_reg__
 1499 011e 3201      		movw r6,r4
 1500               	.LVL118:
 1501               	.L42:
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1502               		.loc 4 120 0 is_stmt 0 discriminator 3
 1503 0120 8E89      		ldd r24,Y+22
 1504 0122 9F89      		ldd r25,Y+23
 1505 0124 A88D      		ldd r26,Y+24
 1506 0126 B98D      		ldd r27,Y+25
 1507 0128 4816      		cp r4,r24
 1508 012a 5906      		cpc r5,r25
 1509 012c 6A06      		cpc r6,r26
 1510 012e 7B06      		cpc r7,r27
 1511 0130 00F4      		brsh .L41
 1512               	.LBB116:
 121:./ros_lib/rosserial_msgs/RequestParam.h ****       varToArr(outbuffer + offset, length_stringsi);
 1513               		.loc 4 121 0 is_stmt 1 discriminator 2
 1514 0132 EC8D      		ldd r30,Y+28
 1515 0134 FD8D      		ldd r31,Y+29
 1516 0136 EA0D      		add r30,r10
 1517 0138 FB1D      		adc r31,r11
 1518 013a A081      		ld r26,Z
 1519 013c B181      		ldd r27,Z+1
 1520 013e FD01      		movw r30,r26
 1521               		0:
 1522 0140 0190      		ld __tmp_reg__,Z+
 1523 0142 0020      		tst __tmp_reg__
 1524 0144 01F4      		brne 0b
 1525 0146 3197      		sbiw r30,1
 1526 0148 6F01      		movw r12,r30
 1527 014a CA1A      		sub r12,r26
 1528 014c DB0A      		sbc r13,r27
 1529               	.LVL119:
 122:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1530               		.loc 4 122 0 discriminator 2
 1531 014e A601      		movw r20,r12
 1532 0150 60E0      		ldi r22,0
 1533 0152 70E0      		ldi r23,0
 1534 0154 C801      		movw r24,r16
 1535 0156 8E0D      		add r24,r14
 1536 0158 9F1D      		adc r25,r15
 1537 015a 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1538               	.LVL120:
 124:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1539               		.loc 4 124 0 discriminator 2
 1540 015e F4E0      		ldi r31,4
 1541 0160 EF0E      		add r14,r31
 1542 0162 F11C      		adc r15,__zero_reg__
 1543               	.LVL121:
 1544 0164 EC8D      		ldd r30,Y+28
 1545 0166 FD8D      		ldd r31,Y+29
 1546 0168 EA0D      		add r30,r10
 1547 016a FB1D      		adc r31,r11
 1548 016c 6081      		ld r22,Z
 1549 016e 7181      		ldd r23,Z+1
 1550 0170 A601      		movw r20,r12
 1551 0172 C801      		movw r24,r16
 1552 0174 8E0D      		add r24,r14
 1553 0176 9F1D      		adc r25,r15
 1554 0178 0E94 0000 		call memcpy
 1555               	.LVL122:
 125:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 1556               		.loc 4 125 0 discriminator 2
 1557 017c EC0C      		add r14,r12
 1558 017e FD1C      		adc r15,r13
 1559               	.LVL123:
 1560               	.LBE116:
 120:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1561               		.loc 4 120 0 discriminator 2
 1562 0180 8FEF      		ldi r24,-1
 1563 0182 481A      		sub r4,r24
 1564 0184 580A      		sbc r5,r24
 1565 0186 680A      		sbc r6,r24
 1566 0188 780A      		sbc r7,r24
 1567               	.LVL124:
 1568 018a E2E0      		ldi r30,2
 1569 018c AE0E      		add r10,r30
 1570 018e B11C      		adc r11,__zero_reg__
 1571 0190 00C0      		rjmp .L42
 1572               	.LVL125:
 1573               	.L41:
 1574               	.LBE115:
 128:./ros_lib/rosserial_msgs/RequestParam.h **** 
 1575               		.loc 4 128 0
 1576 0192 C701      		movw r24,r14
 1577               	/* epilogue start */
 1578 0194 DF91      		pop r29
 1579 0196 CF91      		pop r28
 1580               	.LVL126:
 1581 0198 1F91      		pop r17
 1582 019a 0F91      		pop r16
 1583               	.LVL127:
 1584 019c FF90      		pop r15
 1585 019e EF90      		pop r14
 1586               	.LVL128:
 1587 01a0 DF90      		pop r13
 1588 01a2 CF90      		pop r12
 1589 01a4 BF90      		pop r11
 1590 01a6 AF90      		pop r10
 1591 01a8 7F90      		pop r7
 1592 01aa 6F90      		pop r6
 1593 01ac 5F90      		pop r5
 1594 01ae 4F90      		pop r4
 1595               	.LVL129:
 1596 01b0 0895      		ret
 1597               		.cfi_endproc
 1598               	.LFE61:
 1600               		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",@progbits,_ZNK14rosserial_msgs3Log9seri
 1601               		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1603               	_ZNK14rosserial_msgs3Log9serializeEPh:
 1604               	.LFB47:
  31:./ros_lib/rosserial_msgs/Log.h ****     {
 1605               		.loc 3 31 0
 1606               		.cfi_startproc
 1607               	.LVL130:
 1608 0000 EF92      		push r14
 1609               	.LCFI34:
 1610               		.cfi_def_cfa_offset 4
 1611               		.cfi_offset 14, -3
 1612 0002 FF92      		push r15
 1613               	.LCFI35:
 1614               		.cfi_def_cfa_offset 5
 1615               		.cfi_offset 15, -4
 1616 0004 0F93      		push r16
 1617               	.LCFI36:
 1618               		.cfi_def_cfa_offset 6
 1619               		.cfi_offset 16, -5
 1620 0006 1F93      		push r17
 1621               	.LCFI37:
 1622               		.cfi_def_cfa_offset 7
 1623               		.cfi_offset 17, -6
 1624 0008 CF93      		push r28
 1625               	.LCFI38:
 1626               		.cfi_def_cfa_offset 8
 1627               		.cfi_offset 28, -7
 1628 000a DF93      		push r29
 1629               	.LCFI39:
 1630               		.cfi_def_cfa_offset 9
 1631               		.cfi_offset 29, -8
 1632               	/* prologue: function */
 1633               	/* frame size = 0 */
 1634               	/* stack size = 6 */
 1635               	.L__stack_usage = 6
 1636 000c 8C01      		movw r16,r24
 1637 000e 7B01      		movw r14,r22
 1638               	.LVL131:
  34:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1639               		.loc 3 34 0
 1640 0010 DC01      		movw r26,r24
 1641 0012 1296      		adiw r26,2
 1642 0014 2C91      		ld r18,X
 1643 0016 1297      		sbiw r26,2
 1644 0018 FB01      		movw r30,r22
 1645 001a 2193      		st Z+,r18
 1646 001c CF01      		movw r24,r30
 1647               	.LVL132:
  36:./ros_lib/rosserial_msgs/Log.h ****       varToArr(outbuffer + offset, length_msg);
 1648               		.loc 3 36 0
 1649 001e 1396      		adiw r26,3
 1650 0020 ED91      		ld r30,X+
 1651 0022 FC91      		ld r31,X
 1652 0024 1497      		sbiw r26,3+1
 1653 0026 EF01      		movw r28,r30
 1654               		0:
 1655 0028 0990      		ld __tmp_reg__,Y+
 1656 002a 0020      		tst __tmp_reg__
 1657 002c 01F4      		brne 0b
 1658 002e 2197      		sbiw r28,1
 1659 0030 CE1B      		sub r28,r30
 1660 0032 DF0B      		sbc r29,r31
 1661               	.LVL133:
  37:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1662               		.loc 3 37 0
 1663 0034 AE01      		movw r20,r28
 1664 0036 60E0      		ldi r22,0
 1665 0038 70E0      		ldi r23,0
 1666               	.LVL134:
 1667 003a 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1668               	.LVL135:
  39:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1669               		.loc 3 39 0
 1670 003e D801      		movw r26,r16
 1671 0040 1396      		adiw r26,3
 1672 0042 6D91      		ld r22,X+
 1673 0044 7C91      		ld r23,X
 1674 0046 1497      		sbiw r26,3+1
 1675 0048 AE01      		movw r20,r28
 1676 004a C701      		movw r24,r14
 1677 004c 0596      		adiw r24,5
 1678 004e 0E94 0000 		call memcpy
 1679               	.LVL136:
  42:./ros_lib/rosserial_msgs/Log.h **** 
 1680               		.loc 3 42 0
 1681 0052 CE01      		movw r24,r28
 1682 0054 0596      		adiw r24,5
 1683               	.LVL137:
 1684               	/* epilogue start */
 1685 0056 DF91      		pop r29
 1686 0058 CF91      		pop r28
 1687               	.LVL138:
 1688 005a 1F91      		pop r17
 1689 005c 0F91      		pop r16
 1690               	.LVL139:
 1691 005e FF90      		pop r15
 1692 0060 EF90      		pop r14
 1693               	.LVL140:
 1694 0062 0895      		ret
 1695               		.cfi_endproc
 1696               	.LFE47:
 1698               		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",@progbits,_ZNK14rosserial_msgs9To
 1699               		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1701               	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1702               	.LFB40:
  43:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1703               		.loc 2 43 0
 1704               		.cfi_startproc
 1705               	.LVL141:
 1706 0000 CF92      		push r12
 1707               	.LCFI40:
 1708               		.cfi_def_cfa_offset 4
 1709               		.cfi_offset 12, -3
 1710 0002 DF92      		push r13
 1711               	.LCFI41:
 1712               		.cfi_def_cfa_offset 5
 1713               		.cfi_offset 13, -4
 1714 0004 EF92      		push r14
 1715               	.LCFI42:
 1716               		.cfi_def_cfa_offset 6
 1717               		.cfi_offset 14, -5
 1718 0006 FF92      		push r15
 1719               	.LCFI43:
 1720               		.cfi_def_cfa_offset 7
 1721               		.cfi_offset 15, -6
 1722 0008 0F93      		push r16
 1723               	.LCFI44:
 1724               		.cfi_def_cfa_offset 8
 1725               		.cfi_offset 16, -7
 1726 000a 1F93      		push r17
 1727               	.LCFI45:
 1728               		.cfi_def_cfa_offset 9
 1729               		.cfi_offset 17, -8
 1730 000c CF93      		push r28
 1731               	.LCFI46:
 1732               		.cfi_def_cfa_offset 10
 1733               		.cfi_offset 28, -9
 1734 000e DF93      		push r29
 1735               	.LCFI47:
 1736               		.cfi_def_cfa_offset 11
 1737               		.cfi_offset 29, -10
 1738               	/* prologue: function */
 1739               	/* frame size = 0 */
 1740               	/* stack size = 8 */
 1741               	.L__stack_usage = 8
 1742 0010 7C01      		movw r14,r24
 1743 0012 8B01      		movw r16,r22
 1744               	.LVL142:
  46:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1745               		.loc 2 46 0
 1746 0014 DC01      		movw r26,r24
 1747 0016 1296      		adiw r26,2
 1748 0018 8C91      		ld r24,X
 1749 001a 1297      		sbiw r26,2
 1750               	.LVL143:
 1751 001c FB01      		movw r30,r22
 1752 001e 8083      		st Z,r24
  47:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1753               		.loc 2 47 0
 1754 0020 1396      		adiw r26,3
 1755 0022 8C91      		ld r24,X
 1756 0024 1397      		sbiw r26,3
 1757 0026 8183      		std Z+1,r24
 1758               	.LVL144:
  49:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_topic_name);
 1759               		.loc 2 49 0
 1760 0028 1496      		adiw r26,4
 1761 002a ED91      		ld r30,X+
 1762 002c FC91      		ld r31,X
 1763 002e 1597      		sbiw r26,4+1
 1764 0030 EF01      		movw r28,r30
 1765               		0:
 1766 0032 0990      		ld __tmp_reg__,Y+
 1767 0034 0020      		tst __tmp_reg__
 1768 0036 01F4      		brne 0b
 1769 0038 2197      		sbiw r28,1
 1770 003a CE1B      		sub r28,r30
 1771 003c DF0B      		sbc r29,r31
 1772               	.LVL145:
  50:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1773               		.loc 2 50 0
 1774 003e AE01      		movw r20,r28
 1775 0040 60E0      		ldi r22,0
 1776 0042 70E0      		ldi r23,0
 1777               	.LVL146:
 1778 0044 C801      		movw r24,r16
 1779 0046 0296      		adiw r24,2
 1780 0048 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1781               	.LVL147:
  52:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1782               		.loc 2 52 0
 1783 004c D701      		movw r26,r14
 1784 004e 1496      		adiw r26,4
 1785 0050 6D91      		ld r22,X+
 1786 0052 7C91      		ld r23,X
 1787 0054 1597      		sbiw r26,4+1
 1788 0056 AE01      		movw r20,r28
 1789 0058 C801      		movw r24,r16
 1790 005a 0696      		adiw r24,6
 1791 005c 0E94 0000 		call memcpy
 1792               	.LVL148:
  53:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1793               		.loc 2 53 0
 1794 0060 CE01      		movw r24,r28
 1795 0062 0696      		adiw r24,6
 1796               	.LVL149:
  54:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_message_type);
 1797               		.loc 2 54 0
 1798 0064 F701      		movw r30,r14
 1799 0066 A681      		ldd r26,Z+6
 1800 0068 B781      		ldd r27,Z+7
 1801 006a FD01      		movw r30,r26
 1802               		0:
 1803 006c 0190      		ld __tmp_reg__,Z+
 1804 006e 0020      		tst __tmp_reg__
 1805 0070 01F4      		brne 0b
 1806 0072 3197      		sbiw r30,1
 1807 0074 6F01      		movw r12,r30
 1808 0076 CA1A      		sub r12,r26
 1809 0078 DB0A      		sbc r13,r27
 1810               	.LVL150:
  55:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1811               		.loc 2 55 0
 1812 007a A601      		movw r20,r12
 1813 007c 60E0      		ldi r22,0
 1814 007e 70E0      		ldi r23,0
 1815 0080 800F      		add r24,r16
 1816 0082 911F      		adc r25,r17
 1817               	.LVL151:
 1818 0084 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1819               	.LVL152:
  57:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1820               		.loc 2 57 0
 1821 0088 2A96      		adiw r28,10
 1822               	.LVL153:
 1823 008a D701      		movw r26,r14
 1824 008c 1696      		adiw r26,6
 1825 008e 6D91      		ld r22,X+
 1826 0090 7C91      		ld r23,X
 1827 0092 1797      		sbiw r26,6+1
 1828 0094 A601      		movw r20,r12
 1829 0096 C801      		movw r24,r16
 1830 0098 8C0F      		add r24,r28
 1831 009a 9D1F      		adc r25,r29
 1832 009c 0E94 0000 		call memcpy
 1833               	.LVL154:
  58:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1834               		.loc 2 58 0
 1835 00a0 CC0D      		add r28,r12
 1836 00a2 DD1D      		adc r29,r13
 1837               	.LVL155:
  59:./ros_lib/rosserial_msgs/TopicInfo.h ****       varToArr(outbuffer + offset, length_md5sum);
 1838               		.loc 2 59 0
 1839 00a4 D701      		movw r26,r14
 1840 00a6 1896      		adiw r26,8
 1841 00a8 ED91      		ld r30,X+
 1842 00aa FC91      		ld r31,X
 1843 00ac 1997      		sbiw r26,8+1
 1844 00ae DF01      		movw r26,r30
 1845               		0:
 1846 00b0 0D90      		ld __tmp_reg__,X+
 1847 00b2 0020      		tst __tmp_reg__
 1848 00b4 01F4      		brne 0b
 1849 00b6 1197      		sbiw r26,1
 1850 00b8 6D01      		movw r12,r26
 1851               	.LVL156:
 1852 00ba CE1A      		sub r12,r30
 1853 00bc DF0A      		sbc r13,r31
 1854               	.LVL157:
  60:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1855               		.loc 2 60 0
 1856 00be A601      		movw r20,r12
 1857 00c0 60E0      		ldi r22,0
 1858 00c2 70E0      		ldi r23,0
 1859 00c4 C801      		movw r24,r16
 1860 00c6 8C0F      		add r24,r28
 1861 00c8 9D1F      		adc r25,r29
 1862 00ca 0E94 0000 		call _ZN3ros3Msg8varToArrIPhmEEvT_T0_
 1863               	.LVL158:
  62:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1864               		.loc 2 62 0
 1865 00ce 2496      		adiw r28,4
 1866               	.LVL159:
 1867 00d0 F701      		movw r30,r14
 1868 00d2 6085      		ldd r22,Z+8
 1869 00d4 7185      		ldd r23,Z+9
 1870 00d6 A601      		movw r20,r12
 1871 00d8 C801      		movw r24,r16
 1872 00da 8C0F      		add r24,r28
 1873 00dc 9D1F      		adc r25,r29
 1874 00de 0E94 0000 		call memcpy
 1875               	.LVL160:
  63:./ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1876               		.loc 2 63 0
 1877 00e2 C601      		movw r24,r12
 1878 00e4 8C0F      		add r24,r28
 1879 00e6 9D1F      		adc r25,r29
 1880               	.LVL161:
  68:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1881               		.loc 2 68 0
 1882 00e8 D701      		movw r26,r14
 1883 00ea 1A96      		adiw r26,10
 1884 00ec 6C91      		ld r22,X
 1885 00ee 1A97      		sbiw r26,10
  69:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1886               		.loc 2 69 0
 1887 00f0 1B96      		adiw r26,11
 1888 00f2 4C91      		ld r20,X
 1889 00f4 1B97      		sbiw r26,11
 1890 00f6 1C96      		adiw r26,12
 1891 00f8 3C91      		ld r19,X
 1892 00fa 1C97      		sbiw r26,12
 1893 00fc 1D96      		adiw r26,13
 1894 00fe 2C91      		ld r18,X
 1895 0100 F801      		movw r30,r16
 1896 0102 E80F      		add r30,r24
 1897 0104 F91F      		adc r31,r25
 1898 0106 6083      		st Z,r22
  70:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1899               		.loc 2 70 0
 1900 0108 4183      		std Z+1,r20
  71:./ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1901               		.loc 2 71 0
 1902 010a 3283      		std Z+2,r19
  72:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1903               		.loc 2 72 0
 1904 010c 2383      		std Z+3,r18
 1905               	.LVL162:
  75:./ros_lib/rosserial_msgs/TopicInfo.h **** 
 1906               		.loc 2 75 0
 1907 010e 0496      		adiw r24,4
 1908               	.LVL163:
 1909               	/* epilogue start */
 1910 0110 DF91      		pop r29
 1911 0112 CF91      		pop r28
 1912 0114 1F91      		pop r17
 1913 0116 0F91      		pop r16
 1914               	.LVL164:
 1915 0118 FF90      		pop r15
 1916 011a EF90      		pop r14
 1917               	.LVL165:
 1918 011c DF90      		pop r13
 1919 011e CF90      		pop r12
 1920               	.LVL166:
 1921 0120 0895      		ret
 1922               		.cfi_endproc
 1923               	.LFE40:
 1925               		.section	.text._ZN3ros3Msg8arrToVarImPhEEvRT_T0_,"axG",@progbits,_ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 1926               		.weak	_ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 1928               	_ZN3ros3Msg8arrToVarImPhEEvRT_T0_:
 1929               	.LFB154:
 193:./ros_lib/ros/msg.h **** 
 194:./ros_lib/ros/msg.h ****   // Copy data from a byte array into variable
 195:./ros_lib/ros/msg.h ****   template<typename V, typename A>
 196:./ros_lib/ros/msg.h ****   static void arrToVar(V& var, const A arr)
 1930               		.loc 11 196 0
 1931               		.cfi_startproc
 1932               	.LVL167:
 1933 0000 CF92      		push r12
 1934               	.LCFI48:
 1935               		.cfi_def_cfa_offset 4
 1936               		.cfi_offset 12, -3
 1937 0002 DF92      		push r13
 1938               	.LCFI49:
 1939               		.cfi_def_cfa_offset 5
 1940               		.cfi_offset 13, -4
 1941 0004 EF92      		push r14
 1942               	.LCFI50:
 1943               		.cfi_def_cfa_offset 6
 1944               		.cfi_offset 14, -5
 1945 0006 FF92      		push r15
 1946               	.LCFI51:
 1947               		.cfi_def_cfa_offset 7
 1948               		.cfi_offset 15, -6
 1949               	/* prologue: function */
 1950               	/* frame size = 0 */
 1951               	/* stack size = 4 */
 1952               	.L__stack_usage = 4
 1953 0008 FC01      		movw r30,r24
 197:./ros_lib/ros/msg.h ****   {
 198:./ros_lib/ros/msg.h ****     var = 0;
 1954               		.loc 11 198 0
 1955 000a 1082      		st Z,__zero_reg__
 1956 000c 1182      		std Z+1,__zero_reg__
 1957 000e 1282      		std Z+2,__zero_reg__
 1958 0010 1382      		std Z+3,__zero_reg__
 1959               	.LVL168:
 1960 0012 DB01      		movw r26,r22
 1961 0014 20E0      		ldi r18,0
 1962 0016 30E0      		ldi r19,0
 1963               	.LVL169:
 1964               	.L46:
 1965               	.LBB117:
 199:./ros_lib/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 200:./ros_lib/ros/msg.h ****       var |= (arr[i] << (8 * i));
 1966               		.loc 11 200 0 discriminator 2
 1967 0018 4D91      		ld r20,X+
 1968               	.LVL170:
 1969 001a 50E0      		ldi r21,0
 1970 001c 022E      		mov r0,r18
 1971 001e 00C0      		rjmp 2f
 1972               		1:
 1973 0020 440F      		lsl r20
 1974 0022 551F      		rol r21
 1975               		2:
 1976 0024 0A94      		dec r0
 1977 0026 02F4      		brpl 1b
 1978 0028 052E      		mov __tmp_reg__,r21
 1979 002a 000C      		lsl r0
 1980 002c 660B      		sbc r22,r22
 1981 002e 770B      		sbc r23,r23
 1982 0030 C080      		ld r12,Z
 1983 0032 D180      		ldd r13,Z+1
 1984 0034 E280      		ldd r14,Z+2
 1985 0036 F380      		ldd r15,Z+3
 1986 0038 4C29      		or r20,r12
 1987 003a 5D29      		or r21,r13
 1988 003c 6E29      		or r22,r14
 1989 003e 7F29      		or r23,r15
 1990 0040 4083      		st Z,r20
 1991 0042 5183      		std Z+1,r21
 1992 0044 6283      		std Z+2,r22
 1993 0046 7383      		std Z+3,r23
 1994               	.LVL171:
 1995 0048 285F      		subi r18,-8
 1996 004a 3F4F      		sbci r19,-1
 199:./ros_lib/ros/msg.h ****     for (size_t i = 0; i < sizeof(V); i++)
 1997               		.loc 11 199 0 discriminator 2
 1998 004c 2032      		cpi r18,32
 1999 004e 3105      		cpc r19,__zero_reg__
 2000 0050 01F4      		brne .L46
 2001               	/* epilogue start */
 2002               	.LBE117:
 201:./ros_lib/ros/msg.h ****   }
 2003               		.loc 11 201 0
 2004 0052 FF90      		pop r15
 2005 0054 EF90      		pop r14
 2006 0056 DF90      		pop r13
 2007 0058 CF90      		pop r12
 2008 005a 0895      		ret
 2009               		.cfi_endproc
 2010               	.LFE154:
 2012               		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",@progbits,_ZN14rosserial_msgs3Log11de
 2013               		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 2015               	_ZN14rosserial_msgs3Log11deserializeEPh:
 2016               	.LFB48:
  44:./ros_lib/rosserial_msgs/Log.h ****     {
 2017               		.loc 3 44 0
 2018               		.cfi_startproc
 2019               	.LVL172:
 2020 0000 4F92      		push r4
 2021               	.LCFI52:
 2022               		.cfi_def_cfa_offset 4
 2023               		.cfi_offset 4, -3
 2024 0002 5F92      		push r5
 2025               	.LCFI53:
 2026               		.cfi_def_cfa_offset 5
 2027               		.cfi_offset 5, -4
 2028 0004 6F92      		push r6
 2029               	.LCFI54:
 2030               		.cfi_def_cfa_offset 6
 2031               		.cfi_offset 6, -5
 2032 0006 7F92      		push r7
 2033               	.LCFI55:
 2034               		.cfi_def_cfa_offset 7
 2035               		.cfi_offset 7, -6
 2036 0008 8F92      		push r8
 2037               	.LCFI56:
 2038               		.cfi_def_cfa_offset 8
 2039               		.cfi_offset 8, -7
 2040 000a 9F92      		push r9
 2041               	.LCFI57:
 2042               		.cfi_def_cfa_offset 9
 2043               		.cfi_offset 9, -8
 2044 000c AF92      		push r10
 2045               	.LCFI58:
 2046               		.cfi_def_cfa_offset 10
 2047               		.cfi_offset 10, -9
 2048 000e BF92      		push r11
 2049               	.LCFI59:
 2050               		.cfi_def_cfa_offset 11
 2051               		.cfi_offset 11, -10
 2052 0010 EF92      		push r14
 2053               	.LCFI60:
 2054               		.cfi_def_cfa_offset 12
 2055               		.cfi_offset 14, -11
 2056 0012 FF92      		push r15
 2057               	.LCFI61:
 2058               		.cfi_def_cfa_offset 13
 2059               		.cfi_offset 15, -12
 2060 0014 0F93      		push r16
 2061               	.LCFI62:
 2062               		.cfi_def_cfa_offset 14
 2063               		.cfi_offset 16, -13
 2064 0016 1F93      		push r17
 2065               	.LCFI63:
 2066               		.cfi_def_cfa_offset 15
 2067               		.cfi_offset 17, -14
 2068 0018 CF93      		push r28
 2069               	.LCFI64:
 2070               		.cfi_def_cfa_offset 16
 2071               		.cfi_offset 28, -15
 2072 001a DF93      		push r29
 2073               	.LCFI65:
 2074               		.cfi_def_cfa_offset 17
 2075               		.cfi_offset 29, -16
 2076 001c 00D0      		rcall .
 2077 001e 1F92      		push __zero_reg__
 2078               	.LCFI66:
 2079               		.cfi_def_cfa_offset 21
 2080 0020 CDB7      		in r28,__SP_L__
 2081 0022 DEB7      		in r29,__SP_H__
 2082               	.LCFI67:
 2083               		.cfi_def_cfa_register 28
 2084               	/* prologue: function */
 2085               	/* frame size = 4 */
 2086               	/* stack size = 18 */
 2087               	.L__stack_usage = 18
 2088 0024 7C01      		movw r14,r24
 2089 0026 8B01      		movw r16,r22
 2090               	.LVL173:
  47:./ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2091               		.loc 3 47 0
 2092 0028 FB01      		movw r30,r22
 2093 002a 8191      		ld r24,Z+
 2094               	.LVL174:
 2095 002c BF01      		movw r22,r30
 2096               	.LVL175:
 2097 002e F701      		movw r30,r14
 2098 0030 8283      		std Z+2,r24
 2099               	.LVL176:
  50:./ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2100               		.loc 3 50 0
 2101 0032 CE01      		movw r24,r28
 2102 0034 0196      		adiw r24,1
 2103 0036 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2104               	.LVL177:
 2105               	.LBB118:
  52:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2106               		.loc 3 52 0
 2107 003a 8981      		ldd r24,Y+1
 2108 003c 9A81      		ldd r25,Y+2
 2109 003e AB81      		ldd r26,Y+3
 2110 0040 BC81      		ldd r27,Y+4
 2111 0042 4C01      		movw r8,r24
 2112 0044 5D01      		movw r10,r26
 2113 0046 F5E0      		ldi r31,5
 2114 0048 8F0E      		add r8,r31
 2115 004a 911C      		adc r9,__zero_reg__
 2116 004c A11C      		adc r10,__zero_reg__
 2117 004e B11C      		adc r11,__zero_reg__
 2118 0050 A801      		movw r20,r16
 2119 0052 4C5F      		subi r20,-4
 2120 0054 5F4F      		sbci r21,-1
 2121 0056 FA01      		movw r30,r20
 2122 0058 25E0      		ldi r18,lo8(5)
 2123 005a 30E0      		ldi r19,0
 2124               	.LVL178:
 2125               	.L50:
  52:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2126               		.loc 3 52 0 is_stmt 0 discriminator 3
 2127 005c 2901      		movw r4,r18
 2128 005e 612C      		mov r6,__zero_reg__
 2129 0060 712C      		mov r7,__zero_reg__
 2130 0062 4814      		cp r4,r8
 2131 0064 5904      		cpc r5,r9
 2132 0066 6A04      		cpc r6,r10
 2133 0068 7B04      		cpc r7,r11
 2134 006a 00F4      		brsh .L49
  53:./ros_lib/rosserial_msgs/Log.h ****       }
 2135               		.loc 3 53 0 is_stmt 1 discriminator 2
 2136 006c 6181      		ldd r22,Z+1
 2137 006e 6193      		st Z+,r22
  52:./ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2138               		.loc 3 52 0 discriminator 2
 2139 0070 2F5F      		subi r18,-1
 2140 0072 3F4F      		sbci r19,-1
 2141               	.LVL179:
 2142 0074 00C0      		rjmp .L50
 2143               	.LVL180:
 2144               	.L49:
 2145               	.LBE118:
  55:./ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2146               		.loc 3 55 0
 2147 0076 F801      		movw r30,r16
 2148 0078 E80F      		add r30,r24
 2149 007a F91F      		adc r31,r25
 2150 007c 1482      		std Z+4,__zero_reg__
  56:./ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2151               		.loc 3 56 0
 2152 007e F701      		movw r30,r14
 2153 0080 5483      		std Z+4,r21
 2154 0082 4383      		std Z+3,r20
 2155               	.LVL181:
  59:./ros_lib/rosserial_msgs/Log.h **** 
 2156               		.loc 3 59 0
 2157 0084 0596      		adiw r24,5
 2158               	.LVL182:
 2159               	/* epilogue start */
 2160 0086 0F90      		pop __tmp_reg__
 2161 0088 0F90      		pop __tmp_reg__
 2162 008a 0F90      		pop __tmp_reg__
 2163 008c 0F90      		pop __tmp_reg__
 2164 008e DF91      		pop r29
 2165 0090 CF91      		pop r28
 2166               	.LVL183:
 2167 0092 1F91      		pop r17
 2168               	.LVL184:
 2169 0094 0F91      		pop r16
 2170               	.LVL185:
 2171 0096 FF90      		pop r15
 2172               	.LVL186:
 2173 0098 EF90      		pop r14
 2174               	.LVL187:
 2175 009a BF90      		pop r11
 2176               	.LVL188:
 2177 009c AF90      		pop r10
 2178               	.LVL189:
 2179 009e 9F90      		pop r9
 2180               	.LVL190:
 2181 00a0 8F90      		pop r8
 2182               	.LVL191:
 2183 00a2 7F90      		pop r7
 2184               	.LVL192:
 2185 00a4 6F90      		pop r6
 2186               	.LVL193:
 2187 00a6 5F90      		pop r5
 2188               	.LVL194:
 2189 00a8 4F90      		pop r4
 2190               	.LVL195:
 2191 00aa 0895      		ret
 2192               		.cfi_endproc
 2193               	.LFE48:
 2195               		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",@progbits,_ZN14rosserial_msgs9T
 2196               		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2198               	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 2199               	.LFB41:
  77:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2200               		.loc 2 77 0
 2201               		.cfi_startproc
 2202               	.LVL196:
 2203 0000 4F92      		push r4
 2204               	.LCFI68:
 2205               		.cfi_def_cfa_offset 4
 2206               		.cfi_offset 4, -3
 2207 0002 5F92      		push r5
 2208               	.LCFI69:
 2209               		.cfi_def_cfa_offset 5
 2210               		.cfi_offset 5, -4
 2211 0004 6F92      		push r6
 2212               	.LCFI70:
 2213               		.cfi_def_cfa_offset 6
 2214               		.cfi_offset 6, -5
 2215 0006 7F92      		push r7
 2216               	.LCFI71:
 2217               		.cfi_def_cfa_offset 7
 2218               		.cfi_offset 7, -6
 2219 0008 8F92      		push r8
 2220               	.LCFI72:
 2221               		.cfi_def_cfa_offset 8
 2222               		.cfi_offset 8, -7
 2223 000a 9F92      		push r9
 2224               	.LCFI73:
 2225               		.cfi_def_cfa_offset 9
 2226               		.cfi_offset 9, -8
 2227 000c AF92      		push r10
 2228               	.LCFI74:
 2229               		.cfi_def_cfa_offset 10
 2230               		.cfi_offset 10, -9
 2231 000e BF92      		push r11
 2232               	.LCFI75:
 2233               		.cfi_def_cfa_offset 11
 2234               		.cfi_offset 11, -10
 2235 0010 CF92      		push r12
 2236               	.LCFI76:
 2237               		.cfi_def_cfa_offset 12
 2238               		.cfi_offset 12, -11
 2239 0012 DF92      		push r13
 2240               	.LCFI77:
 2241               		.cfi_def_cfa_offset 13
 2242               		.cfi_offset 13, -12
 2243 0014 EF92      		push r14
 2244               	.LCFI78:
 2245               		.cfi_def_cfa_offset 14
 2246               		.cfi_offset 14, -13
 2247 0016 FF92      		push r15
 2248               	.LCFI79:
 2249               		.cfi_def_cfa_offset 15
 2250               		.cfi_offset 15, -14
 2251 0018 0F93      		push r16
 2252               	.LCFI80:
 2253               		.cfi_def_cfa_offset 16
 2254               		.cfi_offset 16, -15
 2255 001a 1F93      		push r17
 2256               	.LCFI81:
 2257               		.cfi_def_cfa_offset 17
 2258               		.cfi_offset 17, -16
 2259 001c CF93      		push r28
 2260               	.LCFI82:
 2261               		.cfi_def_cfa_offset 18
 2262               		.cfi_offset 28, -17
 2263 001e DF93      		push r29
 2264               	.LCFI83:
 2265               		.cfi_def_cfa_offset 19
 2266               		.cfi_offset 29, -18
 2267 0020 CDB7      		in r28,__SP_L__
 2268 0022 DEB7      		in r29,__SP_H__
 2269               	.LCFI84:
 2270               		.cfi_def_cfa_register 28
 2271 0024 2C97      		sbiw r28,12
 2272               	.LCFI85:
 2273               		.cfi_def_cfa_offset 31
 2274 0026 0FB6      		in __tmp_reg__,__SREG__
 2275 0028 F894      		cli
 2276 002a DEBF      		out __SP_H__,r29
 2277 002c 0FBE      		out __SREG__,__tmp_reg__
 2278 002e CDBF      		out __SP_L__,r28
 2279               	/* prologue: function */
 2280               	/* frame size = 12 */
 2281               	/* stack size = 28 */
 2282               	.L__stack_usage = 28
 2283 0030 7C01      		movw r14,r24
 2284 0032 8B01      		movw r16,r22
 2285               	.LVL197:
  80:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2286               		.loc 2 80 0
 2287 0034 DB01      		movw r26,r22
 2288 0036 8C91      		ld r24,X
 2289               	.LVL198:
 2290 0038 90E0      		ldi r25,0
 2291 003a F701      		movw r30,r14
 2292 003c 9383      		std Z+3,r25
 2293 003e 8283      		std Z+2,r24
  81:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2294               		.loc 2 81 0
 2295 0040 1196      		adiw r26,1
 2296 0042 2C91      		ld r18,X
 2297 0044 922B      		or r25,r18
 2298 0046 9383      		std Z+3,r25
 2299 0048 8283      		std Z+2,r24
 2300               	.LVL199:
  84:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2301               		.loc 2 84 0
 2302 004a 6E5F      		subi r22,-2
 2303 004c 7F4F      		sbci r23,-1
 2304               	.LVL200:
 2305 004e CE01      		movw r24,r28
 2306 0050 0996      		adiw r24,9
 2307 0052 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2308               	.LVL201:
 2309               	.LBB119:
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2310               		.loc 2 86 0
 2311 0056 8984      		ldd r8,Y+9
 2312 0058 9A84      		ldd r9,Y+10
 2313 005a AB84      		ldd r10,Y+11
 2314 005c BC84      		ldd r11,Y+12
 2315 005e 2401      		movw r4,r8
 2316 0060 3501      		movw r6,r10
 2317 0062 F6E0      		ldi r31,6
 2318 0064 4F0E      		add r4,r31
 2319 0066 511C      		adc r5,__zero_reg__
 2320 0068 611C      		adc r6,__zero_reg__
 2321 006a 711C      		adc r7,__zero_reg__
 2322 006c 9801      		movw r18,r16
 2323 006e 2B5F      		subi r18,-5
 2324 0070 3F4F      		sbci r19,-1
 2325 0072 F901      		movw r30,r18
 2326 0074 86E0      		ldi r24,lo8(6)
 2327 0076 90E0      		ldi r25,0
 2328               	.LVL202:
 2329               	.L53:
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2330               		.loc 2 86 0 is_stmt 0 discriminator 3
 2331 0078 AC01      		movw r20,r24
 2332 007a 60E0      		ldi r22,0
 2333 007c 70E0      		ldi r23,0
 2334 007e 4415      		cp r20,r4
 2335 0080 5505      		cpc r21,r5
 2336 0082 6605      		cpc r22,r6
 2337 0084 7705      		cpc r23,r7
 2338 0086 00F4      		brsh .L52
  87:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2339               		.loc 2 87 0 is_stmt 1 discriminator 2
 2340 0088 4181      		ldd r20,Z+1
 2341 008a 4193      		st Z+,r20
  86:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2342               		.loc 2 86 0 discriminator 2
 2343 008c 0196      		adiw r24,1
 2344               	.LVL203:
 2345 008e 00C0      		rjmp .L53
 2346               	.LVL204:
 2347               	.L52:
 2348               	.LBE119:
  89:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2349               		.loc 2 89 0
 2350 0090 F801      		movw r30,r16
 2351 0092 E80D      		add r30,r8
 2352 0094 F91D      		adc r31,r9
 2353 0096 1582      		std Z+5,__zero_reg__
  90:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2354               		.loc 2 90 0
 2355 0098 D701      		movw r26,r14
 2356 009a 1596      		adiw r26,4+1
 2357 009c 3C93      		st X,r19
 2358 009e 2E93      		st -X,r18
 2359 00a0 1497      		sbiw r26,4
  91:./ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
 2360               		.loc 2 91 0
 2361 00a2 B401      		movw r22,r8
 2362 00a4 6A5F      		subi r22,-6
 2363 00a6 7F4F      		sbci r23,-1
 2364               	.LVL205:
  93:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2365               		.loc 2 93 0
 2366 00a8 600F      		add r22,r16
 2367 00aa 711F      		adc r23,r17
 2368               	.LVL206:
 2369 00ac CE01      		movw r24,r28
 2370 00ae 0596      		adiw r24,5
 2371 00b0 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2372               	.LVL207:
  94:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 2373               		.loc 2 94 0
 2374 00b4 BAE0      		ldi r27,10
 2375 00b6 8B0E      		add r8,r27
 2376 00b8 911C      		adc r9,__zero_reg__
 2377               	.LVL208:
 2378               	.LBB120:
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2379               		.loc 2 95 0
 2380 00ba 4D80      		ldd r4,Y+5
 2381 00bc 5E80      		ldd r5,Y+6
 2382 00be 6F80      		ldd r6,Y+7
 2383 00c0 7884      		ldd r7,Y+8
 2384 00c2 A401      		movw r20,r8
 2385 00c4 092C      		mov __tmp_reg__,r9
 2386 00c6 000C      		lsl r0
 2387 00c8 660B      		sbc r22,r22
 2388 00ca 770B      		sbc r23,r23
 2389 00cc 440D      		add r20,r4
 2390 00ce 551D      		adc r21,r5
 2391 00d0 661D      		adc r22,r6
 2392 00d2 771D      		adc r23,r7
 2393 00d4 D801      		movw r26,r16
 2394 00d6 A80D      		add r26,r8
 2395 00d8 B91D      		adc r27,r9
 2396               	.LVL209:
 2397               	.L55:
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2398               		.loc 2 95 0 is_stmt 0 discriminator 3
 2399 00da CD01      		movw r24,r26
 2400 00dc 801B      		sub r24,r16
 2401 00de 910B      		sbc r25,r17
 2402               	.LVL210:
 2403 00e0 5C01      		movw r10,r24
 2404 00e2 C12C      		mov r12,__zero_reg__
 2405 00e4 D12C      		mov r13,__zero_reg__
 2406 00e6 A416      		cp r10,r20
 2407 00e8 B506      		cpc r11,r21
 2408 00ea C606      		cpc r12,r22
 2409 00ec D706      		cpc r13,r23
 2410 00ee 00F4      		brsh .L54
  96:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2411               		.loc 2 96 0 is_stmt 1 discriminator 2
 2412 00f0 8D91      		ld r24,X+
 2413               	.LVL211:
 2414 00f2 FD01      		movw r30,r26
 2415 00f4 3297      		sbiw r30,2
 2416 00f6 8083      		st Z,r24
 2417               	.LVL212:
  95:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2418               		.loc 2 95 0 discriminator 2
 2419 00f8 00C0      		rjmp .L55
 2420               	.LVL213:
 2421               	.L54:
 2422               	.LBE120:
  98:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2423               		.loc 2 98 0
 2424 00fa 5401      		movw r10,r8
 2425               	.LVL214:
 2426 00fc A40C      		add r10,r4
 2427 00fe B51C      		adc r11,r5
 2428 0100 B801      		movw r22,r16
 2429 0102 6A0D      		add r22,r10
 2430 0104 7B1D      		adc r23,r11
 2431 0106 FB01      		movw r30,r22
 2432 0108 3197      		sbiw r30,1
 2433 010a 1082      		st Z,__zero_reg__
  99:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2434               		.loc 2 99 0
 2435 010c C401      		movw r24,r8
 2436               	.LVL215:
 2437 010e 0197      		sbiw r24,1
 2438 0110 800F      		add r24,r16
 2439 0112 911F      		adc r25,r17
 2440 0114 F701      		movw r30,r14
 2441 0116 9783      		std Z+7,r25
 2442 0118 8683      		std Z+6,r24
 2443               	.LVL216:
 102:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2444               		.loc 2 102 0
 2445 011a CE01      		movw r24,r28
 2446 011c 0196      		adiw r24,1
 2447 011e 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 2448               	.LVL217:
 103:./ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 2449               		.loc 2 103 0
 2450 0122 9501      		movw r18,r10
 2451 0124 2C5F      		subi r18,-4
 2452 0126 3F4F      		sbci r19,-1
 2453               	.LVL218:
 2454               	.LBB121:
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2455               		.loc 2 104 0
 2456 0128 8981      		ldd r24,Y+1
 2457 012a 9A81      		ldd r25,Y+2
 2458 012c AB81      		ldd r26,Y+3
 2459 012e BC81      		ldd r27,Y+4
 2460 0130 2901      		movw r4,r18
 2461 0132 032E      		mov __tmp_reg__,r19
 2462 0134 000C      		lsl r0
 2463 0136 6608      		sbc r6,r6
 2464 0138 7708      		sbc r7,r7
 2465 013a 480E      		add r4,r24
 2466 013c 591E      		adc r5,r25
 2467 013e 6A1E      		adc r6,r26
 2468 0140 7B1E      		adc r7,r27
 2469 0142 F501      		movw r30,r10
 2470 0144 3396      		adiw r30,3
 2471 0146 E00F      		add r30,r16
 2472 0148 F11F      		adc r31,r17
 2473 014a A901      		movw r20,r18
 2474               	.LVL219:
 2475               	.L57:
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2476               		.loc 2 104 0 is_stmt 0 discriminator 3
 2477 014c 4A01      		movw r8,r20
 2478 014e A12C      		mov r10,__zero_reg__
 2479 0150 B12C      		mov r11,__zero_reg__
 2480 0152 8414      		cp r8,r4
 2481 0154 9504      		cpc r9,r5
 2482 0156 A604      		cpc r10,r6
 2483 0158 B704      		cpc r11,r7
 2484 015a 00F4      		brsh .L56
 2485               	.LVL220:
 105:./ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2486               		.loc 2 105 0 is_stmt 1 discriminator 2
 2487 015c 6181      		ldd r22,Z+1
 2488 015e 6193      		st Z+,r22
 104:./ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2489               		.loc 2 104 0 discriminator 2
 2490 0160 4F5F      		subi r20,-1
 2491 0162 5F4F      		sbci r21,-1
 2492               	.LVL221:
 2493 0164 00C0      		rjmp .L57
 2494               	.LVL222:
 2495               	.L56:
 2496               	.LBE121:
 107:./ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2497               		.loc 2 107 0
 2498 0166 820F      		add r24,r18
 2499 0168 931F      		adc r25,r19
 2500 016a F801      		movw r30,r16
 2501 016c E80F      		add r30,r24
 2502 016e F91F      		adc r31,r25
 2503 0170 DF01      		movw r26,r30
 2504 0172 1197      		sbiw r26,1
 2505 0174 1C92      		st X,__zero_reg__
 108:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2506               		.loc 2 108 0
 2507 0176 2150      		subi r18,1
 2508 0178 3109      		sbc r19,__zero_reg__
 2509               	.LVL223:
 2510 017a 020F      		add r16,r18
 2511 017c 131F      		adc r17,r19
 2512               	.LVL224:
 2513 017e D701      		movw r26,r14
 2514 0180 1996      		adiw r26,8+1
 2515 0182 1C93      		st X,r17
 2516 0184 0E93      		st -X,r16
 2517 0186 1897      		sbiw r26,8
 2518               	.LVL225:
 119:./ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2519               		.loc 2 119 0
 2520 0188 2181      		ldd r18,Z+1
 2521 018a 4281      		ldd r20,Z+2
 2522 018c 50E0      		ldi r21,0
 2523 018e 60E0      		ldi r22,0
 2524 0190 70E0      		ldi r23,0
 2525 0192 BA01      		movw r22,r20
 2526 0194 5527      		clr r21
 2527 0196 4427      		clr r20
 2528 0198 522B      		or r21,r18
 2529 019a 2081      		ld r18,Z
 2530 019c 422B      		or r20,r18
 2531 019e 2381      		ldd r18,Z+3
 2532 01a0 722B      		or r23,r18
 2533 01a2 F701      		movw r30,r14
 2534 01a4 4287      		std Z+10,r20
 2535 01a6 5387      		std Z+11,r21
 2536 01a8 6487      		std Z+12,r22
 2537 01aa 7587      		std Z+13,r23
 2538               	.LVL226:
 122:./ros_lib/rosserial_msgs/TopicInfo.h **** 
 2539               		.loc 2 122 0
 2540 01ac 0496      		adiw r24,4
 2541               	.LVL227:
 2542               	/* epilogue start */
 2543 01ae 2C96      		adiw r28,12
 2544 01b0 0FB6      		in __tmp_reg__,__SREG__
 2545 01b2 F894      		cli
 2546 01b4 DEBF      		out __SP_H__,r29
 2547 01b6 0FBE      		out __SREG__,__tmp_reg__
 2548 01b8 CDBF      		out __SP_L__,r28
 2549 01ba DF91      		pop r29
 2550 01bc CF91      		pop r28
 2551 01be 1F91      		pop r17
 2552 01c0 0F91      		pop r16
 2553 01c2 FF90      		pop r15
 2554 01c4 EF90      		pop r14
 2555               	.LVL228:
 2556 01c6 DF90      		pop r13
 2557 01c8 CF90      		pop r12
 2558 01ca BF90      		pop r11
 2559 01cc AF90      		pop r10
 2560 01ce 9F90      		pop r9
 2561 01d0 8F90      		pop r8
 2562               	.LVL229:
 2563 01d2 7F90      		pop r7
 2564 01d4 6F90      		pop r6
 2565 01d6 5F90      		pop r5
 2566 01d8 4F90      		pop r4
 2567 01da 0895      		ret
 2568               		.cfi_endproc
 2569               	.LFE41:
 2571               		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",@progbits,_ZN14ross
 2572               		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2574               	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2575               	.LFB62:
 130:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 2576               		.loc 4 130 0
 2577               		.cfi_startproc
 2578               	.LVL230:
 2579 0000 2F92      		push r2
 2580               	.LCFI86:
 2581               		.cfi_def_cfa_offset 4
 2582               		.cfi_offset 2, -3
 2583 0002 3F92      		push r3
 2584               	.LCFI87:
 2585               		.cfi_def_cfa_offset 5
 2586               		.cfi_offset 3, -4
 2587 0004 4F92      		push r4
 2588               	.LCFI88:
 2589               		.cfi_def_cfa_offset 6
 2590               		.cfi_offset 4, -5
 2591 0006 5F92      		push r5
 2592               	.LCFI89:
 2593               		.cfi_def_cfa_offset 7
 2594               		.cfi_offset 5, -6
 2595 0008 6F92      		push r6
 2596               	.LCFI90:
 2597               		.cfi_def_cfa_offset 8
 2598               		.cfi_offset 6, -7
 2599 000a 7F92      		push r7
 2600               	.LCFI91:
 2601               		.cfi_def_cfa_offset 9
 2602               		.cfi_offset 7, -8
 2603 000c 8F92      		push r8
 2604               	.LCFI92:
 2605               		.cfi_def_cfa_offset 10
 2606               		.cfi_offset 8, -9
 2607 000e 9F92      		push r9
 2608               	.LCFI93:
 2609               		.cfi_def_cfa_offset 11
 2610               		.cfi_offset 9, -10
 2611 0010 AF92      		push r10
 2612               	.LCFI94:
 2613               		.cfi_def_cfa_offset 12
 2614               		.cfi_offset 10, -11
 2615 0012 BF92      		push r11
 2616               	.LCFI95:
 2617               		.cfi_def_cfa_offset 13
 2618               		.cfi_offset 11, -12
 2619 0014 CF92      		push r12
 2620               	.LCFI96:
 2621               		.cfi_def_cfa_offset 14
 2622               		.cfi_offset 12, -13
 2623 0016 DF92      		push r13
 2624               	.LCFI97:
 2625               		.cfi_def_cfa_offset 15
 2626               		.cfi_offset 13, -14
 2627 0018 EF92      		push r14
 2628               	.LCFI98:
 2629               		.cfi_def_cfa_offset 16
 2630               		.cfi_offset 14, -15
 2631 001a FF92      		push r15
 2632               	.LCFI99:
 2633               		.cfi_def_cfa_offset 17
 2634               		.cfi_offset 15, -16
 2635 001c 0F93      		push r16
 2636               	.LCFI100:
 2637               		.cfi_def_cfa_offset 18
 2638               		.cfi_offset 16, -17
 2639 001e 1F93      		push r17
 2640               	.LCFI101:
 2641               		.cfi_def_cfa_offset 19
 2642               		.cfi_offset 17, -18
 2643 0020 CF93      		push r28
 2644               	.LCFI102:
 2645               		.cfi_def_cfa_offset 20
 2646               		.cfi_offset 28, -19
 2647 0022 DF93      		push r29
 2648               	.LCFI103:
 2649               		.cfi_def_cfa_offset 21
 2650               		.cfi_offset 29, -20
 2651 0024 CDB7      		in r28,__SP_L__
 2652 0026 DEB7      		in r29,__SP_H__
 2653               	.LCFI104:
 2654               		.cfi_def_cfa_register 28
 2655 0028 6097      		sbiw r28,16
 2656               	.LCFI105:
 2657               		.cfi_def_cfa_offset 37
 2658 002a 0FB6      		in __tmp_reg__,__SREG__
 2659 002c F894      		cli
 2660 002e DEBF      		out __SP_H__,r29
 2661 0030 0FBE      		out __SREG__,__tmp_reg__
 2662 0032 CDBF      		out __SP_L__,r28
 2663               	/* prologue: function */
 2664               	/* frame size = 16 */
 2665               	/* stack size = 34 */
 2666               	.L__stack_usage = 34
 2667 0034 8C01      		movw r16,r24
 2668 0036 6B01      		movw r12,r22
 2669               	.LVL231:
 136:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints_length);
 2670               		.loc 4 136 0
 2671 0038 DB01      		movw r26,r22
 2672 003a 8D90      		ld r8,X+
 2673 003c 9D90      		ld r9,X+
 2674 003e AD90      		ld r10,X+
 2675 0040 BC90      		ld r11,X
 2676               	.LVL232:
 138:./ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2677               		.loc 4 138 0
 2678 0042 FC01      		movw r30,r24
 2679 0044 8281      		ldd r24,Z+2
 2680 0046 9381      		ldd r25,Z+3
 2681 0048 A481      		ldd r26,Z+4
 2682 004a B581      		ldd r27,Z+5
 2683               	.LVL233:
 2684 004c 8815      		cp r24,r8
 2685 004e 9905      		cpc r25,r9
 2686 0050 AA05      		cpc r26,r10
 2687 0052 BB05      		cpc r27,r11
 2688 0054 00F4      		brsh .L59
 139:./ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 2689               		.loc 4 139 0
 2690 0056 B401      		movw r22,r8
 2691               	.LVL234:
 2692 0058 660F      		lsl r22
 2693 005a 771F      		rol r23
 2694 005c 660F      		lsl r22
 2695 005e 771F      		rol r23
 2696 0060 8285      		ldd r24,Z+10
 2697 0062 9385      		ldd r25,Z+11
 2698 0064 0E94 0000 		call realloc
 2699               	.LVL235:
 2700 0068 D801      		movw r26,r16
 2701 006a 1B96      		adiw r26,10+1
 2702 006c 9C93      		st X,r25
 2703 006e 8E93      		st -X,r24
 2704 0070 1A97      		sbiw r26,10
 2705               	.L59:
 140:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < ints_length; i++){
 2706               		.loc 4 140 0
 2707 0072 F801      		movw r30,r16
 2708 0074 8282      		std Z+2,r8
 2709 0076 9382      		std Z+3,r9
 2710 0078 A482      		std Z+4,r10
 2711 007a B582      		std Z+5,r11
 2712               	.LVL236:
 2713 007c 9601      		movw r18,r12
 2714               	.LBB122:
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2715               		.loc 4 141 0
 2716 007e 812C      		mov r8,__zero_reg__
 2717 0080 912C      		mov r9,__zero_reg__
 2718 0082 5401      		movw r10,r8
 2719               	.LBE122:
 137:./ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2720               		.loc 4 137 0
 2721 0084 44E0      		ldi r20,lo8(4)
 2722 0086 50E0      		ldi r21,0
 2723               	.LBB125:
 2724               	.LBB123:
 153:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2725               		.loc 4 153 0
 2726 0088 B801      		movw r22,r16
 2727 008a 6A5F      		subi r22,-6
 2728 008c 7F4F      		sbci r23,-1
 2729               	.LVL237:
 2730               	.L61:
 2731 008e 2C5F      		subi r18,-4
 2732 0090 3F4F      		sbci r19,-1
 2733               	.LBE123:
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2734               		.loc 4 141 0 discriminator 3
 2735 0092 F801      		movw r30,r16
 2736 0094 8281      		ldd r24,Z+2
 2737 0096 9381      		ldd r25,Z+3
 2738 0098 A481      		ldd r26,Z+4
 2739 009a B581      		ldd r27,Z+5
 2740 009c FA01      		movw r30,r20
 2741 009e 3496      		adiw r30,4
 2742 00a0 1F01      		movw r2,r30
 2743 00a2 8816      		cp r8,r24
 2744 00a4 9906      		cpc r9,r25
 2745 00a6 AA06      		cpc r10,r26
 2746 00a8 BB06      		cpc r11,r27
 2747 00aa 00F4      		brsh .L60
 2748               	.LVL238:
 2749               	.LBB124:
 151:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2750               		.loc 4 151 0 discriminator 2
 2751 00ac D901      		movw r26,r18
 2752 00ae 1196      		adiw r26,1
 2753 00b0 FC90      		ld r15,X
 2754 00b2 1197      		sbiw r26,1
 2755 00b4 1296      		adiw r26,2
 2756 00b6 8C91      		ld r24,X
 2757 00b8 90E0      		ldi r25,0
 2758 00ba A0E0      		ldi r26,0
 2759 00bc B0E0      		ldi r27,0
 2760 00be DC01      		movw r26,r24
 2761 00c0 9927      		clr r25
 2762 00c2 8827      		clr r24
 2763 00c4 9F29      		or r25,r15
 2764 00c6 F901      		movw r30,r18
 2765 00c8 F080      		ld r15,Z
 2766 00ca 8F29      		or r24,r15
 2767 00cc F380      		ldd r15,Z+3
 2768 00ce BF29      		or r27,r15
 2769 00d0 F801      		movw r30,r16
 2770 00d2 8683      		std Z+6,r24
 2771 00d4 9783      		std Z+7,r25
 2772 00d6 A087      		std Z+8,r26
 2773 00d8 B187      		std Z+9,r27
 2774               	.LVL239:
 2775 00da DA01      		movw r26,r20
 2776               	.LVL240:
 2777 00dc A101      		movw r20,r2
 153:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2778               		.loc 4 153 0 discriminator 2
 2779 00de 1497      		sbiw r26,4
 2780 00e0 8285      		ldd r24,Z+10
 2781 00e2 9385      		ldd r25,Z+11
 2782 00e4 A80F      		add r26,r24
 2783 00e6 B91F      		adc r27,r25
 2784 00e8 84E0      		ldi r24,lo8(4)
 2785 00ea FB01      		movw r30,r22
 2786               		0:
 2787 00ec 0190      		ld r0,Z+
 2788 00ee 0D92      		st X+,r0
 2789 00f0 8A95      		dec r24
 2790 00f2 01F4      		brne 0b
 2791               	.LBE124:
 141:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2792               		.loc 4 141 0 discriminator 2
 2793 00f4 FFEF      		ldi r31,-1
 2794 00f6 8F1A      		sub r8,r31
 2795 00f8 9F0A      		sbc r9,r31
 2796 00fa AF0A      		sbc r10,r31
 2797 00fc BF0A      		sbc r11,r31
 2798               	.LVL241:
 2799 00fe 00C0      		rjmp .L61
 2800               	.LVL242:
 2801               	.L60:
 2802               	.LBE125:
 155:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2803               		.loc 4 155 0
 2804 0100 4601      		movw r8,r12
 2805               	.LVL243:
 2806 0102 840E      		add r8,r20
 2807 0104 951E      		adc r9,r21
 2808 0106 D401      		movw r26,r8
 2809 0108 8C91      		ld r24,X
 2810               	.LVL244:
 157:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2811               		.loc 4 157 0
 2812 010a 1196      		adiw r26,1
 2813 010c 9C91      		ld r25,X
 2814 010e 1197      		sbiw r26,1
 2815 0110 1296      		adiw r26,2
 2816 0112 4C90      		ld r4,X
 2817 0114 1297      		sbiw r26,2
 2818 0116 512C      		mov r5,__zero_reg__
 2819 0118 612C      		mov r6,__zero_reg__
 2820 011a 712C      		mov r7,__zero_reg__
 2821 011c 3201      		movw r6,r4
 2822 011e 5524      		clr r5
 2823 0120 4424      		clr r4
 2824 0122 592A      		or r5,r25
 2825 0124 482A      		or r4,r24
 2826               	.LVL245:
 158:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats_length);
 2827               		.loc 4 158 0
 2828 0126 1396      		adiw r26,3
 2829 0128 8C91      		ld r24,X
 2830 012a 782A      		or r7,r24
 159:./ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2831               		.loc 4 159 0
 2832 012c 5F01      		movw r10,r30
 2833               	.LVL246:
 160:./ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2834               		.loc 4 160 0
 2835 012e F801      		movw r30,r16
 2836 0130 8485      		ldd r24,Z+12
 2837 0132 9585      		ldd r25,Z+13
 2838 0134 A685      		ldd r26,Z+14
 2839 0136 B785      		ldd r27,Z+15
 2840 0138 8415      		cp r24,r4
 2841 013a 9505      		cpc r25,r5
 2842 013c A605      		cpc r26,r6
 2843 013e B705      		cpc r27,r7
 2844 0140 00F4      		brsh .L62
 2845               	.LVL247:
 161:./ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 2846               		.loc 4 161 0
 2847 0142 B201      		movw r22,r4
 2848 0144 660F      		lsl r22
 2849 0146 771F      		rol r23
 2850 0148 660F      		lsl r22
 2851 014a 771F      		rol r23
 2852 014c 8489      		ldd r24,Z+20
 2853 014e 9589      		ldd r25,Z+21
 2854 0150 0E94 0000 		call realloc
 2855               	.LVL248:
 2856 0154 D801      		movw r26,r16
 2857 0156 5596      		adiw r26,20+1
 2858 0158 9C93      		st X,r25
 2859 015a 8E93      		st -X,r24
 2860 015c 5497      		sbiw r26,20
 2861               	.L62:
 162:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < floats_length; i++){
 2862               		.loc 4 162 0
 2863 015e F801      		movw r30,r16
 2864 0160 4486      		std Z+12,r4
 2865 0162 5586      		std Z+13,r5
 2866 0164 6686      		std Z+14,r6
 2867 0166 7786      		std Z+15,r7
 2868               	.LVL249:
 2869 0168 C401      		movw r24,r8
 2870               	.LBB126:
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2871               		.loc 4 163 0
 2872 016a 412C      		mov r4,__zero_reg__
 2873 016c 512C      		mov r5,__zero_reg__
 2874 016e 3201      		movw r6,r4
 2875               	.LVL250:
 2876               	.LBB127:
 175:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2877               		.loc 4 175 0
 2878 0170 9801      		movw r18,r16
 2879 0172 205F      		subi r18,-16
 2880 0174 3F4F      		sbci r19,-1
 2881               	.LVL251:
 2882               	.L64:
 2883               	.LBE127:
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2884               		.loc 4 163 0 discriminator 3
 2885 0176 D801      		movw r26,r16
 2886 0178 1C96      		adiw r26,12
 2887 017a 4D91      		ld r20,X+
 2888 017c 5D91      		ld r21,X+
 2889 017e 6D91      		ld r22,X+
 2890 0180 7C91      		ld r23,X
 2891 0182 1F97      		sbiw r26,12+3
 2892 0184 F501      		movw r30,r10
 2893 0186 3496      		adiw r30,4
 2894 0188 4416      		cp r4,r20
 2895 018a 5506      		cpc r5,r21
 2896 018c 6606      		cpc r6,r22
 2897 018e 7706      		cpc r7,r23
 2898 0190 00F4      		brsh .L63
 2899               	.LVL252:
 2900               	.LBB128:
 172:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2901               		.loc 4 172 0 discriminator 2
 2902 0192 DC01      		movw r26,r24
 2903 0194 1596      		adiw r26,5
 2904 0196 FC90      		ld r15,X
 2905 0198 1597      		sbiw r26,5
 2906 019a 1696      		adiw r26,6
 2907 019c 4C91      		ld r20,X
 2908 019e 1697      		sbiw r26,6
 2909 01a0 50E0      		ldi r21,0
 2910 01a2 60E0      		ldi r22,0
 2911 01a4 70E0      		ldi r23,0
 2912 01a6 BA01      		movw r22,r20
 2913 01a8 5527      		clr r21
 2914 01aa 4427      		clr r20
 2915 01ac 5F29      		or r21,r15
 2916 01ae 1496      		adiw r26,4
 2917 01b0 FC90      		ld r15,X
 2918 01b2 1497      		sbiw r26,4
 2919 01b4 4F29      		or r20,r15
 2920 01b6 1796      		adiw r26,7
 2921 01b8 FC90      		ld r15,X
 2922 01ba 7F29      		or r23,r15
 173:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2923               		.loc 4 173 0 discriminator 2
 2924 01bc D801      		movw r26,r16
 2925 01be 5096      		adiw r26,16
 2926 01c0 4D93      		st X+,r20
 2927 01c2 5D93      		st X+,r21
 2928 01c4 6D93      		st X+,r22
 2929 01c6 7C93      		st X,r23
 2930 01c8 5397      		sbiw r26,16+3
 2931               	.LVL253:
 2932 01ca 5F01      		movw r10,r30
 175:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 2933               		.loc 4 175 0 discriminator 2
 2934 01cc AC01      		movw r20,r24
 2935 01ce 4819      		sub r20,r8
 2936 01d0 5909      		sbc r21,r9
 2937 01d2 5496      		adiw r26,20
 2938 01d4 0D90      		ld __tmp_reg__,X+
 2939 01d6 BC91      		ld r27,X
 2940 01d8 A02D      		mov r26,__tmp_reg__
 2941 01da A40F      		add r26,r20
 2942 01dc B51F      		adc r27,r21
 2943 01de 44E0      		ldi r20,lo8(4)
 2944 01e0 F901      		movw r30,r18
 2945               	.LVL254:
 2946               		0:
 2947 01e2 0190      		ld r0,Z+
 2948 01e4 0D92      		st X+,r0
 2949 01e6 4A95      		dec r20
 2950 01e8 01F4      		brne 0b
 2951               	.LBE128:
 163:./ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2952               		.loc 4 163 0 discriminator 2
 2953 01ea BFEF      		ldi r27,-1
 2954 01ec 4B1A      		sub r4,r27
 2955 01ee 5B0A      		sbc r5,r27
 2956 01f0 6B0A      		sbc r6,r27
 2957 01f2 7B0A      		sbc r7,r27
 2958               	.LVL255:
 2959 01f4 0496      		adiw r24,4
 2960 01f6 00C0      		rjmp .L64
 2961               	.LVL256:
 2962               	.L63:
 2963               	.LBE126:
 177:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 2964               		.loc 4 177 0
 2965 01f8 D601      		movw r26,r12
 2966 01fa AA0D      		add r26,r10
 2967 01fc BB1D      		adc r27,r11
 2968 01fe 8C91      		ld r24,X
 2969               	.LVL257:
 179:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 2970               		.loc 4 179 0
 2971 0200 1196      		adiw r26,1
 2972 0202 9C91      		ld r25,X
 2973 0204 1197      		sbiw r26,1
 2974 0206 1296      		adiw r26,2
 2975 0208 8C90      		ld r8,X
 2976 020a 1297      		sbiw r26,2
 2977 020c 912C      		mov r9,__zero_reg__
 2978 020e A12C      		mov r10,__zero_reg__
 2979 0210 B12C      		mov r11,__zero_reg__
 2980 0212 5401      		movw r10,r8
 2981 0214 9924      		clr r9
 2982 0216 8824      		clr r8
 2983 0218 992A      		or r9,r25
 2984 021a 882A      		or r8,r24
 2985               	.LVL258:
 180:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->strings_length);
 2986               		.loc 4 180 0
 2987 021c 1396      		adiw r26,3
 2988 021e 8C91      		ld r24,X
 2989 0220 B82A      		or r11,r24
 181:./ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2990               		.loc 4 181 0
 2991 0222 7F01      		movw r14,r30
 2992               	.LVL259:
 182:./ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2993               		.loc 4 182 0
 2994 0224 F801      		movw r30,r16
 2995               	.LVL260:
 2996 0226 8689      		ldd r24,Z+22
 2997 0228 9789      		ldd r25,Z+23
 2998 022a A08D      		ldd r26,Z+24
 2999 022c B18D      		ldd r27,Z+25
 3000 022e 8815      		cp r24,r8
 3001 0230 9905      		cpc r25,r9
 3002 0232 AA05      		cpc r26,r10
 3003 0234 BB05      		cpc r27,r11
 3004 0236 00F4      		brsh .L65
 183:./ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 3005               		.loc 4 183 0
 3006 0238 B401      		movw r22,r8
 3007 023a 660F      		lsl r22
 3008 023c 771F      		rol r23
 3009 023e 848D      		ldd r24,Z+28
 3010 0240 958D      		ldd r25,Z+29
 3011 0242 0E94 0000 		call realloc
 3012               	.LVL261:
 3013 0246 D801      		movw r26,r16
 3014 0248 5D96      		adiw r26,28+1
 3015 024a 9C93      		st X,r25
 3016 024c 8E93      		st -X,r24
 3017 024e 5C97      		sbiw r26,28
 3018               	.L65:
 184:./ros_lib/rosserial_msgs/RequestParam.h ****       for( uint32_t i = 0; i < strings_length; i++){
 3019               		.loc 4 184 0
 3020 0250 F801      		movw r30,r16
 3021 0252 868A      		std Z+22,r8
 3022 0254 978A      		std Z+23,r9
 3023 0256 A08E      		std Z+24,r10
 3024 0258 B18E      		std Z+25,r11
 3025               	.LVL262:
 3026 025a 212C      		mov r2,__zero_reg__
 3027 025c 312C      		mov r3,__zero_reg__
 3028               	.LBB129:
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3029               		.loc 4 185 0
 3030 025e 812C      		mov r8,__zero_reg__
 3031 0260 912C      		mov r9,__zero_reg__
 3032 0262 5401      		movw r10,r8
 3033               	.LVL263:
 3034               	.LBB130:
 195:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 3035               		.loc 4 195 0
 3036 0264 9801      		movw r18,r16
 3037 0266 265E      		subi r18,-26
 3038 0268 3F4F      		sbci r19,-1
 3039 026a 3A87      		std Y+10,r19
 3040 026c 2987      		std Y+9,r18
 3041               	.LVL264:
 3042               	.L69:
 3043               	.LBE130:
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3044               		.loc 4 185 0 discriminator 1
 3045 026e F801      		movw r30,r16
 3046 0270 8689      		ldd r24,Z+22
 3047 0272 9789      		ldd r25,Z+23
 3048 0274 A08D      		ldd r26,Z+24
 3049 0276 B18D      		ldd r27,Z+25
 3050 0278 8816      		cp r8,r24
 3051 027a 9906      		cpc r9,r25
 3052 027c AA06      		cpc r10,r26
 3053 027e BB06      		cpc r11,r27
 3054 0280 00F0      		brlo .+2
 3055 0282 00C0      		rjmp .L66
 3056               	.LBB132:
 187:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 3057               		.loc 4 187 0
 3058 0284 B601      		movw r22,r12
 3059 0286 6E0D      		add r22,r14
 3060 0288 7F1D      		adc r23,r15
 3061 028a CE01      		movw r24,r28
 3062 028c 0196      		adiw r24,1
 3063 028e 0E94 0000 		call _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
 3064               	.LVL265:
 188:./ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 3065               		.loc 4 188 0
 3066 0292 9701      		movw r18,r14
 3067 0294 2C5F      		subi r18,-4
 3068 0296 3F4F      		sbci r19,-1
 3069 0298 388B      		std Y+16,r19
 3070 029a 2F87      		std Y+15,r18
 3071               	.LVL266:
 3072               	.LBB131:
 189:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3073               		.loc 4 189 0
 3074 029c 4981      		ldd r20,Y+1
 3075 029e 5A81      		ldd r21,Y+2
 3076 02a0 6B81      		ldd r22,Y+3
 3077 02a2 7C81      		ldd r23,Y+4
 3078 02a4 C901      		movw r24,r18
 3079 02a6 330F      		lsl r19
 3080 02a8 AA0B      		sbc r26,r26
 3081 02aa BB0B      		sbc r27,r27
 3082 02ac 2C01      		movw r4,r24
 3083 02ae 3D01      		movw r6,r26
 3084 02b0 440E      		add r4,r20
 3085 02b2 551E      		adc r5,r21
 3086 02b4 661E      		adc r6,r22
 3087 02b6 771E      		adc r7,r23
 3088 02b8 4B86      		std Y+11,r4
 3089 02ba 5C86      		std Y+12,r5
 3090 02bc 6D86      		std Y+13,r6
 3091 02be 7E86      		std Y+14,r7
 3092 02c0 23E0      		ldi r18,3
 3093 02c2 E20E      		add r14,r18
 3094 02c4 F11C      		adc r15,__zero_reg__
 3095               	.LVL267:
 3096 02c6 F601      		movw r30,r12
 3097 02c8 EE0D      		add r30,r14
 3098 02ca FF1D      		adc r31,r15
 3099 02cc 2F85      		ldd r18,Y+15
 3100 02ce 3889      		ldd r19,Y+16
 3101               	.LVL268:
 3102               	.L68:
 189:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3103               		.loc 4 189 0 is_stmt 0 discriminator 3
 3104 02d0 C901      		movw r24,r18
 3105 02d2 A0E0      		ldi r26,0
 3106 02d4 B0E0      		ldi r27,0
 3107 02d6 4B84      		ldd r4,Y+11
 3108 02d8 5C84      		ldd r5,Y+12
 3109 02da 6D84      		ldd r6,Y+13
 3110 02dc 7E84      		ldd r7,Y+14
 3111 02de 8415      		cp r24,r4
 3112 02e0 9505      		cpc r25,r5
 3113 02e2 A605      		cpc r26,r6
 3114 02e4 B705      		cpc r27,r7
 3115 02e6 00F4      		brsh .L67
 190:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 3116               		.loc 4 190 0 is_stmt 1 discriminator 2
 3117 02e8 A181      		ldd r26,Z+1
 3118 02ea A193      		st Z+,r26
 189:./ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3119               		.loc 4 189 0 discriminator 2
 3120 02ec 2F5F      		subi r18,-1
 3121 02ee 3F4F      		sbci r19,-1
 3122               	.LVL269:
 3123 02f0 00C0      		rjmp .L68
 3124               	.L67:
 3125               	.LBE131:
 192:./ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3126               		.loc 4 192 0 discriminator 2
 3127 02f2 6F84      		ldd r6,Y+15
 3128 02f4 7888      		ldd r7,Y+16
 3129 02f6 460D      		add r20,r6
 3130 02f8 571D      		adc r21,r7
 3131 02fa F601      		movw r30,r12
 3132 02fc E40F      		add r30,r20
 3133 02fe F51F      		adc r31,r21
 3134 0300 3197      		sbiw r30,1
 3135 0302 1082      		st Z,__zero_reg__
 193:./ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3136               		.loc 4 193 0 discriminator 2
 3137 0304 C301      		movw r24,r6
 3138 0306 0197      		sbiw r24,1
 3139 0308 8C0D      		add r24,r12
 3140 030a 9D1D      		adc r25,r13
 3141 030c D801      		movw r26,r16
 3142 030e 5B96      		adiw r26,26+1
 3143 0310 9C93      		st X,r25
 3144 0312 8E93      		st -X,r24
 3145 0314 5A97      		sbiw r26,26
 194:./ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 3146               		.loc 4 194 0 discriminator 2
 3147 0316 7A01      		movw r14,r20
 3148               	.LVL270:
 195:./ros_lib/rosserial_msgs/RequestParam.h ****       }
 3149               		.loc 4 195 0 discriminator 2
 3150 0318 5C96      		adiw r26,28
 3151 031a ED91      		ld r30,X+
 3152 031c FC91      		ld r31,X
 3153 031e 5D97      		sbiw r26,28+1
 3154 0320 E20D      		add r30,r2
 3155 0322 F31D      		adc r31,r3
 3156 0324 A985      		ldd r26,Y+9
 3157 0326 BA85      		ldd r27,Y+10
 3158 0328 8D91      		ld r24,X+
 3159 032a 9C91      		ld r25,X
 3160 032c 9183      		std Z+1,r25
 3161 032e 8083      		st Z,r24
 3162               	.LBE132:
 185:./ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3163               		.loc 4 185 0 discriminator 2
 3164 0330 BFEF      		ldi r27,-1
 3165 0332 8B1A      		sub r8,r27
 3166 0334 9B0A      		sbc r9,r27
 3167 0336 AB0A      		sbc r10,r27
 3168 0338 BB0A      		sbc r11,r27
 3169               	.LVL271:
 3170 033a E2E0      		ldi r30,2
 3171 033c 2E0E      		add r2,r30
 3172 033e 311C      		adc r3,__zero_reg__
 3173 0340 00C0      		rjmp .L69
 3174               	.LVL272:
 3175               	.L66:
 3176               	.LBE129:
 198:./ros_lib/rosserial_msgs/RequestParam.h **** 
 3177               		.loc 4 198 0
 3178 0342 C701      		movw r24,r14
 3179               	/* epilogue start */
 3180 0344 6096      		adiw r28,16
 3181 0346 0FB6      		in __tmp_reg__,__SREG__
 3182 0348 F894      		cli
 3183 034a DEBF      		out __SP_H__,r29
 3184 034c 0FBE      		out __SREG__,__tmp_reg__
 3185 034e CDBF      		out __SP_L__,r28
 3186 0350 DF91      		pop r29
 3187 0352 CF91      		pop r28
 3188 0354 1F91      		pop r17
 3189 0356 0F91      		pop r16
 3190               	.LVL273:
 3191 0358 FF90      		pop r15
 3192 035a EF90      		pop r14
 3193               	.LVL274:
 3194 035c DF90      		pop r13
 3195 035e CF90      		pop r12
 3196               	.LVL275:
 3197 0360 BF90      		pop r11
 3198 0362 AF90      		pop r10
 3199 0364 9F90      		pop r9
 3200 0366 8F90      		pop r8
 3201               	.LVL276:
 3202 0368 7F90      		pop r7
 3203 036a 6F90      		pop r6
 3204 036c 5F90      		pop r5
 3205 036e 4F90      		pop r4
 3206 0370 3F90      		pop r3
 3207 0372 2F90      		pop r2
 3208 0374 0895      		ret
 3209               		.cfi_endproc
 3210               	.LFE62:
 3212               		.section	.text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3213               		.weak	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3215               	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 3216               	.LFB164:
 354:./ros_lib/ros/node_handle.h ****   {
 3217               		.loc 7 354 0
 3218               		.cfi_startproc
 3219               	.LVL277:
 3220 0000 0F93      		push r16
 3221               	.LCFI106:
 3222               		.cfi_def_cfa_offset 4
 3223               		.cfi_offset 16, -3
 3224 0002 1F93      		push r17
 3225               	.LCFI107:
 3226               		.cfi_def_cfa_offset 5
 3227               		.cfi_offset 17, -4
 3228 0004 CF93      		push r28
 3229               	.LCFI108:
 3230               		.cfi_def_cfa_offset 6
 3231               		.cfi_offset 28, -5
 3232 0006 DF93      		push r29
 3233               	.LCFI109:
 3234               		.cfi_def_cfa_offset 7
 3235               		.cfi_offset 29, -6
 3236 0008 CDB7      		in r28,__SP_L__
 3237 000a DEB7      		in r29,__SP_H__
 3238               	.LCFI110:
 3239               		.cfi_def_cfa_register 28
 3240 000c 2A97      		sbiw r28,10
 3241               	.LCFI111:
 3242               		.cfi_def_cfa_offset 17
 3243 000e 0FB6      		in __tmp_reg__,__SREG__
 3244 0010 F894      		cli
 3245 0012 DEBF      		out __SP_H__,r29
 3246 0014 0FBE      		out __SREG__,__tmp_reg__
 3247 0016 CDBF      		out __SP_L__,r28
 3248               	/* prologue: function */
 3249               	/* frame size = 10 */
 3250               	/* stack size = 14 */
 3251               	.L__stack_usage = 14
 3252 0018 8C01      		movw r16,r24
 3253               	.LVL278:
 3254               	.LBB142:
 3255               	.LBB143:
  20:./ros_lib/std_msgs/Time.h ****     {
 3256               		.loc 1 20 0
 3257 001a 80E0      		ldi r24,lo8(_ZTVN8std_msgs4TimeE+4)
 3258 001c 90E0      		ldi r25,hi8(_ZTVN8std_msgs4TimeE+4)
 3259               	.LVL279:
 3260 001e 9A83      		std Y+2,r25
 3261 0020 8983      		std Y+1,r24
 3262               	.LVL280:
 3263               	.LBB144:
 3264               	.LBB145:
 3265               		.file 12 "./ros_lib/ros/time.h"
   1:./ros_lib/ros/time.h **** /*
   2:./ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./ros_lib/ros/time.h ****  *
   4:./ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./ros_lib/ros/time.h ****  * All rights reserved.
   6:./ros_lib/ros/time.h ****  *
   7:./ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./ros_lib/ros/time.h ****  * are met:
  10:./ros_lib/ros/time.h ****  *
  11:./ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./ros_lib/ros/time.h ****  *    with the distribution.
  17:./ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./ros_lib/ros/time.h ****  *
  21:./ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./ros_lib/ros/time.h ****  */
  34:./ros_lib/ros/time.h **** 
  35:./ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./ros_lib/ros/time.h **** 
  38:./ros_lib/ros/time.h **** #include "ros/duration.h"
  39:./ros_lib/ros/time.h **** #include <math.h>
  40:./ros_lib/ros/time.h **** #include <stdint.h>
  41:./ros_lib/ros/time.h **** 
  42:./ros_lib/ros/time.h **** namespace ros
  43:./ros_lib/ros/time.h **** {
  44:./ros_lib/ros/time.h **** void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  45:./ros_lib/ros/time.h **** 
  46:./ros_lib/ros/time.h **** class Time
  47:./ros_lib/ros/time.h **** {
  48:./ros_lib/ros/time.h **** public:
  49:./ros_lib/ros/time.h ****   uint32_t sec, nsec;
  50:./ros_lib/ros/time.h **** 
  51:./ros_lib/ros/time.h ****   Time() : sec(0), nsec(0) {}
 3266               		.loc 12 51 0
 3267 0022 1B82      		std Y+3,__zero_reg__
 3268 0024 1C82      		std Y+4,__zero_reg__
 3269 0026 1D82      		std Y+5,__zero_reg__
 3270 0028 1E82      		std Y+6,__zero_reg__
 3271 002a 1F82      		std Y+7,__zero_reg__
 3272 002c 1886      		std Y+8,__zero_reg__
 3273 002e 1986      		std Y+9,__zero_reg__
 3274 0030 1A86      		std Y+10,__zero_reg__
 3275               	.LVL281:
 3276               	.LBE145:
 3277               	.LBE144:
 3278               	.LBE143:
 3279               	.LBE142:
 357:./ros_lib/ros/node_handle.h ****     rt_time = hardware_.time();
 3280               		.loc 7 357 0
 3281 0032 D801      		movw r26,r16
 3282 0034 ED91      		ld r30,X+
 3283 0036 FC91      		ld r31,X
 3284 0038 0190      		ld __tmp_reg__,Z+
 3285 003a F081      		ld r31,Z
 3286 003c E02D      		mov r30,__tmp_reg__
 3287 003e AE01      		movw r20,r28
 3288 0040 4F5F      		subi r20,-1
 3289 0042 5F4F      		sbci r21,-1
 3290 0044 6AE0      		ldi r22,lo8(10)
 3291 0046 70E0      		ldi r23,0
 3292 0048 C801      		movw r24,r16
 3293 004a 1995      		eicall
 3294               	.LVL282:
 3295               	.LBB146:
 3296               	.LBB147:
  40:Atmega2560Hardware.h ****       }
  41:Atmega2560Hardware.h ****     }
  42:Atmega2560Hardware.h **** 
  43:Atmega2560Hardware.h **** 
  44:Atmega2560Hardware.h ****     // Returns milliseconds since start of program
  45:Atmega2560Hardware.h ****     unsigned long time()
  46:Atmega2560Hardware.h ****     {
  47:Atmega2560Hardware.h ****       return avr_time_now();
 3297               		.loc 9 47 0
 3298 004c 0E94 0000 		call avr_time_now
 3299               	.LVL283:
 3300               	.LBE147:
 3301               	.LBE146:
 358:./ros_lib/ros/node_handle.h ****   }
 3302               		.loc 7 358 0
 3303 0050 F801      		movw r30,r16
 3304 0052 6383      		std Z+3,r22
 3305 0054 7483      		std Z+4,r23
 3306 0056 8583      		std Z+5,r24
 3307 0058 9683      		std Z+6,r25
 3308               	/* epilogue start */
 359:./ros_lib/ros/node_handle.h **** 
 3309               		.loc 7 359 0
 3310 005a 2A96      		adiw r28,10
 3311 005c 0FB6      		in __tmp_reg__,__SREG__
 3312 005e F894      		cli
 3313 0060 DEBF      		out __SP_H__,r29
 3314 0062 0FBE      		out __SREG__,__tmp_reg__
 3315 0064 CDBF      		out __SP_L__,r28
 3316 0066 DF91      		pop r29
 3317 0068 CF91      		pop r28
 3318 006a 1F91      		pop r17
 3319 006c 0F91      		pop r16
 3320               	.LVL284:
 3321 006e 0895      		ret
 3322               		.cfi_endproc
 3323               	.LFE164:
 3325               		.section	.rodata.str1.1
 3326               	.LC10:
 3327 012e 00        		.string	""
 3328               		.section	.text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3329               		.weak	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3331               	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 3332               	.LFB165:
 445:./ros_lib/ros/node_handle.h ****   {
 3333               		.loc 7 445 0
 3334               		.cfi_startproc
 3335               	.LVL285:
 3336 0000 4F92      		push r4
 3337               	.LCFI112:
 3338               		.cfi_def_cfa_offset 4
 3339               		.cfi_offset 4, -3
 3340 0002 5F92      		push r5
 3341               	.LCFI113:
 3342               		.cfi_def_cfa_offset 5
 3343               		.cfi_offset 5, -4
 3344 0004 6F92      		push r6
 3345               	.LCFI114:
 3346               		.cfi_def_cfa_offset 6
 3347               		.cfi_offset 6, -5
 3348 0006 7F92      		push r7
 3349               	.LCFI115:
 3350               		.cfi_def_cfa_offset 7
 3351               		.cfi_offset 7, -6
 3352 0008 AF92      		push r10
 3353               	.LCFI116:
 3354               		.cfi_def_cfa_offset 8
 3355               		.cfi_offset 10, -7
 3356 000a BF92      		push r11
 3357               	.LCFI117:
 3358               		.cfi_def_cfa_offset 9
 3359               		.cfi_offset 11, -8
 3360 000c CF92      		push r12
 3361               	.LCFI118:
 3362               		.cfi_def_cfa_offset 10
 3363               		.cfi_offset 12, -9
 3364 000e DF92      		push r13
 3365               	.LCFI119:
 3366               		.cfi_def_cfa_offset 11
 3367               		.cfi_offset 13, -10
 3368 0010 EF92      		push r14
 3369               	.LCFI120:
 3370               		.cfi_def_cfa_offset 12
 3371               		.cfi_offset 14, -11
 3372 0012 FF92      		push r15
 3373               	.LCFI121:
 3374               		.cfi_def_cfa_offset 13
 3375               		.cfi_offset 15, -12
 3376 0014 0F93      		push r16
 3377               	.LCFI122:
 3378               		.cfi_def_cfa_offset 14
 3379               		.cfi_offset 16, -13
 3380 0016 1F93      		push r17
 3381               	.LCFI123:
 3382               		.cfi_def_cfa_offset 15
 3383               		.cfi_offset 17, -14
 3384 0018 CF93      		push r28
 3385               	.LCFI124:
 3386               		.cfi_def_cfa_offset 16
 3387               		.cfi_offset 28, -15
 3388 001a DF93      		push r29
 3389               	.LCFI125:
 3390               		.cfi_def_cfa_offset 17
 3391               		.cfi_offset 29, -16
 3392 001c CDB7      		in r28,__SP_L__
 3393 001e DEB7      		in r29,__SP_H__
 3394               	.LCFI126:
 3395               		.cfi_def_cfa_register 28
 3396 0020 2E97      		sbiw r28,14
 3397               	.LCFI127:
 3398               		.cfi_def_cfa_offset 31
 3399 0022 0FB6      		in __tmp_reg__,__SREG__
 3400 0024 F894      		cli
 3401 0026 DEBF      		out __SP_H__,r29
 3402 0028 0FBE      		out __SREG__,__tmp_reg__
 3403 002a CDBF      		out __SP_L__,r28
 3404               	/* prologue: function */
 3405               	/* frame size = 14 */
 3406               	/* stack size = 28 */
 3407               	.L__stack_usage = 28
 3408 002c 8C01      		movw r16,r24
 3409               	.LVL286:
 3410               	.LBB153:
 3411               	.LBB154:
  39:./ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3412               		.loc 2 39 0
 3413 002e 80E0      		ldi r24,lo8(_ZTVN14rosserial_msgs9TopicInfoE+4)
 3414 0030 90E0      		ldi r25,hi8(_ZTVN14rosserial_msgs9TopicInfoE+4)
 3415               	.LVL287:
 3416 0032 9A83      		std Y+2,r25
 3417 0034 8983      		std Y+1,r24
 3418 0036 1C82      		std Y+4,__zero_reg__
 3419 0038 1B82      		std Y+3,__zero_reg__
 3420 003a 80E0      		ldi r24,lo8(.LC10)
 3421 003c 90E0      		ldi r25,hi8(.LC10)
 3422 003e 9E83      		std Y+6,r25
 3423 0040 8D83      		std Y+5,r24
 3424 0042 9887      		std Y+8,r25
 3425 0044 8F83      		std Y+7,r24
 3426 0046 9A87      		std Y+10,r25
 3427 0048 8987      		std Y+9,r24
 3428 004a 1B86      		std Y+11,__zero_reg__
 3429 004c 1C86      		std Y+12,__zero_reg__
 3430 004e 1D86      		std Y+13,__zero_reg__
 3431 0050 1E86      		std Y+14,__zero_reg__
 3432               	.LVL288:
 3433 0052 6801      		movw r12,r16
 3434 0054 8DEE      		ldi r24,-19
 3435 0056 C81A      		sub r12,r24
 3436 0058 8BEF      		ldi r24,-5
 3437 005a D80A      		sbc r13,r24
 3438 005c 7801      		movw r14,r16
 3439 005e ABEB      		ldi r26,-69
 3440 0060 EA1A      		sub r14,r26
 3441 0062 ABEF      		ldi r26,-5
 3442 0064 FA0A      		sbc r15,r26
 3443               	.LBE154:
 3444               	.LBE153:
 457:./ros_lib/ros/node_handle.h ****         publish(publishers[i]->getEndpointType(), &ti);
 3445               		.loc 7 457 0
 3446 0066 412C      		mov r4,__zero_reg__
 3447 0068 92E0      		ldi r25,lo8(2)
 3448 006a 592E      		mov r5,r25
 3449 006c 612C      		mov r6,__zero_reg__
 3450 006e 712C      		mov r7,__zero_reg__
 3451               	.LVL289:
 3452               	.L73:
 451:./ros_lib/ros/node_handle.h ****       {
 3453               		.loc 7 451 0
 3454 0070 D601      		movw r26,r12
 3455 0072 ED91      		ld r30,X+
 3456 0074 FC91      		ld r31,X
 3457 0076 3097      		sbiw r30,0
 3458 0078 01F0      		breq .L72
 453:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) publishers[i]->topic_;
 3459               		.loc 7 453 0
 3460 007a 8481      		ldd r24,Z+4
 3461 007c 9581      		ldd r25,Z+5
 3462 007e 9C83      		std Y+4,r25
 3463 0080 8B83      		std Y+3,r24
 454:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) publishers[i]->msg_->getType();
 3464               		.loc 7 454 0
 3465 0082 8081      		ld r24,Z
 3466 0084 9181      		ldd r25,Z+1
 3467 0086 9E83      		std Y+6,r25
 3468 0088 8D83      		std Y+5,r24
 455:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3469               		.loc 7 455 0
 3470 008a 8281      		ldd r24,Z+2
 3471 008c 9381      		ldd r25,Z+3
 3472 008e DC01      		movw r26,r24
 3473 0090 ED91      		ld r30,X+
 3474 0092 FC91      		ld r31,X
 3475 0094 0480      		ldd __tmp_reg__,Z+4
 3476 0096 F581      		ldd r31,Z+5
 3477 0098 E02D      		mov r30,__tmp_reg__
 3478 009a 1995      		eicall
 3479               	.LVL290:
 3480 009c 9887      		std Y+8,r25
 3481 009e 8F83      		std Y+7,r24
 456:./ros_lib/ros/node_handle.h ****         ti.buffer_size = OUTPUT_SIZE;
 3482               		.loc 7 456 0
 3483 00a0 D601      		movw r26,r12
 3484 00a2 ED91      		ld r30,X+
 3485 00a4 FC91      		ld r31,X
 3486 00a6 8281      		ldd r24,Z+2
 3487 00a8 9381      		ldd r25,Z+3
 3488 00aa DC01      		movw r26,r24
 3489 00ac ED91      		ld r30,X+
 3490 00ae FC91      		ld r31,X
 3491 00b0 0680      		ldd __tmp_reg__,Z+6
 3492 00b2 F781      		ldd r31,Z+7
 3493 00b4 E02D      		mov r30,__tmp_reg__
 3494 00b6 1995      		eicall
 3495               	.LVL291:
 3496 00b8 9A87      		std Y+10,r25
 3497 00ba 8987      		std Y+9,r24
 457:./ros_lib/ros/node_handle.h ****         publish(publishers[i]->getEndpointType(), &ti);
 3498               		.loc 7 457 0
 3499 00bc 4B86      		std Y+11,r4
 3500 00be 5C86      		std Y+12,r5
 3501 00c0 6D86      		std Y+13,r6
 3502 00c2 7E86      		std Y+14,r7
 3503               	.LVL292:
 3504 00c4 D601      		movw r26,r12
 3505 00c6 ED91      		ld r30,X+
 3506 00c8 FC91      		ld r31,X
 458:./ros_lib/ros/node_handle.h ****       }
 3507               		.loc 7 458 0
 3508 00ca 6085      		ldd r22,Z+8
 3509 00cc 7185      		ldd r23,Z+9
 3510 00ce D801      		movw r26,r16
 3511 00d0 ED91      		ld r30,X+
 3512 00d2 FC91      		ld r31,X
 3513 00d4 0190      		ld __tmp_reg__,Z+
 3514 00d6 F081      		ld r31,Z
 3515 00d8 E02D      		mov r30,__tmp_reg__
 3516 00da AE01      		movw r20,r28
 3517 00dc 4F5F      		subi r20,-1
 3518 00de 5F4F      		sbci r21,-1
 3519 00e0 C801      		movw r24,r16
 3520 00e2 1995      		eicall
 3521               	.LVL293:
 3522               	.L72:
 3523 00e4 B2E0      		ldi r27,2
 3524 00e6 CB0E      		add r12,r27
 3525 00e8 D11C      		adc r13,__zero_reg__
 449:./ros_lib/ros/node_handle.h ****     {
 3526               		.loc 7 449 0 discriminator 2
 3527 00ea CE14      		cp r12,r14
 3528 00ec DF04      		cpc r13,r15
 3529 00ee 01F0      		breq .+2
 3530 00f0 00C0      		rjmp .L73
 3531 00f2 6801      		movw r12,r16
 3532 00f4 E9E8      		ldi r30,-119
 3533 00f6 CE1A      		sub r12,r30
 3534 00f8 EBEF      		ldi r30,-5
 3535 00fa DE0A      		sbc r13,r30
 469:./ros_lib/ros/node_handle.h ****         publish(subscribers[i]->getEndpointType(), &ti);
 3536               		.loc 7 469 0
 3537 00fc 412C      		mov r4,__zero_reg__
 3538 00fe 82E0      		ldi r24,lo8(2)
 3539 0100 582E      		mov r5,r24
 3540 0102 612C      		mov r6,__zero_reg__
 3541 0104 712C      		mov r7,__zero_reg__
 3542               	.L75:
 463:./ros_lib/ros/node_handle.h ****       {
 3543               		.loc 7 463 0
 3544 0106 F701      		movw r30,r14
 3545 0108 A081      		ld r26,Z
 3546 010a B181      		ldd r27,Z+1
 3547 010c 1097      		sbiw r26,0
 3548 010e 01F0      		breq .L74
 465:./ros_lib/ros/node_handle.h ****         ti.topic_name = (char *) subscribers[i]->topic_;
 3549               		.loc 7 465 0
 3550 0110 1296      		adiw r26,2
 3551 0112 8D91      		ld r24,X+
 3552 0114 9C91      		ld r25,X
 3553 0116 1397      		sbiw r26,2+1
 3554 0118 9C83      		std Y+4,r25
 3555 011a 8B83      		std Y+3,r24
 466:./ros_lib/ros/node_handle.h ****         ti.message_type = (char *) subscribers[i]->getMsgType();
 3556               		.loc 7 466 0
 3557 011c 1496      		adiw r26,4
 3558 011e 8D91      		ld r24,X+
 3559 0120 9C91      		ld r25,X
 3560 0122 1597      		sbiw r26,4+1
 3561 0124 9E83      		std Y+6,r25
 3562 0126 8D83      		std Y+5,r24
 467:./ros_lib/ros/node_handle.h ****         ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 3563               		.loc 7 467 0
 3564 0128 ED91      		ld r30,X+
 3565 012a FC91      		ld r31,X
 3566 012c 1197      		sbiw r26,1
 3567 012e 0480      		ldd __tmp_reg__,Z+4
 3568 0130 F581      		ldd r31,Z+5
 3569 0132 E02D      		mov r30,__tmp_reg__
 3570 0134 CD01      		movw r24,r26
 3571 0136 1995      		eicall
 3572               	.LVL294:
 3573 0138 9887      		std Y+8,r25
 3574 013a 8F83      		std Y+7,r24
 468:./ros_lib/ros/node_handle.h ****         ti.buffer_size = INPUT_SIZE;
 3575               		.loc 7 468 0
 3576 013c D701      		movw r26,r14
 3577 013e 8D91      		ld r24,X+
 3578 0140 9C91      		ld r25,X
 3579 0142 DC01      		movw r26,r24
 3580 0144 ED91      		ld r30,X+
 3581 0146 FC91      		ld r31,X
 3582 0148 0680      		ldd __tmp_reg__,Z+6
 3583 014a F781      		ldd r31,Z+7
 3584 014c E02D      		mov r30,__tmp_reg__
 3585 014e 1995      		eicall
 3586               	.LVL295:
 3587 0150 9A87      		std Y+10,r25
 3588 0152 8987      		std Y+9,r24
 469:./ros_lib/ros/node_handle.h ****         publish(subscribers[i]->getEndpointType(), &ti);
 3589               		.loc 7 469 0
 3590 0154 4B86      		std Y+11,r4
 3591 0156 5C86      		std Y+12,r5
 3592 0158 6D86      		std Y+13,r6
 3593 015a 7E86      		std Y+14,r7
 470:./ros_lib/ros/node_handle.h ****       }
 3594               		.loc 7 470 0
 3595 015c D801      		movw r26,r16
 3596 015e ED91      		ld r30,X+
 3597 0160 FC91      		ld r31,X
 3598 0162 A080      		ld r10,Z
 3599 0164 B180      		ldd r11,Z+1
 3600 0166 F701      		movw r30,r14
 3601 0168 8081      		ld r24,Z
 3602 016a 9181      		ldd r25,Z+1
 3603 016c DC01      		movw r26,r24
 3604 016e ED91      		ld r30,X+
 3605 0170 FC91      		ld r31,X
 3606 0172 0280      		ldd __tmp_reg__,Z+2
 3607 0174 F381      		ldd r31,Z+3
 3608 0176 E02D      		mov r30,__tmp_reg__
 3609 0178 1995      		eicall
 3610               	.LVL296:
 3611 017a AE01      		movw r20,r28
 3612 017c 4F5F      		subi r20,-1
 3613 017e 5F4F      		sbci r21,-1
 3614 0180 BC01      		movw r22,r24
 3615 0182 C801      		movw r24,r16
 3616 0184 F501      		movw r30,r10
 3617 0186 1995      		eicall
 3618               	.LVL297:
 3619               	.L74:
 3620 0188 F2E0      		ldi r31,2
 3621 018a EF0E      		add r14,r31
 3622 018c F11C      		adc r15,__zero_reg__
 461:./ros_lib/ros/node_handle.h ****     {
 3623               		.loc 7 461 0 discriminator 2
 3624 018e CE14      		cp r12,r14
 3625 0190 DF04      		cpc r13,r15
 3626 0192 01F0      		breq .+2
 3627 0194 00C0      		rjmp .L75
 473:./ros_lib/ros/node_handle.h ****   }
 3628               		.loc 7 473 0
 3629 0196 F801      		movw r30,r16
 3630 0198 EF57      		subi r30,127
 3631 019a FB4F      		sbci r31,-5
 3632 019c 81E0      		ldi r24,lo8(1)
 3633 019e 8083      		st Z,r24
 3634               	/* epilogue start */
 474:./ros_lib/ros/node_handle.h **** 
 3635               		.loc 7 474 0
 3636 01a0 2E96      		adiw r28,14
 3637 01a2 0FB6      		in __tmp_reg__,__SREG__
 3638 01a4 F894      		cli
 3639 01a6 DEBF      		out __SP_H__,r29
 3640 01a8 0FBE      		out __SREG__,__tmp_reg__
 3641 01aa CDBF      		out __SP_L__,r28
 3642 01ac DF91      		pop r29
 3643 01ae CF91      		pop r28
 3644 01b0 1F91      		pop r17
 3645 01b2 0F91      		pop r16
 3646               	.LVL298:
 3647 01b4 FF90      		pop r15
 3648 01b6 EF90      		pop r14
 3649 01b8 DF90      		pop r13
 3650 01ba CF90      		pop r12
 3651               	.LVL299:
 3652 01bc BF90      		pop r11
 3653 01be AF90      		pop r10
 3654 01c0 7F90      		pop r7
 3655 01c2 6F90      		pop r6
 3656 01c4 5F90      		pop r5
 3657 01c6 4F90      		pop r4
 3658 01c8 0895      		ret
 3659               		.cfi_endproc
 3660               	.LFE165:
 3662               		.section	.text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",
 3663               		.weak	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3665               	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 3666               	.LFB166:
 361:./ros_lib/ros/node_handle.h ****   {
 3667               		.loc 7 361 0
 3668               		.cfi_startproc
 3669               	.LVL300:
 3670 0000 8F92      		push r8
 3671               	.LCFI128:
 3672               		.cfi_def_cfa_offset 4
 3673               		.cfi_offset 8, -3
 3674 0002 9F92      		push r9
 3675               	.LCFI129:
 3676               		.cfi_def_cfa_offset 5
 3677               		.cfi_offset 9, -4
 3678 0004 AF92      		push r10
 3679               	.LCFI130:
 3680               		.cfi_def_cfa_offset 6
 3681               		.cfi_offset 10, -5
 3682 0006 BF92      		push r11
 3683               	.LCFI131:
 3684               		.cfi_def_cfa_offset 7
 3685               		.cfi_offset 11, -6
 3686 0008 CF92      		push r12
 3687               	.LCFI132:
 3688               		.cfi_def_cfa_offset 8
 3689               		.cfi_offset 12, -7
 3690 000a DF92      		push r13
 3691               	.LCFI133:
 3692               		.cfi_def_cfa_offset 9
 3693               		.cfi_offset 13, -8
 3694 000c EF92      		push r14
 3695               	.LCFI134:
 3696               		.cfi_def_cfa_offset 10
 3697               		.cfi_offset 14, -9
 3698 000e FF92      		push r15
 3699               	.LCFI135:
 3700               		.cfi_def_cfa_offset 11
 3701               		.cfi_offset 15, -10
 3702 0010 0F93      		push r16
 3703               	.LCFI136:
 3704               		.cfi_def_cfa_offset 12
 3705               		.cfi_offset 16, -11
 3706 0012 1F93      		push r17
 3707               	.LCFI137:
 3708               		.cfi_def_cfa_offset 13
 3709               		.cfi_offset 17, -12
 3710 0014 CF93      		push r28
 3711               	.LCFI138:
 3712               		.cfi_def_cfa_offset 14
 3713               		.cfi_offset 28, -13
 3714 0016 DF93      		push r29
 3715               	.LCFI139:
 3716               		.cfi_def_cfa_offset 15
 3717               		.cfi_offset 29, -14
 3718 0018 CDB7      		in r28,__SP_L__
 3719 001a DEB7      		in r29,__SP_H__
 3720               	.LCFI140:
 3721               		.cfi_def_cfa_register 28
 3722 001c 2A97      		sbiw r28,10
 3723               	.LCFI141:
 3724               		.cfi_def_cfa_offset 25
 3725 001e 0FB6      		in __tmp_reg__,__SREG__
 3726 0020 F894      		cli
 3727 0022 DEBF      		out __SP_H__,r29
 3728 0024 0FBE      		out __SREG__,__tmp_reg__
 3729 0026 CDBF      		out __SP_L__,r28
 3730               	/* prologue: function */
 3731               	/* frame size = 10 */
 3732               	/* stack size = 22 */
 3733               	.L__stack_usage = 22
 3734 0028 8C01      		movw r16,r24
 3735 002a 5B01      		movw r10,r22
 3736               	.LVL301:
 3737               	.LBB170:
 3738               	.LBB171:
  20:./ros_lib/std_msgs/Time.h ****     {
 3739               		.loc 1 20 0
 3740 002c 80E0      		ldi r24,lo8(_ZTVN8std_msgs4TimeE+4)
 3741 002e 90E0      		ldi r25,hi8(_ZTVN8std_msgs4TimeE+4)
 3742               	.LVL302:
 3743 0030 9A83      		std Y+2,r25
 3744 0032 8983      		std Y+1,r24
 3745               	.LVL303:
 3746               	.LBB172:
 3747               	.LBB173:
 3748               		.loc 12 51 0
 3749 0034 1B82      		std Y+3,__zero_reg__
 3750 0036 1C82      		std Y+4,__zero_reg__
 3751 0038 1D82      		std Y+5,__zero_reg__
 3752 003a 1E82      		std Y+6,__zero_reg__
 3753 003c 1F82      		std Y+7,__zero_reg__
 3754 003e 1886      		std Y+8,__zero_reg__
 3755 0040 1986      		std Y+9,__zero_reg__
 3756 0042 1A86      		std Y+10,__zero_reg__
 3757               	.LVL304:
 3758               	.LBE173:
 3759               	.LBE172:
 3760               	.LBE171:
 3761               	.LBE170:
 3762               	.LBB174:
 3763               	.LBB175:
 3764               		.loc 9 47 0
 3765 0044 0E94 0000 		call avr_time_now
 3766               	.LVL305:
 3767               	.LBE175:
 3768               	.LBE174:
 364:./ros_lib/ros/node_handle.h **** 
 3769               		.loc 7 364 0
 3770 0048 F801      		movw r30,r16
 3771 004a C380      		ldd r12,Z+3
 3772 004c D480      		ldd r13,Z+4
 3773 004e E580      		ldd r14,Z+5
 3774 0050 F680      		ldd r15,Z+6
 3775 0052 9B01      		movw r18,r22
 3776 0054 AC01      		movw r20,r24
 3777 0056 2C19      		sub r18,r12
 3778 0058 3D09      		sbc r19,r13
 3779 005a 4E09      		sbc r20,r14
 3780 005c 5F09      		sbc r21,r15
 3781 005e 6901      		movw r12,r18
 3782 0060 7A01      		movw r14,r20
 3783               	.LVL306:
 366:./ros_lib/ros/node_handle.h ****     t.data.sec += offset / 1000;
 3784               		.loc 7 366 0
 3785 0062 B501      		movw r22,r10
 3786 0064 CE01      		movw r24,r28
 3787 0066 0196      		adiw r24,1
 3788 0068 0E94 0000 		call _ZN8std_msgs4Time11deserializeEPh
 3789               	.LVL307:
 367:./ros_lib/ros/node_handle.h ****     t.data.nsec += (offset % 1000) * 1000000UL;
 3790               		.loc 7 367 0
 3791 006c 88EE      		ldi r24,lo8(-24)
 3792 006e 882E      		mov r8,r24
 3793 0070 83E0      		ldi r24,lo8(3)
 3794 0072 982E      		mov r9,r24
 3795 0074 A12C      		mov r10,__zero_reg__
 3796 0076 B12C      		mov r11,__zero_reg__
 3797 0078 C701      		movw r24,r14
 3798 007a B601      		movw r22,r12
 3799 007c A501      		movw r20,r10
 3800 007e 9401      		movw r18,r8
 3801 0080 0E94 0000 		call __udivmodsi4
 3802 0084 CB80      		ldd r12,Y+3
 3803 0086 DC80      		ldd r13,Y+4
 3804 0088 ED80      		ldd r14,Y+5
 3805 008a FE80      		ldd r15,Y+6
 3806               	.LVL308:
 3807 008c C20E      		add r12,r18
 3808 008e D31E      		adc r13,r19
 3809 0090 E41E      		adc r14,r20
 3810 0092 F51E      		adc r15,r21
 3811 0094 CB82      		std Y+3,r12
 3812 0096 DC82      		std Y+4,r13
 3813 0098 ED82      		std Y+5,r14
 3814 009a FE82      		std Y+6,r15
 368:./ros_lib/ros/node_handle.h **** 
 3815               		.loc 7 368 0
 3816 009c 9B01      		movw r18,r22
 3817 009e AC01      		movw r20,r24
 3818 00a0 60E4      		ldi r22,lo8(64)
 3819 00a2 72E4      		ldi r23,lo8(66)
 3820 00a4 8FE0      		ldi r24,lo8(15)
 3821 00a6 90E0      		ldi r25,0
 3822 00a8 0E94 0000 		call __mulsi3
 3823 00ac CF80      		ldd r12,Y+7
 3824 00ae D884      		ldd r13,Y+8
 3825 00b0 E984      		ldd r14,Y+9
 3826 00b2 FA84      		ldd r15,Y+10
 3827 00b4 DC01      		movw r26,r24
 3828 00b6 CB01      		movw r24,r22
 3829 00b8 8C0D      		add r24,r12
 3830 00ba 9D1D      		adc r25,r13
 3831 00bc AE1D      		adc r26,r14
 3832 00be BF1D      		adc r27,r15
 3833 00c0 8F83      		std Y+7,r24
 3834 00c2 9887      		std Y+8,r25
 3835 00c4 A987      		std Y+9,r26
 3836 00c6 BA87      		std Y+10,r27
 3837               	.LVL309:
 3838               	.LBB176:
 3839               	.LBB177:
 3840               	.LBB178:
 3841               	.LBB179:
 3842               		.loc 9 47 0
 3843 00c8 0E94 0000 		call avr_time_now
 3844               	.LVL310:
 3845               	.LBE179:
 3846               	.LBE178:
 387:./ros_lib/ros/node_handle.h ****     nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 3847               		.loc 7 387 0
 3848 00cc CB80      		ldd r12,Y+3
 3849 00ce DC80      		ldd r13,Y+4
 3850 00d0 ED80      		ldd r14,Y+5
 3851 00d2 FE80      		ldd r15,Y+6
 3852 00d4 31E0      		ldi r19,1
 3853 00d6 C31A      		sub r12,r19
 3854 00d8 D108      		sbc r13,__zero_reg__
 3855 00da E108      		sbc r14,__zero_reg__
 3856 00dc F108      		sbc r15,__zero_reg__
 3857 00de A501      		movw r20,r10
 3858 00e0 9401      		movw r18,r8
 3859 00e2 0E94 0000 		call __udivmodsi4
 3860 00e6 C21A      		sub r12,r18
 3861 00e8 D30A      		sbc r13,r19
 3862 00ea E40A      		sbc r14,r20
 3863 00ec F50A      		sbc r15,r21
 3864 00ee F801      		movw r30,r16
 3865 00f0 C782      		std Z+7,r12
 3866 00f2 D086      		std Z+8,r13
 3867 00f4 E186      		std Z+9,r14
 3868 00f6 F286      		std Z+10,r15
 388:./ros_lib/ros/node_handle.h ****     normalizeSecNSec(sec_offset, nsec_offset);
 3869               		.loc 7 388 0
 3870 00f8 CF80      		ldd r12,Y+7
 3871 00fa D884      		ldd r13,Y+8
 3872 00fc E984      		ldd r14,Y+9
 3873 00fe FA84      		ldd r15,Y+10
 3874 0100 F6E3      		ldi r31,54
 3875 0102 DF1A      		sub r13,r31
 3876 0104 F5E6      		ldi r31,101
 3877 0106 EF0A      		sbc r14,r31
 3878 0108 F4EC      		ldi r31,-60
 3879 010a FF0A      		sbc r15,r31
 3880 010c 9B01      		movw r18,r22
 3881 010e AC01      		movw r20,r24
 3882 0110 60E4      		ldi r22,lo8(64)
 3883 0112 72E4      		ldi r23,lo8(66)
 3884 0114 8FE0      		ldi r24,lo8(15)
 3885 0116 90E0      		ldi r25,0
 3886 0118 0E94 0000 		call __mulsi3
 3887 011c C61A      		sub r12,r22
 3888 011e D70A      		sbc r13,r23
 3889 0120 E80A      		sbc r14,r24
 3890 0122 F90A      		sbc r15,r25
 3891 0124 F801      		movw r30,r16
 3892 0126 C386      		std Z+11,r12
 3893 0128 D486      		std Z+12,r13
 3894 012a E586      		std Z+13,r14
 3895 012c F686      		std Z+14,r15
 389:./ros_lib/ros/node_handle.h ****   }
 3896               		.loc 7 389 0
 3897 012e B801      		movw r22,r16
 3898 0130 655F      		subi r22,-11
 3899 0132 7F4F      		sbci r23,-1
 3900 0134 C801      		movw r24,r16
 3901 0136 0796      		adiw r24,7
 3902 0138 0E94 0000 		call _ZN3ros16normalizeSecNSecERmS0_
 3903               	.LVL311:
 3904               	.LBE177:
 3905               	.LBE176:
 3906               	.LBB180:
 3907               	.LBB181:
 3908               		.loc 9 47 0
 3909 013c 0E94 0000 		call avr_time_now
 3910               	.LVL312:
 3911               	.LBE181:
 3912               	.LBE180:
 371:./ros_lib/ros/node_handle.h ****   }
 3913               		.loc 7 371 0
 3914 0140 F801      		movw r30,r16
 3915 0142 EA57      		subi r30,122
 3916 0144 FB4F      		sbci r31,-5
 3917 0146 6083      		st Z,r22
 3918 0148 7183      		std Z+1,r23
 3919 014a 8283      		std Z+2,r24
 3920 014c 9383      		std Z+3,r25
 3921               	/* epilogue start */
 372:./ros_lib/ros/node_handle.h **** 
 3922               		.loc 7 372 0
 3923 014e 2A96      		adiw r28,10
 3924 0150 0FB6      		in __tmp_reg__,__SREG__
 3925 0152 F894      		cli
 3926 0154 DEBF      		out __SP_H__,r29
 3927 0156 0FBE      		out __SREG__,__tmp_reg__
 3928 0158 CDBF      		out __SP_L__,r28
 3929 015a DF91      		pop r29
 3930 015c CF91      		pop r28
 3931 015e 1F91      		pop r17
 3932 0160 0F91      		pop r16
 3933               	.LVL313:
 3934 0162 FF90      		pop r15
 3935 0164 EF90      		pop r14
 3936 0166 DF90      		pop r13
 3937 0168 CF90      		pop r12
 3938 016a BF90      		pop r11
 3939 016c AF90      		pop r10
 3940               	.LVL314:
 3941 016e 9F90      		pop r9
 3942 0170 8F90      		pop r8
 3943 0172 0895      		ret
 3944               		.cfi_endproc
 3945               	.LFE166:
 3947               		.section	.text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",@
 3948               		.weak	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 3950               	_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 3951               	.LFB163:
 189:./ros_lib/ros/node_handle.h ****   {
 3952               		.loc 7 189 0
 3953               		.cfi_startproc
 3954               	.LVL315:
 3955 0000 2F92      		push r2
 3956               	.LCFI142:
 3957               		.cfi_def_cfa_offset 4
 3958               		.cfi_offset 2, -3
 3959 0002 3F92      		push r3
 3960               	.LCFI143:
 3961               		.cfi_def_cfa_offset 5
 3962               		.cfi_offset 3, -4
 3963 0004 4F92      		push r4
 3964               	.LCFI144:
 3965               		.cfi_def_cfa_offset 6
 3966               		.cfi_offset 4, -5
 3967 0006 5F92      		push r5
 3968               	.LCFI145:
 3969               		.cfi_def_cfa_offset 7
 3970               		.cfi_offset 5, -6
 3971 0008 6F92      		push r6
 3972               	.LCFI146:
 3973               		.cfi_def_cfa_offset 8
 3974               		.cfi_offset 6, -7
 3975 000a 7F92      		push r7
 3976               	.LCFI147:
 3977               		.cfi_def_cfa_offset 9
 3978               		.cfi_offset 7, -8
 3979 000c 8F92      		push r8
 3980               	.LCFI148:
 3981               		.cfi_def_cfa_offset 10
 3982               		.cfi_offset 8, -9
 3983 000e 9F92      		push r9
 3984               	.LCFI149:
 3985               		.cfi_def_cfa_offset 11
 3986               		.cfi_offset 9, -10
 3987 0010 AF92      		push r10
 3988               	.LCFI150:
 3989               		.cfi_def_cfa_offset 12
 3990               		.cfi_offset 10, -11
 3991 0012 BF92      		push r11
 3992               	.LCFI151:
 3993               		.cfi_def_cfa_offset 13
 3994               		.cfi_offset 11, -12
 3995 0014 CF92      		push r12
 3996               	.LCFI152:
 3997               		.cfi_def_cfa_offset 14
 3998               		.cfi_offset 12, -13
 3999 0016 DF92      		push r13
 4000               	.LCFI153:
 4001               		.cfi_def_cfa_offset 15
 4002               		.cfi_offset 13, -14
 4003 0018 EF92      		push r14
 4004               	.LCFI154:
 4005               		.cfi_def_cfa_offset 16
 4006               		.cfi_offset 14, -15
 4007 001a FF92      		push r15
 4008               	.LCFI155:
 4009               		.cfi_def_cfa_offset 17
 4010               		.cfi_offset 15, -16
 4011 001c 0F93      		push r16
 4012               	.LCFI156:
 4013               		.cfi_def_cfa_offset 18
 4014               		.cfi_offset 16, -17
 4015 001e 1F93      		push r17
 4016               	.LCFI157:
 4017               		.cfi_def_cfa_offset 19
 4018               		.cfi_offset 17, -18
 4019 0020 CF93      		push r28
 4020               	.LCFI158:
 4021               		.cfi_def_cfa_offset 20
 4022               		.cfi_offset 28, -19
 4023 0022 DF93      		push r29
 4024               	.LCFI159:
 4025               		.cfi_def_cfa_offset 21
 4026               		.cfi_offset 29, -20
 4027 0024 CDB7      		in r28,__SP_L__
 4028 0026 DEB7      		in r29,__SP_H__
 4029               	.LCFI160:
 4030               		.cfi_def_cfa_register 28
 4031 0028 6297      		sbiw r28,18
 4032               	.LCFI161:
 4033               		.cfi_def_cfa_offset 39
 4034 002a 0FB6      		in __tmp_reg__,__SREG__
 4035 002c F894      		cli
 4036 002e DEBF      		out __SP_H__,r29
 4037 0030 0FBE      		out __SREG__,__tmp_reg__
 4038 0032 CDBF      		out __SP_L__,r28
 4039               	/* prologue: function */
 4040               	/* frame size = 18 */
 4041               	/* stack size = 36 */
 4042               	.L__stack_usage = 36
 4043 0034 9A8B      		std Y+18,r25
 4044 0036 898B      		std Y+17,r24
 4045               	.LVL316:
 4046               	.LBB182:
 4047               	.LBB183:
 4048               		.loc 9 47 0
 4049 0038 0E94 0000 		call avr_time_now
 4050               	.LVL317:
 4051 003c 4B01      		movw r8,r22
 4052 003e 5C01      		movw r10,r24
 4053               	.LBE183:
 4054               	.LBE182:
 193:./ros_lib/ros/node_handle.h ****     {
 4055               		.loc 7 193 0
 4056 0040 2989      		ldd r18,Y+17
 4057 0042 3A89      		ldd r19,Y+18
 4058 0044 2A57      		subi r18,122
 4059 0046 3B4F      		sbci r19,-5
 4060 0048 3C83      		std Y+4,r19
 4061 004a 2B83      		std Y+3,r18
 4062 004c F901      		movw r30,r18
 4063 004e 8081      		ld r24,Z
 4064 0050 9181      		ldd r25,Z+1
 4065 0052 A281      		ldd r26,Z+2
 4066 0054 B381      		ldd r27,Z+3
 4067 0056 A501      		movw r20,r10
 4068 0058 9401      		movw r18,r8
 4069 005a 281B      		sub r18,r24
 4070 005c 390B      		sbc r19,r25
 4071 005e 4A0B      		sbc r20,r26
 4072 0060 5B0B      		sbc r21,r27
 4073 0062 DA01      		movw r26,r20
 4074 0064 C901      		movw r24,r18
 4075 0066 893F      		cpi r24,-7
 4076 0068 9A42      		sbci r25,42
 4077 006a A105      		cpc r26,__zero_reg__
 4078 006c B105      		cpc r27,__zero_reg__
 4079 006e 00F0      		brlo .L86
 195:./ros_lib/ros/node_handle.h ****     }
 4080               		.loc 7 195 0
 4081 0070 E989      		ldd r30,Y+17
 4082 0072 FA89      		ldd r31,Y+18
 4083 0074 EF57      		subi r30,127
 4084 0076 FB4F      		sbci r31,-5
 4085 0078 1082      		st Z,__zero_reg__
 4086               	.L86:
 199:./ros_lib/ros/node_handle.h ****     {
 4087               		.loc 7 199 0
 4088 007a 0989      		ldd r16,Y+17
 4089 007c 1A89      		ldd r17,Y+18
 4090 007e 0958      		subi r16,-119
 4091 0080 1B4F      		sbci r17,-5
 4092 0082 D801      		movw r26,r16
 4093 0084 8D91      		ld r24,X+
 4094 0086 9C91      		ld r25,X
 4095 0088 892B      		or r24,r25
 4096 008a 01F0      		breq .L87
 201:./ros_lib/ros/node_handle.h ****       {
 4097               		.loc 7 201 0
 4098 008c E989      		ldd r30,Y+17
 4099 008e FA89      		ldd r31,Y+18
 4100 0090 E657      		subi r30,118
 4101 0092 FB4F      		sbci r31,-5
 4102 0094 8081      		ld r24,Z
 4103 0096 9181      		ldd r25,Z+1
 4104 0098 A281      		ldd r26,Z+2
 4105 009a B381      		ldd r27,Z+3
 4106 009c 8815      		cp r24,r8
 4107 009e 9905      		cpc r25,r9
 4108 00a0 AA05      		cpc r26,r10
 4109 00a2 BB05      		cpc r27,r11
 4110 00a4 00F4      		brsh .L87
 203:./ros_lib/ros/node_handle.h ****       }
 4111               		.loc 7 203 0
 4112 00a6 F801      		movw r30,r16
 4113 00a8 1182      		std Z+1,__zero_reg__
 4114 00aa 1082      		st Z,__zero_reg__
 4115               	.L87:
 4116               	.LBB184:
 311:./ros_lib/ros/node_handle.h ****             syncTime(message_in);
 4117               		.loc 7 311 0
 4118 00ac 1A82      		std Y+2,__zero_reg__
 4119 00ae 1982      		std Y+1,__zero_reg__
 229:./ros_lib/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4120               		.loc 7 229 0
 4121 00b0 6988      		ldd r6,Y+17
 4122 00b2 7A88      		ldd r7,Y+18
 4123 00b4 F1E8      		ldi r31,-127
 4124 00b6 6F1A      		sub r6,r31
 4125 00b8 FBEF      		ldi r31,-5
 4126 00ba 7F0A      		sbc r7,r31
 301:./ros_lib/ros/node_handle.h ****           {
 4127               		.loc 7 301 0
 4128 00bc C988      		ldd r12,Y+17
 4129 00be DA88      		ldd r13,Y+18
 4130 00c0 25E8      		ldi r18,-123
 4131 00c2 C21A      		sub r12,r18
 4132 00c4 2BEF      		ldi r18,-5
 4133 00c6 D20A      		sbc r13,r18
 327:./ros_lib/ros/node_handle.h ****           }
 4134               		.loc 7 327 0
 4135 00c8 4988      		ldd r4,Y+17
 4136 00ca 5A88      		ldd r5,Y+18
 4137 00cc 33E1      		ldi r19,19
 4138 00ce 430E      		add r4,r19
 4139 00d0 511C      		adc r5,__zero_reg__
 321:./ros_lib/ros/node_handle.h ****             tx_stop_requested = true;
 4140               		.loc 7 321 0
 4141 00d2 4989      		ldd r20,Y+17
 4142 00d4 5A89      		ldd r21,Y+18
 4143 00d6 4F57      		subi r20,127
 4144 00d8 5B4F      		sbci r21,-5
 4145 00da 5E83      		std Y+6,r21
 4146 00dc 4D83      		std Y+5,r20
 316:./ros_lib/ros/node_handle.h ****             param_received = true;
 4147               		.loc 7 316 0
 4148 00de 8989      		ldd r24,Y+17
 4149 00e0 9A89      		ldd r25,Y+18
 4150 00e2 8157      		subi r24,113
 4151 00e4 9B4F      		sbci r25,-5
 4152 00e6 9887      		std Y+8,r25
 4153 00e8 8F83      		std Y+7,r24
 317:./ros_lib/ros/node_handle.h ****           }
 4154               		.loc 7 317 0
 4155 00ea A989      		ldd r26,Y+17
 4156 00ec BA89      		ldd r27,Y+18
 4157 00ee A257      		subi r26,114
 4158 00f0 BB4F      		sbci r27,-5
 4159 00f2 BA87      		std Y+10,r27
 4160 00f4 A987      		std Y+9,r26
 293:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4161               		.loc 7 293 0
 4162 00f6 E988      		ldd r14,Y+17
 4163 00f8 FA88      		ldd r15,Y+18
 4164 00fa B7E8      		ldi r27,-121
 4165 00fc EB1A      		sub r14,r27
 4166 00fe BBEF      		ldi r27,-5
 4167 0100 FB0A      		sbc r15,r27
 267:./ros_lib/ros/node_handle.h ****         mode_++;
 4168               		.loc 7 267 0
 4169 0102 2988      		ldd r2,Y+17
 4170 0104 3A88      		ldd r3,Y+18
 4171 0106 E3E8      		ldi r30,-125
 4172 0108 2E1A      		sub r2,r30
 4173 010a EBEF      		ldi r30,-5
 4174 010c 3E0A      		sbc r3,r30
 242:./ros_lib/ros/node_handle.h ****         }
 4175               		.loc 7 242 0
 4176 010e 2989      		ldd r18,Y+17
 4177 0110 3A89      		ldd r19,Y+18
 4178 0112 2657      		subi r18,118
 4179 0114 3B4F      		sbci r19,-5
 4180 0116 3C87      		std Y+12,r19
 4181 0118 2B87      		std Y+11,r18
 4182 011a D501      		movw r26,r10
 4183 011c C401      		movw r24,r8
 4184 011e 4496      		adiw r24,20
 4185 0120 A11D      		adc r26,__zero_reg__
 4186 0122 B11D      		adc r27,__zero_reg__
 4187 0124 8D87      		std Y+13,r24
 4188 0126 9E87      		std Y+14,r25
 4189 0128 AF87      		std Y+15,r26
 4190 012a B88B      		std Y+16,r27
 4191               	.LVL318:
 4192               	.L88:
 214:./ros_lib/ros/node_handle.h ****       {
 4193               		.loc 7 214 0
 4194 012c E989      		ldd r30,Y+17
 4195 012e FA89      		ldd r31,Y+18
 4196 0130 8785      		ldd r24,Z+15
 4197 0132 9089      		ldd r25,Z+16
 4198 0134 A189      		ldd r26,Z+17
 4199 0136 B289      		ldd r27,Z+18
 4200 0138 892B      		or r24,r25
 4201 013a 8A2B      		or r24,r26
 4202 013c 8B2B      		or r24,r27
 4203 013e 01F4      		brne .L89
 4204               	.L93:
 4205               	.LVL319:
 4206               	.LBB185:
 4207               	.LBB186:
  30:Atmega2560Hardware.h ****     }
 4208               		.loc 9 30 0
 4209 0140 0E94 0000 		call avr_uart_receive_byte
 4210               	.LVL320:
 4211 0144 9C01      		movw r18,r24
 4212               	.LBE186:
 4213               	.LBE185:
 227:./ros_lib/ros/node_handle.h ****         break;
 4214               		.loc 7 227 0
 4215 0146 97FF      		sbrs r25,7
 4216 0148 00C0      		rjmp .L123
 4217 014a 00C0      		rjmp .L126
 4218               	.LVL321:
 4219               	.L89:
 4220               	.LBB187:
 4221               	.LBB188:
 4222               		.loc 9 47 0
 4223 014c 0E94 0000 		call avr_time_now
 4224               	.LVL322:
 4225               	.LBE188:
 4226               	.LBE187:
 220:./ros_lib/ros/node_handle.h ****         {
 4227               		.loc 7 220 0
 4228 0150 DC01      		movw r26,r24
 4229 0152 CB01      		movw r24,r22
 4230 0154 8819      		sub r24,r8
 4231 0156 9909      		sbc r25,r9
 4232 0158 AA09      		sbc r26,r10
 4233 015a BB09      		sbc r27,r11
 4234 015c E989      		ldd r30,Y+17
 4235 015e FA89      		ldd r31,Y+18
 4236 0160 2785      		ldd r18,Z+15
 4237 0162 3089      		ldd r19,Z+16
 4238 0164 4189      		ldd r20,Z+17
 4239 0166 5289      		ldd r21,Z+18
 4240 0168 2817      		cp r18,r24
 4241 016a 3907      		cpc r19,r25
 4242 016c 4A07      		cpc r20,r26
 4243 016e 5B07      		cpc r21,r27
 4244 0170 00F4      		brsh .L93
 4245 0172 00C0      		rjmp .L111
 4246               	.LVL323:
 4247               	.L123:
 229:./ros_lib/ros/node_handle.h ****       if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 4248               		.loc 7 229 0
 4249 0174 D301      		movw r26,r6
 4250 0176 8D91      		ld r24,X+
 4251 0178 9C91      		ld r25,X
 4252 017a 1197      		sbiw r26,1
 4253 017c 820F      		add r24,r18
 4254 017e 931F      		adc r25,r19
 4255 0180 8D93      		st X+,r24
 4256 0182 9C93      		st X,r25
 230:./ros_lib/ros/node_handle.h ****       {
 4257               		.loc 7 230 0
 4258 0184 F801      		movw r30,r16
 4259 0186 4081      		ld r20,Z
 4260 0188 5181      		ldd r21,Z+1
 4261 018a 4730      		cpi r20,7
 4262 018c 5105      		cpc r21,__zero_reg__
 4263 018e 01F4      		brne .L94
 232:./ros_lib/ros/node_handle.h ****         bytes_--;
 4264               		.loc 7 232 0
 4265 0190 D101      		movw r26,r2
 4266 0192 8D91      		ld r24,X+
 4267 0194 9C91      		ld r25,X
 4268 0196 1197      		sbiw r26,1
 4269 0198 AC01      		movw r20,r24
 4270 019a 4F5F      		subi r20,-1
 4271 019c 5F4F      		sbci r21,-1
 4272 019e 4D93      		st X+,r20
 4273 01a0 5C93      		st X,r21
 4274 01a2 E989      		ldd r30,Y+17
 4275 01a4 FA89      		ldd r31,Y+18
 4276 01a6 E80F      		add r30,r24
 4277 01a8 F91F      		adc r31,r25
 4278 01aa 238B      		std Z+19,r18
 233:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)                 /* is message complete? if so, checksum */
 4279               		.loc 7 233 0
 4280 01ac F701      		movw r30,r14
 4281 01ae 8081      		ld r24,Z
 4282 01b0 9181      		ldd r25,Z+1
 4283 01b2 0197      		sbiw r24,1
 4284 01b4 9183      		std Z+1,r25
 4285 01b6 8083      		st Z,r24
 234:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4286               		.loc 7 234 0
 4287 01b8 892B      		or r24,r25
 4288 01ba 01F0      		breq .+2
 4289 01bc 00C0      		rjmp .L88
 235:./ros_lib/ros/node_handle.h ****       }
 4290               		.loc 7 235 0
 4291 01be E8E0      		ldi r30,lo8(8)
 4292 01c0 F0E0      		ldi r31,0
 4293 01c2 D801      		movw r26,r16
 4294 01c4 ED93      		st X+,r30
 4295 01c6 FC93      		st X,r31
 4296 01c8 00C0      		rjmp .L88
 4297               	.L94:
 237:./ros_lib/ros/node_handle.h ****       {
 4298               		.loc 7 237 0
 4299 01ca 4115      		cp r20,__zero_reg__
 4300 01cc 5105      		cpc r21,__zero_reg__
 4301 01ce 01F4      		brne .L96
 239:./ros_lib/ros/node_handle.h ****         {
 4302               		.loc 7 239 0
 4303 01d0 2F3F      		cpi r18,-1
 4304 01d2 3105      		cpc r19,__zero_reg__
 4305 01d4 01F4      		brne .L97
 241:./ros_lib/ros/node_handle.h ****           last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 4306               		.loc 7 241 0
 4307 01d6 81E0      		ldi r24,lo8(1)
 4308 01d8 90E0      		ldi r25,0
 4309 01da 9183      		std Z+1,r25
 4310 01dc 8083      		st Z,r24
 242:./ros_lib/ros/node_handle.h ****         }
 4311               		.loc 7 242 0
 4312 01de 2D85      		ldd r18,Y+13
 4313 01e0 3E85      		ldd r19,Y+14
 4314 01e2 4F85      		ldd r20,Y+15
 4315 01e4 5889      		ldd r21,Y+16
 4316 01e6 AB85      		ldd r26,Y+11
 4317 01e8 BC85      		ldd r27,Y+12
 4318 01ea 2D93      		st X+,r18
 4319 01ec 3D93      		st X+,r19
 4320 01ee 4D93      		st X+,r20
 4321 01f0 5C93      		st X,r21
 4322 01f2 1397      		sbiw r26,3
 4323 01f4 00C0      		rjmp .L88
 4324               	.L97:
 4325               	.LVL324:
 4326               	.LBB189:
 4327               	.LBB190:
 4328               		.loc 9 47 0
 4329 01f6 0E94 0000 		call avr_time_now
 4330               	.LVL325:
 4331               	.LBE190:
 4332               	.LBE189:
 244:./ros_lib/ros/node_handle.h ****         {
 4333               		.loc 7 244 0
 4334 01fa DC01      		movw r26,r24
 4335 01fc CB01      		movw r24,r22
 4336 01fe 8819      		sub r24,r8
 4337 0200 9909      		sbc r25,r9
 4338 0202 AA09      		sbc r26,r10
 4339 0204 BB09      		sbc r27,r11
 4340 0206 8938      		cpi r24,-119
 4341 0208 9341      		sbci r25,19
 4342 020a A105      		cpc r26,__zero_reg__
 4343 020c B105      		cpc r27,__zero_reg__
 4344 020e 00F4      		brsh .+2
 4345 0210 00C0      		rjmp .L88
 247:./ros_lib/ros/node_handle.h ****           return SPIN_TIMEOUT;
 4346               		.loc 7 247 0
 4347 0212 2989      		ldd r18,Y+17
 4348 0214 3A89      		ldd r19,Y+18
 4349 0216 2F57      		subi r18,127
 4350 0218 3B4F      		sbci r19,-5
 4351 021a D901      		movw r26,r18
 4352 021c 1C92      		st X,__zero_reg__
 4353 021e 00C0      		rjmp .L111
 4354               	.LVL326:
 4355               	.L96:
 251:./ros_lib/ros/node_handle.h ****       {
 4356               		.loc 7 251 0
 4357 0220 4130      		cpi r20,1
 4358 0222 5105      		cpc r21,__zero_reg__
 4359 0224 01F4      		brne .L98
 253:./ros_lib/ros/node_handle.h ****         {
 4360               		.loc 7 253 0
 4361 0226 2E3F      		cpi r18,-2
 4362 0228 3105      		cpc r19,__zero_reg__
 4363 022a 01F4      		brne .L99
 255:./ros_lib/ros/node_handle.h ****         }
 4364               		.loc 7 255 0
 4365 022c 82E0      		ldi r24,lo8(2)
 4366 022e 90E0      		ldi r25,0
 4367 0230 00C0      		rjmp .L124
 4368               	.L99:
 259:./ros_lib/ros/node_handle.h ****           if (configured_ == false)
 4369               		.loc 7 259 0
 4370 0232 1182      		std Z+1,__zero_reg__
 4371 0234 1082      		st Z,__zero_reg__
 260:./ros_lib/ros/node_handle.h ****             requestSyncTime();  /* send a msg back showing our protocol version */
 4372               		.loc 7 260 0
 4373 0236 ED81      		ldd r30,Y+5
 4374 0238 FE81      		ldd r31,Y+6
 4375 023a 8081      		ld r24,Z
 4376 023c 8111      		cpse r24,__zero_reg__
 4377 023e 00C0      		rjmp .L88
 261:./ros_lib/ros/node_handle.h ****         }
 4378               		.loc 7 261 0
 4379 0240 8989      		ldd r24,Y+17
 4380 0242 9A89      		ldd r25,Y+18
 4381 0244 0E94 0000 		call _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4382               	.LVL327:
 4383 0248 00C0      		rjmp .L88
 4384               	.L98:
 264:./ros_lib/ros/node_handle.h ****       {
 4385               		.loc 7 264 0
 4386 024a 4230      		cpi r20,2
 4387 024c 5105      		cpc r21,__zero_reg__
 4388 024e 01F4      		brne .L100
 266:./ros_lib/ros/node_handle.h ****         index_ = 0;
 4389               		.loc 7 266 0
 4390 0250 D701      		movw r26,r14
 4391 0252 2D93      		st X+,r18
 4392 0254 3C93      		st X,r19
 267:./ros_lib/ros/node_handle.h ****         mode_++;
 4393               		.loc 7 267 0
 4394 0256 F101      		movw r30,r2
 4395 0258 1182      		std Z+1,__zero_reg__
 4396 025a 1082      		st Z,__zero_reg__
 268:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte for calculating size checksum */
 4397               		.loc 7 268 0
 4398 025c 83E0      		ldi r24,lo8(3)
 4399 025e 90E0      		ldi r25,0
 4400 0260 D801      		movw r26,r16
 4401 0262 8D93      		st X+,r24
 4402 0264 9C93      		st X,r25
 269:./ros_lib/ros/node_handle.h ****       }
 4403               		.loc 7 269 0
 4404 0266 F301      		movw r30,r6
 4405 0268 00C0      		rjmp .L125
 4406               	.L100:
 271:./ros_lib/ros/node_handle.h ****       {
 4407               		.loc 7 271 0
 4408 026a 4330      		cpi r20,3
 4409 026c 5105      		cpc r21,__zero_reg__
 4410 026e 01F4      		brne .L101
 273:./ros_lib/ros/node_handle.h ****         mode_++;
 4411               		.loc 7 273 0
 4412 0270 322F      		mov r19,r18
 4413 0272 2227      		clr r18
 4414 0274 D701      		movw r26,r14
 4415 0276 8D91      		ld r24,X+
 4416 0278 9C91      		ld r25,X
 4417 027a 1197      		sbiw r26,1
 4418 027c 280F      		add r18,r24
 4419 027e 391F      		adc r19,r25
 4420 0280 2D93      		st X+,r18
 4421 0282 3C93      		st X,r19
 274:./ros_lib/ros/node_handle.h ****       }
 4422               		.loc 7 274 0
 4423 0284 84E0      		ldi r24,lo8(4)
 4424 0286 90E0      		ldi r25,0
 4425               	.L124:
 4426 0288 F801      		movw r30,r16
 4427 028a 9183      		std Z+1,r25
 4428 028c 8083      		st Z,r24
 4429 028e 00C0      		rjmp .L88
 4430               	.L101:
 276:./ros_lib/ros/node_handle.h ****       {
 4431               		.loc 7 276 0
 4432 0290 4430      		cpi r20,4
 4433 0292 5105      		cpc r21,__zero_reg__
 4434 0294 01F4      		brne .L102
 278:./ros_lib/ros/node_handle.h ****           mode_++;
 4435               		.loc 7 278 0
 4436 0296 60E0      		ldi r22,0
 4437 0298 71E0      		ldi r23,lo8(1)
 4438 029a 0E94 0000 		call __divmodhi4
 4439 029e 8F3F      		cpi r24,-1
 4440 02a0 9105      		cpc r25,__zero_reg__
 4441 02a2 01F4      		brne .L103
 279:./ros_lib/ros/node_handle.h ****         else
 4442               		.loc 7 279 0
 4443 02a4 85E0      		ldi r24,lo8(5)
 4444 02a6 90E0      		ldi r25,0
 4445 02a8 9183      		std Z+1,r25
 4446 02aa 8083      		st Z,r24
 4447 02ac 00C0      		rjmp .L88
 4448               	.L103:
 281:./ros_lib/ros/node_handle.h ****       }
 4449               		.loc 7 281 0
 4450 02ae F801      		movw r30,r16
 4451 02b0 1182      		std Z+1,__zero_reg__
 4452 02b2 1082      		st Z,__zero_reg__
 4453 02b4 00C0      		rjmp .L88
 4454               	.L102:
 283:./ros_lib/ros/node_handle.h ****       {
 4455               		.loc 7 283 0
 4456 02b6 4530      		cpi r20,5
 4457 02b8 5105      		cpc r21,__zero_reg__
 4458 02ba 01F4      		brne .L104
 285:./ros_lib/ros/node_handle.h ****         mode_++;
 4459               		.loc 7 285 0
 4460 02bc D601      		movw r26,r12
 4461 02be 2D93      		st X+,r18
 4462 02c0 3C93      		st X,r19
 286:./ros_lib/ros/node_handle.h ****         checksum_ = data;               /* first byte included in checksum */
 4463               		.loc 7 286 0
 4464 02c2 86E0      		ldi r24,lo8(6)
 4465 02c4 90E0      		ldi r25,0
 4466 02c6 F801      		movw r30,r16
 4467 02c8 9183      		std Z+1,r25
 4468 02ca 8083      		st Z,r24
 287:./ros_lib/ros/node_handle.h ****       }
 4469               		.loc 7 287 0
 4470 02cc D301      		movw r26,r6
 4471 02ce 2D93      		st X+,r18
 4472 02d0 3C93      		st X,r19
 4473 02d2 00C0      		rjmp .L88
 4474               	.L104:
 289:./ros_lib/ros/node_handle.h ****       {
 4475               		.loc 7 289 0
 4476 02d4 4630      		cpi r20,6
 4477 02d6 5105      		cpc r21,__zero_reg__
 4478 02d8 01F4      		brne .L105
 291:./ros_lib/ros/node_handle.h ****         mode_ = MODE_MESSAGE;
 4479               		.loc 7 291 0
 4480 02da 322F      		mov r19,r18
 4481 02dc 2227      		clr r18
 4482 02de F601      		movw r30,r12
 4483 02e0 8081      		ld r24,Z
 4484 02e2 9181      		ldd r25,Z+1
 4485 02e4 280F      		add r18,r24
 4486 02e6 391F      		adc r19,r25
 4487 02e8 3183      		std Z+1,r19
 4488 02ea 2083      		st Z,r18
 292:./ros_lib/ros/node_handle.h ****         if (bytes_ == 0)
 4489               		.loc 7 292 0
 4490 02ec E7E0      		ldi r30,lo8(7)
 4491 02ee F0E0      		ldi r31,0
 4492 02f0 D801      		movw r26,r16
 4493 02f2 ED93      		st X+,r30
 4494 02f4 FC93      		st X,r31
 293:./ros_lib/ros/node_handle.h ****           mode_ = MODE_MSG_CHECKSUM;
 4495               		.loc 7 293 0
 4496 02f6 D701      		movw r26,r14
 4497 02f8 8D91      		ld r24,X+
 4498 02fa 9C91      		ld r25,X
 4499 02fc 892B      		or r24,r25
 4500 02fe 01F0      		breq .+2
 4501 0300 00C0      		rjmp .L88
 294:./ros_lib/ros/node_handle.h ****       }
 4502               		.loc 7 294 0
 4503 0302 28E0      		ldi r18,lo8(8)
 4504 0304 30E0      		ldi r19,0
 4505 0306 F801      		movw r30,r16
 4506               	.L125:
 4507 0308 3183      		std Z+1,r19
 4508 030a 2083      		st Z,r18
 4509 030c 00C0      		rjmp .L88
 4510               	.L105:
 296:./ros_lib/ros/node_handle.h ****       {
 4511               		.loc 7 296 0
 4512 030e 4830      		cpi r20,8
 4513 0310 5105      		cpc r21,__zero_reg__
 4514 0312 01F0      		breq .+2
 4515 0314 00C0      		rjmp .L88
 298:./ros_lib/ros/node_handle.h ****         if ((checksum_ % 256) == 255)
 4516               		.loc 7 298 0
 4517 0316 1182      		std Z+1,__zero_reg__
 4518 0318 1082      		st Z,__zero_reg__
 299:./ros_lib/ros/node_handle.h ****         {
 4519               		.loc 7 299 0
 4520 031a 60E0      		ldi r22,0
 4521 031c 71E0      		ldi r23,lo8(1)
 4522 031e 0E94 0000 		call __divmodhi4
 4523 0322 8F3F      		cpi r24,-1
 4524 0324 9105      		cpc r25,__zero_reg__
 4525 0326 01F0      		breq .+2
 4526 0328 00C0      		rjmp .L88
 301:./ros_lib/ros/node_handle.h ****           {
 4527               		.loc 7 301 0
 4528 032a F601      		movw r30,r12
 4529 032c 8081      		ld r24,Z
 4530 032e 9181      		ldd r25,Z+1
 4531 0330 0097      		sbiw r24,0
 4532 0332 01F4      		brne .L106
 303:./ros_lib/ros/node_handle.h ****             negotiateTopics();
 4533               		.loc 7 303 0
 4534 0334 8989      		ldd r24,Y+17
 4535 0336 9A89      		ldd r25,Y+18
 4536 0338 0E94 0000 		call _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4537               	.LVL328:
 304:./ros_lib/ros/node_handle.h ****             last_sync_time = c_time;
 4538               		.loc 7 304 0
 4539 033c 8989      		ldd r24,Y+17
 4540 033e 9A89      		ldd r25,Y+18
 4541 0340 0E94 0000 		call _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 4542               	.LVL329:
 305:./ros_lib/ros/node_handle.h ****             last_sync_receive_time = c_time;
 4543               		.loc 7 305 0
 4544 0344 2989      		ldd r18,Y+17
 4545 0346 3A89      		ldd r19,Y+18
 4546 0348 2E57      		subi r18,126
 4547 034a 3B4F      		sbci r19,-5
 4548 034c D901      		movw r26,r18
 4549 034e 8D92      		st X+,r8
 4550 0350 9D92      		st X+,r9
 4551 0352 AD92      		st X+,r10
 4552 0354 BC92      		st X,r11
 4553 0356 1397      		sbiw r26,3
 306:./ros_lib/ros/node_handle.h ****             return SPIN_ERR;
 4554               		.loc 7 306 0
 4555 0358 EB81      		ldd r30,Y+3
 4556 035a FC81      		ldd r31,Y+4
 4557 035c 8082      		st Z,r8
 4558 035e 9182      		std Z+1,r9
 4559 0360 A282      		std Z+2,r10
 4560 0362 B382      		std Z+3,r11
 307:./ros_lib/ros/node_handle.h ****           }
 4561               		.loc 7 307 0
 4562 0364 8FEF      		ldi r24,lo8(-1)
 4563 0366 9FEF      		ldi r25,lo8(-1)
 4564 0368 00C0      		rjmp .L92
 4565               	.L106:
 309:./ros_lib/ros/node_handle.h ****           {
 4566               		.loc 7 309 0
 4567 036a 8A30      		cpi r24,10
 4568 036c 9105      		cpc r25,__zero_reg__
 4569 036e 01F4      		brne .L107
 4570               	.LVL330:
 312:./ros_lib/ros/node_handle.h ****           }
 4571               		.loc 7 312 0
 4572 0370 B201      		movw r22,r4
 4573 0372 8989      		ldd r24,Y+17
 4574 0374 9A89      		ldd r25,Y+18
 4575 0376 0E94 0000 		call _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 4576               	.LVL331:
 311:./ros_lib/ros/node_handle.h ****             syncTime(message_in);
 4577               		.loc 7 311 0
 4578 037a F1E0      		ldi r31,lo8(1)
 4579 037c FA83      		std Y+2,r31
 4580 037e 00C0      		rjmp .L88
 4581               	.LVL332:
 4582               	.L107:
 314:./ros_lib/ros/node_handle.h ****           {
 4583               		.loc 7 314 0
 4584 0380 8630      		cpi r24,6
 4585 0382 9105      		cpc r25,__zero_reg__
 4586 0384 01F4      		brne .L108
 316:./ros_lib/ros/node_handle.h ****             param_received = true;
 4587               		.loc 7 316 0
 4588 0386 B201      		movw r22,r4
 4589 0388 8F81      		ldd r24,Y+7
 4590 038a 9885      		ldd r25,Y+8
 4591 038c 0E94 0000 		call _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 4592               	.LVL333:
 317:./ros_lib/ros/node_handle.h ****           }
 4593               		.loc 7 317 0
 4594 0390 81E0      		ldi r24,lo8(1)
 4595 0392 A985      		ldd r26,Y+9
 4596 0394 BA85      		ldd r27,Y+10
 4597 0396 8C93      		st X,r24
 4598 0398 00C0      		rjmp .L88
 4599               	.L108:
 319:./ros_lib/ros/node_handle.h ****           {
 4600               		.loc 7 319 0
 4601 039a 8B30      		cpi r24,11
 4602 039c 9105      		cpc r25,__zero_reg__
 4603 039e 01F4      		brne .L109
 321:./ros_lib/ros/node_handle.h ****             tx_stop_requested = true;
 4604               		.loc 7 321 0
 4605 03a0 ED81      		ldd r30,Y+5
 4606 03a2 FE81      		ldd r31,Y+6
 4607 03a4 1082      		st Z,__zero_reg__
 4608               	.LVL334:
 322:./ros_lib/ros/node_handle.h ****           }
 4609               		.loc 7 322 0
 4610 03a6 F1E0      		ldi r31,lo8(1)
 4611 03a8 F983      		std Y+1,r31
 4612 03aa 00C0      		rjmp .L88
 4613               	.LVL335:
 4614               	.L109:
 326:./ros_lib/ros/node_handle.h ****               subscribers[topic_ - 100]->callback(message_in);
 4615               		.loc 7 326 0
 4616 03ac FC01      		movw r30,r24
 4617 03ae E456      		subi r30,100
 4618 03b0 F109      		sbc r31,__zero_reg__
 4619 03b2 EE0F      		lsl r30
 4620 03b4 FF1F      		rol r31
 4621 03b6 2989      		ldd r18,Y+17
 4622 03b8 3A89      		ldd r19,Y+18
 4623 03ba E20F      		add r30,r18
 4624 03bc F31F      		adc r31,r19
 4625 03be EB5B      		subi r30,-69
 4626 03c0 FB4F      		sbci r31,-5
 4627 03c2 8081      		ld r24,Z
 4628 03c4 9181      		ldd r25,Z+1
 4629 03c6 0097      		sbiw r24,0
 4630 03c8 01F4      		brne .+2
 4631 03ca 00C0      		rjmp .L88
 327:./ros_lib/ros/node_handle.h ****           }
 4632               		.loc 7 327 0
 4633 03cc DC01      		movw r26,r24
 4634 03ce ED91      		ld r30,X+
 4635 03d0 FC91      		ld r31,X
 4636 03d2 0190      		ld __tmp_reg__,Z+
 4637 03d4 F081      		ld r31,Z
 4638 03d6 E02D      		mov r30,__tmp_reg__
 4639 03d8 B201      		movw r22,r4
 4640 03da 1995      		eicall
 4641               	.LVL336:
 4642 03dc 00C0      		rjmp .L88
 4643               	.L126:
 4644               	.LBE184:
 334:./ros_lib/ros/node_handle.h ****     {
 4645               		.loc 7 334 0
 4646 03de E989      		ldd r30,Y+17
 4647 03e0 FA89      		ldd r31,Y+18
 4648 03e2 EF57      		subi r30,127
 4649 03e4 FB4F      		sbci r31,-5
 4650 03e6 8081      		ld r24,Z
 4651 03e8 8823      		tst r24
 4652 03ea 01F0      		breq .L110
 334:./ros_lib/ros/node_handle.h ****     {
 4653               		.loc 7 334 0 is_stmt 0 discriminator 1
 4654 03ec 0989      		ldd r16,Y+17
 4655 03ee 1A89      		ldd r17,Y+18
 4656 03f0 0E57      		subi r16,126
 4657 03f2 1B4F      		sbci r17,-5
 4658 03f4 F801      		movw r30,r16
 4659 03f6 8081      		ld r24,Z
 4660 03f8 9181      		ldd r25,Z+1
 4661 03fa A281      		ldd r26,Z+2
 4662 03fc B381      		ldd r27,Z+3
 4663 03fe A501      		movw r20,r10
 4664 0400 9401      		movw r18,r8
 4665 0402 281B      		sub r18,r24
 4666 0404 390B      		sbc r19,r25
 4667 0406 4A0B      		sbc r20,r26
 4668 0408 5B0B      		sbc r21,r27
 4669 040a DA01      		movw r26,r20
 4670 040c C901      		movw r24,r18
 4671 040e 853C      		cpi r24,-59
 4672 0410 9940      		sbci r25,9
 4673 0412 A105      		cpc r26,__zero_reg__
 4674 0414 B105      		cpc r27,__zero_reg__
 4675 0416 00F0      		brlo .L110
 336:./ros_lib/ros/node_handle.h ****       last_sync_time = c_time;
 4676               		.loc 7 336 0 is_stmt 1
 4677 0418 8989      		ldd r24,Y+17
 4678 041a 9A89      		ldd r25,Y+18
 4679 041c 0E94 0000 		call _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4680               	.LVL337:
 337:./ros_lib/ros/node_handle.h ****     }
 4681               		.loc 7 337 0
 4682 0420 D801      		movw r26,r16
 4683 0422 8D92      		st X+,r8
 4684 0424 9D92      		st X+,r9
 4685 0426 AD92      		st X+,r10
 4686 0428 BC92      		st X,r11
 4687 042a 1397      		sbiw r26,3
 4688               	.L110:
 340:./ros_lib/ros/node_handle.h ****   }
 4689               		.loc 7 340 0
 4690 042c BA81      		ldd r27,Y+2
 4691 042e B111      		cpse r27,__zero_reg__
 4692 0430 00C0      		rjmp .L112
 340:./ros_lib/ros/node_handle.h ****   }
 4693               		.loc 7 340 0 is_stmt 0 discriminator 2
 4694 0432 E981      		ldd r30,Y+1
 4695 0434 E111      		cpse r30,__zero_reg__
 4696 0436 00C0      		rjmp .L113
 340:./ros_lib/ros/node_handle.h ****   }
 4697               		.loc 7 340 0
 4698 0438 80E0      		ldi r24,0
 4699 043a 90E0      		ldi r25,0
 4700 043c 00C0      		rjmp .L92
 4701               	.LVL338:
 4702               	.L111:
 4703               	.LBB191:
 223:./ros_lib/ros/node_handle.h ****         }
 4704               		.loc 7 223 0 is_stmt 1
 4705 043e 8EEF      		ldi r24,lo8(-2)
 4706 0440 9FEF      		ldi r25,lo8(-1)
 4707 0442 00C0      		rjmp .L92
 4708               	.LVL339:
 4709               	.L112:
 4710               	.LBE191:
 340:./ros_lib/ros/node_handle.h ****   }
 4711               		.loc 7 340 0
 4712 0444 8CEF      		ldi r24,lo8(-4)
 4713 0446 9FEF      		ldi r25,lo8(-1)
 4714 0448 00C0      		rjmp .L92
 4715               	.L113:
 4716 044a 8DEF      		ldi r24,lo8(-3)
 4717 044c 9FEF      		ldi r25,lo8(-1)
 4718               	.LVL340:
 4719               	.L92:
 4720               	/* epilogue start */
 341:./ros_lib/ros/node_handle.h **** 
 4721               		.loc 7 341 0
 4722 044e 6296      		adiw r28,18
 4723 0450 0FB6      		in __tmp_reg__,__SREG__
 4724 0452 F894      		cli
 4725 0454 DEBF      		out __SP_H__,r29
 4726 0456 0FBE      		out __SREG__,__tmp_reg__
 4727 0458 CDBF      		out __SP_L__,r28
 4728 045a DF91      		pop r29
 4729 045c CF91      		pop r28
 4730 045e 1F91      		pop r17
 4731 0460 0F91      		pop r16
 4732 0462 FF90      		pop r15
 4733 0464 EF90      		pop r14
 4734 0466 DF90      		pop r13
 4735 0468 CF90      		pop r12
 4736 046a BF90      		pop r11
 4737 046c AF90      		pop r10
 4738 046e 9F90      		pop r9
 4739 0470 8F90      		pop r8
 4740 0472 7F90      		pop r7
 4741 0474 6F90      		pop r6
 4742 0476 5F90      		pop r5
 4743 0478 4F90      		pop r4
 4744 047a 3F90      		pop r3
 4745 047c 2F90      		pop r2
 4746 047e 0895      		ret
 4747               		.cfi_endproc
 4748               	.LFE163:
 4750               		.section	.text.startup,"ax",@progbits
 4751               	.global	main
 4753               	main:
 4754               	.LFB151:
  33:avr_subscriber.cpp ****   uint32_t lasttime = 0UL;
 4755               		.loc 8 33 0
 4756               		.cfi_startproc
 4757               	/* prologue: function */
 4758               	/* frame size = 0 */
 4759               	/* stack size = 0 */
 4760               	.L__stack_usage = 0
 4761               	.LVL341:
 4762               	.LBB201:
 4763               	.LBB202:
 4764               	.LBB203:
 4765               	.LBB204:
 4766               	.LBB205:
 4767               	.LBB206:
 4768               		.file 13 "/usr/lib/avr/include/avr/wdt.h"
   1:/usr/lib/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/lib/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/lib/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/lib/avr/include/avr/wdt.h **** 
   5:/usr/lib/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/lib/avr/include/avr/wdt.h **** 
   8:/usr/lib/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/avr/include/avr/wdt.h **** 
  11:/usr/lib/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/avr/include/avr/wdt.h ****      distribution.
  15:/usr/lib/avr/include/avr/wdt.h **** 
  16:/usr/lib/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/lib/avr/include/avr/wdt.h **** 
  20:/usr/lib/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/lib/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/avr/include/avr/wdt.h **** 
  32:/usr/lib/avr/include/avr/wdt.h **** /* $Id$ */
  33:/usr/lib/avr/include/avr/wdt.h **** 
  34:/usr/lib/avr/include/avr/wdt.h **** /*
  35:/usr/lib/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/lib/avr/include/avr/wdt.h ****  */
  37:/usr/lib/avr/include/avr/wdt.h **** 
  38:/usr/lib/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/lib/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/lib/avr/include/avr/wdt.h **** 
  41:/usr/lib/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/lib/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/lib/avr/include/avr/wdt.h **** 
  44:/usr/lib/avr/include/avr/wdt.h **** /** \file */
  45:/usr/lib/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/lib/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/lib/avr/include/avr/wdt.h **** 
  48:/usr/lib/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/lib/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/lib/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/lib/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/lib/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/lib/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/lib/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/lib/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/lib/avr/include/avr/wdt.h **** 
  57:/usr/lib/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/lib/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/lib/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/lib/avr/include/avr/wdt.h **** 
  61:/usr/lib/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/lib/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/lib/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/lib/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/lib/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/lib/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/lib/avr/include/avr/wdt.h ****     the following:
  68:/usr/lib/avr/include/avr/wdt.h **** 
  69:/usr/lib/avr/include/avr/wdt.h ****     \code
  70:/usr/lib/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/lib/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/lib/avr/include/avr/wdt.h **** 
  73:/usr/lib/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/lib/avr/include/avr/wdt.h **** 
  75:/usr/lib/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/lib/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/lib/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/lib/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/lib/avr/include/avr/wdt.h ****     {
  80:/usr/lib/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/lib/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/lib/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/lib/avr/include/avr/wdt.h ****     }
  84:/usr/lib/avr/include/avr/wdt.h ****     \endcode
  85:/usr/lib/avr/include/avr/wdt.h **** 
  86:/usr/lib/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/lib/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/lib/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/lib/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/lib/avr/include/avr/wdt.h **** */
  91:/usr/lib/avr/include/avr/wdt.h **** 
  92:/usr/lib/avr/include/avr/wdt.h **** /**
  93:/usr/lib/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/lib/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/lib/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/lib/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/lib/avr/include/avr/wdt.h **** */
  98:/usr/lib/avr/include/avr/wdt.h **** 
  99:/usr/lib/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/lib/avr/include/avr/wdt.h **** 
 101:/usr/lib/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/lib/avr/include/avr/wdt.h **** 
 103:/usr/lib/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/lib/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/lib/avr/include/avr/wdt.h **** #else
 106:/usr/lib/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/lib/avr/include/avr/wdt.h **** #endif
 108:/usr/lib/avr/include/avr/wdt.h **** 
 109:/usr/lib/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/lib/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/lib/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/lib/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/lib/avr/include/avr/wdt.h **** #else
 114:/usr/lib/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/lib/avr/include/avr/wdt.h **** #endif
 116:/usr/lib/avr/include/avr/wdt.h **** 
 117:/usr/lib/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/lib/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/lib/avr/include/avr/wdt.h **** #else
 120:/usr/lib/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/lib/avr/include/avr/wdt.h **** #endif
 122:/usr/lib/avr/include/avr/wdt.h **** 
 123:/usr/lib/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/lib/avr/include/avr/wdt.h **** 
 125:/usr/lib/avr/include/avr/wdt.h **** 
 126:/usr/lib/avr/include/avr/wdt.h **** /**
 127:/usr/lib/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/lib/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/lib/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/lib/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/lib/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/lib/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/lib/avr/include/avr/wdt.h **** 
 134:/usr/lib/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/lib/avr/include/avr/wdt.h **** */
 136:/usr/lib/avr/include/avr/wdt.h **** 
 137:/usr/lib/avr/include/avr/wdt.h **** 
 138:/usr/lib/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/lib/avr/include/avr/wdt.h **** 
 140:/usr/lib/avr/include/avr/wdt.h **** #if defined (WDT_CTRLA) && !defined(RAMPD)
 141:/usr/lib/avr/include/avr/wdt.h **** 
 142:/usr/lib/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 143:/usr/lib/avr/include/avr/wdt.h **** do { \
 144:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp; \
 145:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 146:/usr/lib/avr/include/avr/wdt.h **** 	"wdr"									"\n\t" \
 147:/usr/lib/avr/include/avr/wdt.h **** 	"out %[ccp_reg], %[ioreg_cen_mask]"		"\n\t" \
 148:/usr/lib/avr/include/avr/wdt.h **** 	"lds %[tmp], %[wdt_reg]"				"\n\t" \
 149:/usr/lib/avr/include/avr/wdt.h **** 	"sbr %[tmp], %[wdt_enable_timeout]"		"\n\t" \
 150:/usr/lib/avr/include/avr/wdt.h **** 	"sts %[wdt_reg], %[tmp]"				"\n\t" \
 151:/usr/lib/avr/include/avr/wdt.h **** 	"1:lds %[tmp], %[wdt_status_reg]"		"\n\t" \
 152:/usr/lib/avr/include/avr/wdt.h **** 	"sbrc %[tmp], %[wdt_syncbusy_bit]"		"\n\t" \
 153:/usr/lib/avr/include/avr/wdt.h **** 	"rjmp 1b"								"\n\t" \
 154:/usr/lib/avr/include/avr/wdt.h **** 	: [tmp]					"=r" (temp) \
 155:/usr/lib/avr/include/avr/wdt.h **** 	: [ccp_reg]				"I"  (_SFR_IO_ADDR(CCP)), \
 156:/usr/lib/avr/include/avr/wdt.h **** 	  [ioreg_cen_mask]		"r"  ((uint8_t)CCP_IOREG_gc), \
 157:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_reg]				"n"  (_SFR_MEM_ADDR(WDT_CTRLA)), \
 158:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_enable_timeout]	"M"  (timeout), \
 159:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_status_reg]		"n"  (_SFR_MEM_ADDR(WDT_STATUS)), \
 160:/usr/lib/avr/include/avr/wdt.h **** 	  [wdt_syncbusy_bit]	"I"  (WDT_SYNCBUSY_bm) \
 161:/usr/lib/avr/include/avr/wdt.h **** ); \
 162:/usr/lib/avr/include/avr/wdt.h **** } while(0)
 163:/usr/lib/avr/include/avr/wdt.h **** 
 164:/usr/lib/avr/include/avr/wdt.h **** #define wdt_disable() \
 165:/usr/lib/avr/include/avr/wdt.h **** do { \
 166:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp; \
 167:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 168:/usr/lib/avr/include/avr/wdt.h **** 	"wdr"								"\n\t" \
 169:/usr/lib/avr/include/avr/wdt.h **** 	"out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 170:/usr/lib/avr/include/avr/wdt.h **** 	"lds %[tmp], %[wdt_reg]"			"\n\t" \
 171:/usr/lib/avr/include/avr/wdt.h **** 	"cbr %[tmp], %[timeout_mask]"       "\n\t" \
 172:/usr/lib/avr/include/avr/wdt.h **** 	"sts %[wdt_reg], %[tmp]"			"\n\t" \
 173:/usr/lib/avr/include/avr/wdt.h ****     : [tmp]            "=r" (temp) \
 174:/usr/lib/avr/include/avr/wdt.h ****     : [ccp_reg]        "I" (_SFR_IO_ADDR(CCP)),       \
 175:/usr/lib/avr/include/avr/wdt.h ****       [ioreg_cen_mask] "r" ((uint8_t)CCP_IOREG_gc),   \
 176:/usr/lib/avr/include/avr/wdt.h ****       [wdt_reg]        "n" (_SFR_MEM_ADDR(WDT_CTRLA)),\
 177:/usr/lib/avr/include/avr/wdt.h ****       [timeout_mask]   "I" (WDT_PERIOD_gm) \
 178:/usr/lib/avr/include/avr/wdt.h **** ); \
 179:/usr/lib/avr/include/avr/wdt.h **** } while(0)
 180:/usr/lib/avr/include/avr/wdt.h **** 
 181:/usr/lib/avr/include/avr/wdt.h **** #else // defined (WDT_CTRLA) && !defined(RAMPD)
 182:/usr/lib/avr/include/avr/wdt.h **** 
 183:/usr/lib/avr/include/avr/wdt.h **** /*
 184:/usr/lib/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 185:/usr/lib/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 186:/usr/lib/avr/include/avr/wdt.h ****    registers to the CCP register
 187:/usr/lib/avr/include/avr/wdt.h **** ** At the same time,
 188:/usr/lib/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 189:/usr/lib/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 190:/usr/lib/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 191:/usr/lib/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 192:/usr/lib/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 193:/usr/lib/avr/include/avr/wdt.h ****    sync is finished).
 194:/usr/lib/avr/include/avr/wdt.h **** */
 195:/usr/lib/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 196:/usr/lib/avr/include/avr/wdt.h **** do { \
 197:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp; \
 198:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 199:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 200:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 201:/usr/lib/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 202:/usr/lib/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 203:/usr/lib/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 204:/usr/lib/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 205:/usr/lib/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 206:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 207:/usr/lib/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 208:/usr/lib/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 209:/usr/lib/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 210:/usr/lib/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 211:/usr/lib/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 212:/usr/lib/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 213:/usr/lib/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 214:/usr/lib/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 215:/usr/lib/avr/include/avr/wdt.h ****     : "r0" \
 216:/usr/lib/avr/include/avr/wdt.h **** ); \
 217:/usr/lib/avr/include/avr/wdt.h **** } while(0)
 218:/usr/lib/avr/include/avr/wdt.h **** 
 219:/usr/lib/avr/include/avr/wdt.h **** #define wdt_disable() \
 220:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 221:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 222:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 223:/usr/lib/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 224:/usr/lib/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 225:/usr/lib/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 226:/usr/lib/avr/include/avr/wdt.h ****     : \
 227:/usr/lib/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 228:/usr/lib/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 229:/usr/lib/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 230:/usr/lib/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 231:/usr/lib/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 232:/usr/lib/avr/include/avr/wdt.h ****     : "r0" \
 233:/usr/lib/avr/include/avr/wdt.h **** );
 234:/usr/lib/avr/include/avr/wdt.h **** 
 235:/usr/lib/avr/include/avr/wdt.h **** #endif // defined (WDT_CTRLA) && !defined(RAMPD)
 236:/usr/lib/avr/include/avr/wdt.h **** 
 237:/usr/lib/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 238:/usr/lib/avr/include/avr/wdt.h **** 
 239:/usr/lib/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 240:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 241:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 242:/usr/lib/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 243:/usr/lib/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 244:/usr/lib/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 245:/usr/lib/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 246:/usr/lib/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 247:/usr/lib/avr/include/avr/wdt.h ****     : /* no outputs */  \
 248:/usr/lib/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 249:/usr/lib/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 250:/usr/lib/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 251:/usr/lib/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 252:/usr/lib/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 253:/usr/lib/avr/include/avr/wdt.h ****     : "r16" \
 254:/usr/lib/avr/include/avr/wdt.h **** )
 255:/usr/lib/avr/include/avr/wdt.h **** 
 256:/usr/lib/avr/include/avr/wdt.h **** #define wdt_disable() \
 257:/usr/lib/avr/include/avr/wdt.h **** do { \
 258:/usr/lib/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 259:/usr/lib/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 260:/usr/lib/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 261:/usr/lib/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 262:/usr/lib/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 263:/usr/lib/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 264:/usr/lib/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 265:/usr/lib/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 266:/usr/lib/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 267:/usr/lib/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 268:/usr/lib/avr/include/avr/wdt.h ****     : /*no output */ \
 269:/usr/lib/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 270:/usr/lib/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 271:/usr/lib/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 272:/usr/lib/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 273:/usr/lib/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 274:/usr/lib/avr/include/avr/wdt.h ****     : "r16" \
 275:/usr/lib/avr/include/avr/wdt.h **** ); \
 276:/usr/lib/avr/include/avr/wdt.h **** }while(0)
 277:/usr/lib/avr/include/avr/wdt.h **** 
 278:/usr/lib/avr/include/avr/wdt.h **** #elif defined(CCP)
 279:/usr/lib/avr/include/avr/wdt.h **** 
 280:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 281:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 282:/usr/lib/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 283:/usr/lib/avr/include/avr/wdt.h **** {
 284:/usr/lib/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 285:/usr/lib/avr/include/avr/wdt.h **** 	{
 286:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 287:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 288:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 289:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 290:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 291:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 292:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 293:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 294:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 295:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 296:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 297:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 298:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 299:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 300:/usr/lib/avr/include/avr/wdt.h **** 			);
 301:/usr/lib/avr/include/avr/wdt.h **** 	}
 302:/usr/lib/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 303:/usr/lib/avr/include/avr/wdt.h **** 	{
 304:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 305:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 306:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 307:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 308:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 309:/usr/lib/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 310:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 311:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 312:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 313:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 314:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 315:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 316:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 317:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 318:/usr/lib/avr/include/avr/wdt.h **** 			);
 319:/usr/lib/avr/include/avr/wdt.h **** 	}
 320:/usr/lib/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 321:/usr/lib/avr/include/avr/wdt.h **** 	{
 322:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 323:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 324:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 325:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 326:/usr/lib/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 327:/usr/lib/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 328:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 330:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 331:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 334:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 335:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 336:/usr/lib/avr/include/avr/wdt.h **** 			);
 337:/usr/lib/avr/include/avr/wdt.h **** 	}
 338:/usr/lib/avr/include/avr/wdt.h **** 	else
 339:/usr/lib/avr/include/avr/wdt.h ****  	{
 340:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 341:/usr/lib/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 342:/usr/lib/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 343:/usr/lib/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 344:/usr/lib/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 345:/usr/lib/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 346:/usr/lib/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 347:/usr/lib/avr/include/avr/wdt.h **** 			: /* no outputs */
 348:/usr/lib/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 349:/usr/lib/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 350:/usr/lib/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 351:/usr/lib/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 352:/usr/lib/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 353:/usr/lib/avr/include/avr/wdt.h **** 			: "r0"
 354:/usr/lib/avr/include/avr/wdt.h **** 			);
 355:/usr/lib/avr/include/avr/wdt.h **** 	}
 356:/usr/lib/avr/include/avr/wdt.h **** }
 357:/usr/lib/avr/include/avr/wdt.h **** 
 358:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 359:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 360:/usr/lib/avr/include/avr/wdt.h **** void wdt_disable (void)
 361:/usr/lib/avr/include/avr/wdt.h **** {
 362:/usr/lib/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 363:/usr/lib/avr/include/avr/wdt.h **** 	{
 364:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 365:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 366:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 367:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 368:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 369:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 370:/usr/lib/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 371:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 372:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 373:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 374:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 375:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 376:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 377:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 378:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 379:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 380:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 381:/usr/lib/avr/include/avr/wdt.h **** 				);
 382:/usr/lib/avr/include/avr/wdt.h **** 	}
 383:/usr/lib/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 384:/usr/lib/avr/include/avr/wdt.h **** 	{
 385:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 386:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 387:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 388:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 389:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 390:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 391:/usr/lib/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 392:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 393:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 394:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 395:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 396:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 397:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 398:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 399:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 400:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 401:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 402:/usr/lib/avr/include/avr/wdt.h **** 				);
 403:/usr/lib/avr/include/avr/wdt.h **** 	}
 404:/usr/lib/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 405:/usr/lib/avr/include/avr/wdt.h **** 	{
 406:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 407:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 408:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 409:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 410:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 411:/usr/lib/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 412:/usr/lib/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 413:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 414:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 415:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 416:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 417:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 418:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 419:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 420:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 421:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 422:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 423:/usr/lib/avr/include/avr/wdt.h **** 				);
 424:/usr/lib/avr/include/avr/wdt.h **** 	}
 425:/usr/lib/avr/include/avr/wdt.h **** 	else
 426:/usr/lib/avr/include/avr/wdt.h **** 	{
 427:/usr/lib/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 428:/usr/lib/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 429:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/lib/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 433:/usr/lib/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 434:/usr/lib/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 435:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 436:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 437:/usr/lib/avr/include/avr/wdt.h **** 				: /*no output */
 438:/usr/lib/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 439:/usr/lib/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 440:/usr/lib/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 441:/usr/lib/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 442:/usr/lib/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 443:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 444:/usr/lib/avr/include/avr/wdt.h **** 				);
 445:/usr/lib/avr/include/avr/wdt.h **** 	}
 446:/usr/lib/avr/include/avr/wdt.h **** }
 447:/usr/lib/avr/include/avr/wdt.h **** 
 448:/usr/lib/avr/include/avr/wdt.h **** #else
 449:/usr/lib/avr/include/avr/wdt.h **** 
 450:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 451:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 452:/usr/lib/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 453:/usr/lib/avr/include/avr/wdt.h **** {
 454:/usr/lib/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 455:/usr/lib/avr/include/avr/wdt.h **** 	{
 456:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 457:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 458:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 459:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 460:/usr/lib/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 461:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 462:/usr/lib/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 463:/usr/lib/avr/include/avr/wdt.h **** 				: /* no outputs */
 464:/usr/lib/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 465:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 466:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 467:/usr/lib/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 468:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 469:/usr/lib/avr/include/avr/wdt.h **** 		);
 470:/usr/lib/avr/include/avr/wdt.h **** 	}
 471:/usr/lib/avr/include/avr/wdt.h **** 	else
 472:/usr/lib/avr/include/avr/wdt.h **** 	{
 473:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 474:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 475:/usr/lib/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 476:/usr/lib/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 477:/usr/lib/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 478:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 479:/usr/lib/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 480:/usr/lib/avr/include/avr/wdt.h **** 				: /* no outputs */
 481:/usr/lib/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 482:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 483:/usr/lib/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 484:/usr/lib/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 485:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 486:/usr/lib/avr/include/avr/wdt.h **** 		);
 487:/usr/lib/avr/include/avr/wdt.h **** 	}
 488:/usr/lib/avr/include/avr/wdt.h **** }
 489:/usr/lib/avr/include/avr/wdt.h **** 
 490:/usr/lib/avr/include/avr/wdt.h **** static __inline__
 491:/usr/lib/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 492:/usr/lib/avr/include/avr/wdt.h **** void wdt_disable (void)
 493:/usr/lib/avr/include/avr/wdt.h **** {
 494:/usr/lib/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 495:/usr/lib/avr/include/avr/wdt.h **** 	{
 496:/usr/lib/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 497:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 498:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 499:/usr/lib/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 500:/usr/lib/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 501:/usr/lib/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 502:/usr/lib/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 503:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 504:/usr/lib/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 505:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 506:/usr/lib/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 507:/usr/lib/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 508:/usr/lib/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 509:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 510:/usr/lib/avr/include/avr/wdt.h **** 		);
 511:/usr/lib/avr/include/avr/wdt.h **** 	}
 512:/usr/lib/avr/include/avr/wdt.h **** 	else
 513:/usr/lib/avr/include/avr/wdt.h **** 	{
 514:/usr/lib/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 515:/usr/lib/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 516:/usr/lib/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 517:/usr/lib/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 518:/usr/lib/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 519:/usr/lib/avr/include/avr/wdt.h **** 				"lds %[TEMPREG],%[WDTREG]"   "\n\t"
 520:/usr/lib/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 521:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMPREG]"   "\n\t"
 522:/usr/lib/avr/include/avr/wdt.h **** 				"sts %[WDTREG],__zero_reg__" "\n\t"
 523:/usr/lib/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 524:/usr/lib/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 525:/usr/lib/avr/include/avr/wdt.h **** 				: [WDTREG]  "n"  (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 526:/usr/lib/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 527:/usr/lib/avr/include/avr/wdt.h **** 				: "r0"
 528:/usr/lib/avr/include/avr/wdt.h **** 		);
 4769               		.loc 13 528 0
 4770               	/* #APP */
 4771               	 ;  528 "/usr/lib/avr/include/avr/wdt.h" 1
 4772 0000 0FB6      		in __tmp_reg__,__SREG__
 4773 0002 F894      		cli
 4774 0004 A895      		wdr
 4775 0006 8091 6000 		lds r24,96
 4776 000a 8861      		ori r24,24
 4777 000c 8093 6000 		sts 96,r24
 4778 0010 1092 6000 		sts 96,__zero_reg__
 4779 0014 0FBE      		out __SREG__,__tmp_reg__
 4780               		
 4781               	 ;  0 "" 2
 4782               	/* #NOAPP */
 4783               	.LBE206:
 4784               	.LBE205:
  21:Atmega2560Hardware.h ****       avr_uart_init();
 4785               		.loc 9 21 0
 4786 0016 0E94 0000 		call avr_time_init
 4787               	.LVL342:
  22:Atmega2560Hardware.h ****       sei();
 4788               		.loc 9 22 0
 4789 001a 0E94 0000 		call avr_uart_init
 4790               	.LVL343:
  23:Atmega2560Hardware.h ****     }
 4791               		.loc 9 23 0
 4792               	/* #APP */
 4793               	 ;  23 "Atmega2560Hardware.h" 1
 4794 001e 7894      		sei
 4795               	 ;  0 "" 2
 4796               	/* #NOAPP */
 4797               	.LBE204:
 4798               	.LBE203:
 139:./ros_lib/ros/node_handle.h ****     bytes_ = 0;
 4799               		.loc 7 139 0
 4800 0020 1092 0000 		sts nh+1143+1,__zero_reg__
 4801 0024 1092 0000 		sts nh+1143,__zero_reg__
 140:./ros_lib/ros/node_handle.h ****     index_ = 0;
 4802               		.loc 7 140 0
 4803 0028 1092 0000 		sts nh+1145+1,__zero_reg__
 4804 002c 1092 0000 		sts nh+1145,__zero_reg__
 141:./ros_lib/ros/node_handle.h ****     topic_ = 0;
 4805               		.loc 7 141 0
 4806 0030 1092 0000 		sts nh+1149+1,__zero_reg__
 4807 0034 1092 0000 		sts nh+1149,__zero_reg__
 142:./ros_lib/ros/node_handle.h ****   };
 4808               		.loc 7 142 0
 4809 0038 1092 0000 		sts nh+1147+1,__zero_reg__
 4810 003c 1092 0000 		sts nh+1147,__zero_reg__
 4811               	.LVL344:
 4812 0040 E0E0      		ldi r30,lo8(nh+1093)
 4813 0042 F0E0      		ldi r31,hi8(nh+1093)
 4814               	.LBE202:
 4815               	.LBE201:
 4816               	.LBB207:
 4817               	.LBB208:
 415:./ros_lib/ros/node_handle.h ****     {
 4818               		.loc 7 415 0
 4819 0044 80E0      		ldi r24,0
 4820 0046 90E0      		ldi r25,0
 4821               	.LVL345:
 4822               	.L130:
 417:./ros_lib/ros/node_handle.h ****       {
 4823               		.loc 7 417 0
 4824 0048 2191      		ld r18,Z+
 4825 004a 3191      		ld r19,Z+
 4826 004c 232B      		or r18,r19
 4827 004e 01F4      		brne .L128
 419:./ros_lib/ros/node_handle.h ****         s.id_ = i + 100;
 4828               		.loc 7 419 0
 4829 0050 FC01      		movw r30,r24
 4830 0052 EE0F      		lsl r30
 4831 0054 FF1F      		rol r31
 4832 0056 E050      		subi r30,lo8(-(nh+1093))
 4833 0058 F040      		sbci r31,hi8(-(nh+1093))
 4834 005a 20E0      		ldi r18,lo8(sub)
 4835 005c 30E0      		ldi r19,hi8(sub)
 4836 005e 3183      		std Z+1,r19
 4837 0060 2083      		st Z,r18
 420:./ros_lib/ros/node_handle.h ****         return true;
 4838               		.loc 7 420 0
 4839 0062 8C59      		subi r24,-100
 4840 0064 9F4F      		sbci r25,-1
 4841               	.LVL346:
 4842 0066 9093 0000 		sts sub+2+1,r25
 4843 006a 8093 0000 		sts sub+2,r24
 4844 006e 00C0      		rjmp .L129
 4845               	.LVL347:
 4846               	.L128:
 415:./ros_lib/ros/node_handle.h ****     {
 4847               		.loc 7 415 0
 4848 0070 0196      		adiw r24,1
 4849               	.LVL348:
 4850 0072 8931      		cpi r24,25
 4851 0074 9105      		cpc r25,__zero_reg__
 4852 0076 01F4      		brne .L130
 4853               	.LVL349:
 4854               	.L129:
 4855               	.LBE208:
 4856               	.LBE207:
  38:avr_subscriber.cpp **** 
 4857               		.loc 8 38 0
 4858 0078 0E94 0000 		call _Z7InitAllv
 4859               	.LVL350:
 4860               	.L131:
  49:avr_subscriber.cpp ****   }
 4861               		.loc 8 49 0 discriminator 1
 4862 007c 80E0      		ldi r24,lo8(nh)
 4863 007e 90E0      		ldi r25,hi8(nh)
 4864 0080 0E94 0000 		call _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4865               	.LVL351:
 4866 0084 00C0      		rjmp .L131
 4867               		.cfi_endproc
 4868               	.LFE151:
 4870               		.section	.rodata.str1.1
 4871               	.LC11:
 4872 012f 7365 745F 		.string	"set_speed"
 4872      7370 6565 
 4872      6400 
 4873               		.section	.text.startup
 4875               	_GLOBAL__sub_I___cxa_pure_virtual:
 4876               	.LFB177:
  66:avr_subscriber.cpp **** }
 4877               		.loc 8 66 0
 4878               		.cfi_startproc
 4879               	/* prologue: function */
 4880               	/* frame size = 0 */
 4881               	/* stack size = 0 */
 4882               	.L__stack_usage = 0
 4883               	.LVL352:
 4884               	.LBB233:
 4885               	.LBB234:
 4886               	.LBB235:
 4887               	.LBB236:
 106:./ros_lib/ros/node_handle.h **** {
 4888               		.loc 7 106 0
 4889 0086 E0E0      		ldi r30,lo8(nh)
 4890 0088 F0E0      		ldi r31,hi8(nh)
 4891 008a 80E0      		ldi r24,lo8(_ZTVN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EEE+4)
 4892 008c 90E0      		ldi r25,hi8(_ZTVN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EEE+4)
 4893 008e 9183      		std Z+1,r25
 4894 0090 8083      		st Z,r24
 4895 0092 1382      		std Z+3,__zero_reg__
 4896 0094 1482      		std Z+4,__zero_reg__
 4897 0096 1582      		std Z+5,__zero_reg__
 4898 0098 1682      		std Z+6,__zero_reg__
 4899 009a 1782      		std Z+7,__zero_reg__
 4900 009c 1086      		std Z+8,__zero_reg__
 4901 009e 1186      		std Z+9,__zero_reg__
 4902 00a0 1286      		std Z+10,__zero_reg__
 4903 00a2 1386      		std Z+11,__zero_reg__
 4904 00a4 1486      		std Z+12,__zero_reg__
 4905 00a6 1586      		std Z+13,__zero_reg__
 4906 00a8 1686      		std Z+14,__zero_reg__
 4907 00aa 1786      		std Z+15,__zero_reg__
 4908 00ac 108A      		std Z+16,__zero_reg__
 4909 00ae 118A      		std Z+17,__zero_reg__
 4910 00b0 128A      		std Z+18,__zero_reg__
 4911 00b2 80E0      		ldi r24,0
 4912 00b4 92E0      		ldi r25,lo8(2)
 4913 00b6 E0E0      		ldi r30,lo8(nh+19)
 4914 00b8 F0E0      		ldi r31,hi8(nh+19)
 4915 00ba DF01      		movw r26,r30
 4916 00bc 9C01      		movw r18,r24
 4917               		0:
 4918 00be 1D92      		st X+,__zero_reg__
 4919 00c0 2150      		subi r18,1
 4920 00c2 3040      		sbci r19,0
 4921 00c4 01F4      		brne 0b
 4922 00c6 E0E0      		ldi r30,lo8(nh+531)
 4923 00c8 F0E0      		ldi r31,hi8(nh+531)
 4924 00ca DF01      		movw r26,r30
 4925 00cc 9C01      		movw r18,r24
 4926               		0:
 4927 00ce 1D92      		st X+,__zero_reg__
 4928 00d0 2150      		subi r18,1
 4929 00d2 3040      		sbci r19,0
 4930 00d4 01F4      		brne 0b
 4931 00d6 82E3      		ldi r24,lo8(50)
 4932 00d8 E0E0      		ldi r30,lo8(nh+1043)
 4933 00da F0E0      		ldi r31,hi8(nh+1043)
 4934 00dc DF01      		movw r26,r30
 4935 00de 282F      		mov r18,r24
 4936               		0:
 4937 00e0 1D92      		st X+,__zero_reg__
 4938 00e2 2A95      		dec r18
 4939 00e4 01F4      		brne 0b
 4940 00e6 E0E0      		ldi r30,lo8(nh+1093)
 4941 00e8 F0E0      		ldi r31,hi8(nh+1093)
 4942 00ea DF01      		movw r26,r30
 4943               		0:
 4944 00ec 1D92      		st X+,__zero_reg__
 4945 00ee 8A95      		dec r24
 4946 00f0 01F4      		brne 0b
 4947 00f2 1092 0000 		sts nh+1143+1,__zero_reg__
 4948 00f6 1092 0000 		sts nh+1143,__zero_reg__
 4949 00fa 1092 0000 		sts nh+1145+1,__zero_reg__
 4950 00fe 1092 0000 		sts nh+1145,__zero_reg__
 4951 0102 1092 0000 		sts nh+1147+1,__zero_reg__
 4952 0106 1092 0000 		sts nh+1147,__zero_reg__
 4953 010a 1092 0000 		sts nh+1149+1,__zero_reg__
 4954 010e 1092 0000 		sts nh+1149,__zero_reg__
 4955 0112 1092 0000 		sts nh+1151+1,__zero_reg__
 4956 0116 1092 0000 		sts nh+1151,__zero_reg__
 4957 011a 1092 0000 		sts nh+1153,__zero_reg__
 4958 011e 1092 0000 		sts nh+1154,__zero_reg__
 4959 0122 1092 0000 		sts nh+1154+1,__zero_reg__
 4960 0126 1092 0000 		sts nh+1154+2,__zero_reg__
 4961 012a 1092 0000 		sts nh+1154+3,__zero_reg__
 4962 012e 1092 0000 		sts nh+1158,__zero_reg__
 4963 0132 1092 0000 		sts nh+1158+1,__zero_reg__
 4964 0136 1092 0000 		sts nh+1158+2,__zero_reg__
 4965 013a 1092 0000 		sts nh+1158+3,__zero_reg__
 4966 013e 1092 0000 		sts nh+1162,__zero_reg__
 4967 0142 1092 0000 		sts nh+1162+1,__zero_reg__
 4968 0146 1092 0000 		sts nh+1162+2,__zero_reg__
 4969 014a 1092 0000 		sts nh+1162+3,__zero_reg__
 4970 014e 1092 0000 		sts nh+1166,__zero_reg__
 4971               	.LVL353:
 4972               	.LBB237:
 4973               	.LBB238:
  74:./ros_lib/rosserial_msgs/RequestParam.h ****     {
 4974               		.loc 4 74 0
 4975 0152 80E0      		ldi r24,lo8(_ZTVN14rosserial_msgs20RequestParamResponseE+4)
 4976 0154 90E0      		ldi r25,hi8(_ZTVN14rosserial_msgs20RequestParamResponseE+4)
 4977 0156 9093 0000 		sts nh+1167+1,r25
 4978 015a 8093 0000 		sts nh+1167,r24
 4979 015e 1092 0000 		sts nh+1169,__zero_reg__
 4980 0162 1092 0000 		sts nh+1169+1,__zero_reg__
 4981 0166 1092 0000 		sts nh+1169+2,__zero_reg__
 4982 016a 1092 0000 		sts nh+1169+3,__zero_reg__
 4983 016e 1092 0000 		sts nh+1173,__zero_reg__
 4984 0172 1092 0000 		sts nh+1173+1,__zero_reg__
 4985 0176 1092 0000 		sts nh+1173+2,__zero_reg__
 4986 017a 1092 0000 		sts nh+1173+3,__zero_reg__
 4987 017e 1092 0000 		sts nh+1177+1,__zero_reg__
 4988 0182 1092 0000 		sts nh+1177,__zero_reg__
 4989 0186 1092 0000 		sts nh+1179,__zero_reg__
 4990 018a 1092 0000 		sts nh+1179+1,__zero_reg__
 4991 018e 1092 0000 		sts nh+1179+2,__zero_reg__
 4992 0192 1092 0000 		sts nh+1179+3,__zero_reg__
 4993 0196 1092 0000 		sts nh+1183,__zero_reg__
 4994 019a 1092 0000 		sts nh+1183+1,__zero_reg__
 4995 019e 1092 0000 		sts nh+1183+2,__zero_reg__
 4996 01a2 1092 0000 		sts nh+1183+3,__zero_reg__
 4997 01a6 1092 0000 		sts nh+1187+1,__zero_reg__
 4998 01aa 1092 0000 		sts nh+1187,__zero_reg__
 4999 01ae 1092 0000 		sts nh+1189,__zero_reg__
 5000 01b2 1092 0000 		sts nh+1189+1,__zero_reg__
 5001 01b6 1092 0000 		sts nh+1189+2,__zero_reg__
 5002 01ba 1092 0000 		sts nh+1189+3,__zero_reg__
 5003 01be 1092 0000 		sts nh+1193+1,__zero_reg__
 5004 01c2 1092 0000 		sts nh+1193,__zero_reg__
 5005 01c6 1092 0000 		sts nh+1195+1,__zero_reg__
 5006 01ca 1092 0000 		sts nh+1195,__zero_reg__
 5007               	.LVL354:
 5008               	.LBE238:
 5009               	.LBE237:
 5010               	.LBE236:
 5011               	.LBE235:
 5012               	.LBB239:
 5013               	.LBB240:
 109:./ros_lib/ros/subscriber.h ****   {
 5014               		.loc 6 109 0
 5015 01ce E0E0      		ldi r30,lo8(sub)
 5016 01d0 F0E0      		ldi r31,hi8(sub)
 5017 01d2 80E0      		ldi r24,lo8(_ZTVN3ros10SubscriberIN10kitty_msgs10KittyStateEvEE+4)
 5018 01d4 90E0      		ldi r25,hi8(_ZTVN3ros10SubscriberIN10kitty_msgs10KittyStateEvEE+4)
 5019 01d6 9183      		std Z+1,r25
 5020 01d8 8083      		st Z,r24
 5021               	.LVL355:
 5022               	.LBB241:
 5023               	.LBB242:
  26:./ros_lib/kitty_msgs/KittyState.h ****     {
 5024               		.loc 5 26 0
 5025 01da 80E0      		ldi r24,lo8(_ZTVN10kitty_msgs10KittyStateE+4)
 5026 01dc 90E0      		ldi r25,hi8(_ZTVN10kitty_msgs10KittyStateE+4)
 5027 01de 9783      		std Z+7,r25
 5028 01e0 8683      		std Z+6,r24
 5029               	.LVL356:
 5030               	.LBB243:
 5031               	.LBB244:
 5032               		.loc 12 51 0
 5033 01e2 1086      		std Z+8,__zero_reg__
 5034 01e4 1186      		std Z+9,__zero_reg__
 5035 01e6 1286      		std Z+10,__zero_reg__
 5036 01e8 1386      		std Z+11,__zero_reg__
 5037 01ea 1486      		std Z+12,__zero_reg__
 5038 01ec 1586      		std Z+13,__zero_reg__
 5039 01ee 1686      		std Z+14,__zero_reg__
 5040 01f0 1786      		std Z+15,__zero_reg__
 5041               	.LVL357:
 5042               	.LBE244:
 5043               	.LBE243:
  26:./ros_lib/kitty_msgs/KittyState.h ****     {
 5044               		.loc 5 26 0
 5045 01f2 108A      		std Z+16,__zero_reg__
 5046 01f4 118A      		std Z+17,__zero_reg__
 5047 01f6 128A      		std Z+18,__zero_reg__
 5048 01f8 138A      		std Z+19,__zero_reg__
 5049 01fa 148A      		std Z+20,__zero_reg__
 5050 01fc 158A      		std Z+21,__zero_reg__
 5051 01fe 168A      		std Z+22,__zero_reg__
 5052 0200 178A      		std Z+23,__zero_reg__
 5053               	.LVL358:
 5054               	.LBE242:
 5055               	.LBE241:
 109:./ros_lib/ros/subscriber.h ****   {
 5056               		.loc 6 109 0
 5057 0202 80E0      		ldi r24,lo8(gs(_Z9messageCbRKN10kitty_msgs10KittyStateE))
 5058 0204 90E0      		ldi r25,hi8(gs(_Z9messageCbRKN10kitty_msgs10KittyStateE))
 5059 0206 918F      		std Z+25,r25
 5060 0208 808F      		std Z+24,r24
 5061 020a 81E0      		ldi r24,lo8(1)
 5062 020c 90E0      		ldi r25,0
 5063 020e 938F      		std Z+27,r25
 5064 0210 828F      		std Z+26,r24
 111:./ros_lib/ros/subscriber.h ****   };
 5065               		.loc 6 111 0
 5066 0212 80E0      		ldi r24,lo8(.LC11)
 5067 0214 90E0      		ldi r25,hi8(.LC11)
 5068 0216 9583      		std Z+5,r25
 5069 0218 8483      		std Z+4,r24
 5070               	.LVL359:
 5071 021a 0895      		ret
 5072               	.LBE240:
 5073               	.LBE239:
 5074               	.LBE234:
 5075               	.LBE233:
 5076               		.cfi_endproc
 5077               	.LFE177:
 5079               		.global __do_global_ctors
 5080               		.section .ctors,"a",@progbits
 5081               		.p2align	1
 5082 0000 0000      		.word	gs(_GLOBAL__sub_I___cxa_pure_virtual)
 5083               		.weak	_ZTVN8std_msgs4TimeE
 5084               		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",@progbits,_ZTVN8std_msgs4TimeE,comdat
 5087               	_ZTVN8std_msgs4TimeE:
 5088 0000 0000      		.word	0
 5089 0002 0000      		.word	0
 5090 0004 0000      		.word	gs(_ZNK8std_msgs4Time9serializeEPh)
 5091 0006 0000      		.word	gs(_ZN8std_msgs4Time11deserializeEPh)
 5092 0008 0000      		.word	gs(_ZN8std_msgs4Time7getTypeEv)
 5093 000a 0000      		.word	gs(_ZN8std_msgs4Time6getMD5Ev)
 5094               		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5095               		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",@progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5098               	_ZTVN14rosserial_msgs9TopicInfoE:
 5099 0000 0000      		.word	0
 5100 0002 0000      		.word	0
 5101 0004 0000      		.word	gs(_ZNK14rosserial_msgs9TopicInfo9serializeEPh)
 5102 0006 0000      		.word	gs(_ZN14rosserial_msgs9TopicInfo11deserializeEPh)
 5103 0008 0000      		.word	gs(_ZN14rosserial_msgs9TopicInfo7getTypeEv)
 5104 000a 0000      		.word	gs(_ZN14rosserial_msgs9TopicInfo6getMD5Ev)
 5105               		.weak	_ZTVN14rosserial_msgs3LogE
 5106               		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",@progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5109               	_ZTVN14rosserial_msgs3LogE:
 5110 0000 0000      		.word	0
 5111 0002 0000      		.word	0
 5112 0004 0000      		.word	gs(_ZNK14rosserial_msgs3Log9serializeEPh)
 5113 0006 0000      		.word	gs(_ZN14rosserial_msgs3Log11deserializeEPh)
 5114 0008 0000      		.word	gs(_ZN14rosserial_msgs3Log7getTypeEv)
 5115 000a 0000      		.word	gs(_ZN14rosserial_msgs3Log6getMD5Ev)
 5116               		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5117               		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",@progbits,_ZTVN14rosserial_msgs
 5120               	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5121 0000 0000      		.word	0
 5122 0002 0000      		.word	0
 5123 0004 0000      		.word	gs(_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh)
 5124 0006 0000      		.word	gs(_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh)
 5125 0008 0000      		.word	gs(_ZN14rosserial_msgs20RequestParamResponse7getTypeEv)
 5126 000a 0000      		.word	gs(_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev)
 5127               		.weak	_ZTVN10kitty_msgs10KittyStateE
 5128               		.section	.rodata._ZTVN10kitty_msgs10KittyStateE,"aG",@progbits,_ZTVN10kitty_msgs10KittyStateE,comd
 5131               	_ZTVN10kitty_msgs10KittyStateE:
 5132 0000 0000      		.word	0
 5133 0002 0000      		.word	0
 5134 0004 0000      		.word	gs(_ZNK10kitty_msgs10KittyState9serializeEPh)
 5135 0006 0000      		.word	gs(_ZN10kitty_msgs10KittyState11deserializeEPh)
 5136 0008 0000      		.word	gs(_ZN10kitty_msgs10KittyState7getTypeEv)
 5137 000a 0000      		.word	gs(_ZN10kitty_msgs10KittyState6getMD5Ev)
 5138               		.weak	_ZTVN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EEE
 5139               		.section	.rodata._ZTVN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EEE,"aG",@progbit
 5142               	_ZTVN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EEE:
 5143 0000 0000      		.word	0
 5144 0002 0000      		.word	0
 5145 0004 0000      		.word	gs(_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE)
 5146 0006 0000      		.word	gs(_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8spinOnceEv)
 5147 0008 0000      		.word	gs(_ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE9connectedEv)
 5148               		.weak	_ZTVN3ros10SubscriberIN10kitty_msgs10KittyStateEvEE
 5149               		.section	.rodata._ZTVN3ros10SubscriberIN10kitty_msgs10KittyStateEvEE,"aG",@progbits,_ZTVN3ros10Sub
 5152               	_ZTVN3ros10SubscriberIN10kitty_msgs10KittyStateEvEE:
 5153 0000 0000      		.word	0
 5154 0002 0000      		.word	0
 5155 0004 0000      		.word	gs(_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE8callbackEPh)
 5156 0006 0000      		.word	gs(_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE15getEndpointTypeEv)
 5157 0008 0000      		.word	gs(_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE10getMsgTypeEv)
 5158 000a 0000      		.word	gs(_ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE9getMsgMD5Ev)
 5159               	.global	sub
 5160               		.section .bss
 5163               	sub:
 5164 0000 0000 0000 		.zero	28
 5164      0000 0000 
 5164      0000 0000 
 5164      0000 0000 
 5164      0000 0000 
 5165               	.global	nh
 5168               	nh:
 5169 001c 0000 0000 		.zero	1197
 5169      0000 0000 
 5169      0000 0000 
 5169      0000 0000 
 5169      0000 0000 
 5170               		.section	.rodata
 5173               	_ZN14rosserial_msgsL12REQUESTPARAME:
 5174 0000 726F 7373 		.string	"rosserial_msgs/RequestParam"
 5174      6572 6961 
 5174      6C5F 6D73 
 5174      6773 2F52 
 5174      6571 7565 
 5175               		.text
 5176               	.Letext0:
 5177               		.file 14 "/usr/lib/avr/include/stdint.h"
 5178               		.file 15 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 5179               		.file 16 "./ros_lib/ros/duration.h"
 5180               		.file 17 "./ros_lib/ros/publisher.h"
 5181               		.file 18 "ros.h"
 5182               		.file 19 "dc_step/dc_motor.h"
 5183               		.file 20 "dc_step/st_mot.h"
 5184               		.file 21 "avr_uart.h"
 5185               		.file 22 "dc_step/adc.h"
 5186               		.file 23 "/usr/lib/avr/include/stdlib.h"
 5187               		.file 24 "avr_time.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 avr_subscriber.cpp
     /tmp/cc25fjNA.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc25fjNA.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc25fjNA.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc25fjNA.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cc25fjNA.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc25fjNA.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc25fjNA.s:14     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
     /tmp/cc25fjNA.s:79     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
     /tmp/cc25fjNA.s:181    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/cc25fjNA.s:204    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/cc25fjNA.s:227    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/cc25fjNA.s:251    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/cc25fjNA.s:274    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/cc25fjNA.s:298    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/cc25fjNA.s:318    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/cc25fjNA.s:5173   .rodata:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/cc25fjNA.s:342    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/cc25fjNA.s:362    .text._ZNK10kitty_msgs10KittyState9serializeEPh:0000000000000000 _ZNK10kitty_msgs10KittyState9serializeEPh
     /tmp/cc25fjNA.s:471    .text._ZN10kitty_msgs10KittyState11deserializeEPh:0000000000000000 _ZN10kitty_msgs10KittyState11deserializeEPh
     /tmp/cc25fjNA.s:598    .text._ZN10kitty_msgs10KittyState7getTypeEv:0000000000000000 _ZN10kitty_msgs10KittyState7getTypeEv
     /tmp/cc25fjNA.s:621    .text._ZN10kitty_msgs10KittyState6getMD5Ev:0000000000000000 _ZN10kitty_msgs10KittyState6getMD5Ev
     /tmp/cc25fjNA.s:641    .text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE8callbackEPh:0000000000000000 _ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE8callbackEPh
     /tmp/cc25fjNA.s:698    .text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE15getEndpointTypeEv:0000000000000000 _ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE15getEndpointTypeEv
     /tmp/cc25fjNA.s:719    .text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE10getMsgTypeEv:0000000000000000 _ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE10getMsgTypeEv
     /tmp/cc25fjNA.s:739    .text._ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE9getMsgMD5Ev:0000000000000000 _ZN3ros10SubscriberIN10kitty_msgs10KittyStateEvE9getMsgMD5Ev
     /tmp/cc25fjNA.s:759    .text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE9connectedEv
     /tmp/cc25fjNA.s:784    .text:0000000000000000 _Z9messageCbRKN10kitty_msgs10KittyStateE
     /tmp/cc25fjNA.s:832    .text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/cc25fjNA.s:5109   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
     /tmp/cc25fjNA.s:1108   .text:0000000000000022 __cxa_pure_virtual
     /tmp/cc25fjNA.s:1122   .text:0000000000000024 _Z7InitAllv
     /tmp/cc25fjNA.s:1170   .text._ZN3ros3Msg8varToArrIPhmEEvT_T0_:0000000000000000 _ZN3ros3Msg8varToArrIPhmEEvT_T0_
     /tmp/cc25fjNA.s:1240   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
     /tmp/cc25fjNA.s:1603   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
     /tmp/cc25fjNA.s:1701   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
     /tmp/cc25fjNA.s:1928   .text._ZN3ros3Msg8arrToVarImPhEEvRT_T0_:0000000000000000 _ZN3ros3Msg8arrToVarImPhEEvRT_T0_
     /tmp/cc25fjNA.s:2015   .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
     /tmp/cc25fjNA.s:2198   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
     /tmp/cc25fjNA.s:2574   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
     /tmp/cc25fjNA.s:3215   .text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/cc25fjNA.s:5087   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
     /tmp/cc25fjNA.s:3331   .text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:0000000000000000 _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/cc25fjNA.s:5098   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
     /tmp/cc25fjNA.s:3665   .text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:0000000000000000 _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/cc25fjNA.s:3950   .text._ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/cc25fjNA.s:4753   .text.startup:0000000000000000 main
     /tmp/cc25fjNA.s:5168   .bss:000000000000001c nh
     /tmp/cc25fjNA.s:5163   .bss:0000000000000000 sub
     /tmp/cc25fjNA.s:4875   .text.startup:0000000000000086 _GLOBAL__sub_I___cxa_pure_virtual
     /tmp/cc25fjNA.s:5142   .rodata._ZTVN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EEE:0000000000000000 _ZTVN3ros11NodeHandle_I18Atmega2560HardwareLi25ELi25ELi512ELi512EEE
     /tmp/cc25fjNA.s:5120   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/cc25fjNA.s:5152   .rodata._ZTVN3ros10SubscriberIN10kitty_msgs10KittyStateEvEE:0000000000000000 _ZTVN3ros10SubscriberIN10kitty_msgs10KittyStateEvEE
     /tmp/cc25fjNA.s:5131   .rodata._ZTVN10kitty_msgs10KittyStateE:0000000000000000 _ZTVN10kitty_msgs10KittyStateE

UNDEFINED SYMBOLS
SetSpeed
SetAngle
avr_uart_send_byte
AdcInit
StMotInit
DcMotInit
memcpy
realloc
avr_time_now
__udivmodsi4
__mulsi3
_ZN3ros16normalizeSecNSecERmS0_
avr_uart_receive_byte
__divmodhi4
avr_time_init
avr_uart_init
__do_global_ctors
__do_copy_data
__do_clear_bss
